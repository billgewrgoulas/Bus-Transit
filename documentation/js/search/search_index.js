var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ApiEffects.html",[0,1.495,1,3.407]],["body/injectables/ApiEffects.html",[0,1.24,1,2.825,2,1.237,3,0.072,4,0.025,5,0.029,6,2.455,7,0.104,8,0.283,9,4.032,10,4.032,11,4.396,12,4.396,13,4.396,14,4.396,15,4.396,16,4.396,17,4.396,18,3.76,19,3.76,20,3.76,21,4.396,22,4.396,23,3.207,24,1.255,25,4.032,26,4.032,27,0.713,28,1.865,29,3.341,30,4.518,31,1.705,32,1.562,33,2.455,34,0.516,35,0.008,36,0.277,37,0.118,38,0.497,39,2.304,40,1.907,41,6.643,42,6.628,43,3.506,44,3.332,45,7.735,46,7.315,47,3.506,48,6.709,49,3.506,50,5.508,51,8.097,52,3.506,53,7.912,54,2.455,55,3.506,56,3.506,57,3.506,58,3.506,59,2.455,60,3.506,61,5.035,62,2.062,63,5.035,64,3.506,65,7.485,66,2.726,67,5.035,68,7.485,69,5.035,70,2.455,71,3.506,72,3.506,73,4.355,74,3.506,75,1.04,76,3.506,77,5.216,78,3.506,79,3.506,80,2.455,81,3.506,82,3.506,83,5.039,84,1.609,85,3.506,86,2.416,87,3.506,88,3.506,89,6.821,90,2.455,91,3.506,92,4.618,93,3.506,94,2.172,95,3.506,96,5.404,97,3.506,98,2.455,99,3.506,100,3.506,101,2.455,102,3.506,103,3.506,104,3.506,105,5.834,106,2.413,107,3.506,108,1.145,109,3.506,110,2.57,111,3.506,112,3.506,113,2.455,114,3.506,115,3.506,116,3.38,117,3.506,118,2.654,119,3.506,120,3.506,121,2.455,122,3.506,123,3.506,124,3.506,125,5.892,126,3.506,127,3.506,128,2.455,129,3.506,130,3.506,131,6.44,132,3.506,133,0.455,134,3.506,135,3.506,136,2.455,137,3.506,138,3.506,139,3.506,140,3.506,141,3.506,142,2.455,143,3.506,144,3.506,145,3.506,146,3.506,147,2.455,148,3.506,149,3.506,150,1.381,151,3.506,152,3.506,153,2.455,154,3.506,155,3.506,156,3.506,157,3.506,158,2.455,159,3.506,160,3.506,161,3.506,162,3.506,163,2.455,164,3.506,165,3.506,166,3.506,167,3.506,168,2.455,169,3.506,170,3.506,171,3.506,172,3.506,173,2.455,174,0.151,175,0.284,176,0.567,177,2.181,178,1.668,179,1.464,180,2,181,1.078,182,0.427,183,1.591,184,1.865,185,0.588,186,1.361,187,1.025,188,2,189,0.977,190,0.577,191,2.181,192,0.577,193,2.181,194,2.181,195,1.865,196,1.757,197,2.181,198,2.181,199,2,200,2.181,201,2.181,202,2.181,203,2.181,204,2.181,205,2.181,206,2.181,207,2.181,208,2,209,1.591,210,0.029,211,0.224,212,1.059,213,0.003,214,0.003]],["title/injectables/ApiEffects-1.html",[0,1.254,1,2.858,215,1.093]],["body/injectables/ApiEffects-1.html",[0,1.238,1,2.822,2,1.235,3,0.072,4,0.025,5,0.028,7,0.104,8,0.283,9,4.028,10,4.028,11,4.392,12,4.392,13,4.392,14,4.392,15,4.392,16,4.392,17,4.392,18,3.757,19,3.757,20,3.757,21,4.392,22,4.392,23,3.204,24,1.254,25,4.028,26,4.028,27,0.712,28,1.863,29,3.34,30,4.516,31,1.639,32,1.562,34,0.515,35,0.008,36,0.277,37,0.117,38,0.496,39,2.303,40,1.907,41,6.642,42,6.627,43,3.502,44,3.332,45,7.734,46,7.313,47,3.502,48,6.707,49,3.502,50,5.506,51,8.096,52,3.502,53,7.911,55,3.502,56,3.502,57,3.502,58,3.502,60,3.502,61,5.032,62,2.06,63,5.032,64,3.502,65,7.483,66,2.724,67,5.032,68,7.483,69,5.032,71,3.502,72,3.502,73,4.354,74,3.502,75,1.039,76,3.502,77,5.214,78,3.502,79,3.502,81,3.502,82,3.502,83,5.037,84,1.607,85,3.502,86,2.414,87,3.502,88,3.502,89,6.818,91,3.502,92,4.615,93,3.502,94,2.17,95,3.502,96,5.401,97,3.502,99,3.502,100,3.502,102,3.502,103,3.502,104,3.502,105,5.831,106,2.411,107,3.502,108,1.144,109,3.502,110,2.568,111,3.502,112,3.502,114,3.502,115,3.502,116,3.377,117,3.502,118,2.651,119,3.502,120,3.502,122,3.502,123,3.502,124,3.502,125,5.889,126,3.502,127,3.502,129,3.502,130,3.502,131,6.437,132,3.502,133,0.454,134,3.502,135,3.502,137,3.502,138,3.502,139,3.502,140,3.502,141,3.502,143,3.502,144,3.502,145,3.502,146,3.502,148,3.502,149,3.502,150,1.38,151,3.502,152,3.502,154,3.502,155,3.502,156,3.502,157,3.502,159,3.502,160,3.502,161,3.502,162,3.502,164,3.502,165,3.502,166,3.502,167,3.502,169,3.502,170,3.502,171,3.502,172,3.502,174,0.152,175,0.283,176,0.566,177,2.178,178,1.666,179,1.462,180,1.998,181,1.076,182,0.426,183,1.589,184,1.863,185,0.587,186,1.36,187,1.024,189,1.57,190,0.577,192,0.577,193,2.178,194,2.178,196,1.755,197,2.178,198,2.178,199,1.998,200,2.178,201,2.178,210,0.028,211,0.224,212,1.059,213,0.003,214,0.003,216,2.452,217,2.452,218,2.452,219,2.452,220,2.452,221,2.452,222,2.452,223,2.452,224,2.452,225,2.452,226,2.452,227,2.452,228,2.452,229,2.452,230,2.452,231,2.452,232,2.452,233,2.452,234,2.452,235,2.452,236,3.757,237,2.178,238,1.076,239,2.178,240,1.666,241,2.178,242,1.235,243,1.408,244,1.998]],["title/components/AppComponent.html",[245,0.457,246,1.207]],["body/components/AppComponent.html",[3,0.052,4,0.045,5,0.052,7,0.191,8,0.446,24,1.144,27,0.815,32,1.508,34,0.948,35,0.007,36,0.806,37,0.342,38,0.913,39,1.672,40,1.384,75,0.948,133,0.362,174,0.113,175,0.521,182,0.784,210,0.052,211,0.412,213,0.005,214,0.005,245,0.685,246,1.951,247,1.672,248,1.235,249,1.235,250,1.235,251,1.235,252,4.512,253,1.384,254,1.809,255,1.188,256,2.479,257,2.297,258,3.578,259,1.58,260,7.135,261,1.58,262,6.23,263,1.66,264,4.623,265,5.107,266,1.237,267,1.951,268,7.694,269,4.733,270,5.42,271,4.512,272,5.226,273,6.23,274,5.075,275,3.428,276,5.107,277,6.23,278,4.512,279,1.237,280,1.359,281,3.23,282,4.733,283,1.359,284,3.3,285,5.534,286,4.512,287,3.428,288,4.008,289,4.008,290,1.641,291,4.512,292,3.23,293,3.065,294,5.075,295,1.539,296,1.678,297,1.931,298,1.738,299,1.521,300,1.061,301,1.839,302,4.512,303,2.344,304,1.235,305,1.705,306,1.705,307,1.235,308,2.106,309,1.235,310,1.235,311,1.166,312,2.497,313,1.144,314,1.144,315,1.144,316,1.144,317,1.705,318,1.166,319,1.144,320,1.705,321,1.166,322,1.235,323,1.705,324,1.166,325,1.235,326,1.705,327,1.144,328,1.144,329,1.359,330,1.953,331,1.144,332,2.106,333,1.166,334,1.705,335,1.235,336,1.144,337,1.235,338,1.166,339,1.235,340,1.235,341,1.166,342,1.235,343,1.144,344,1.235,345,1.144,346,1.235,347,1.166,348,1.144,349,1.879,350,1.144,351,1.144,352,1.953,353,1.123,354,1.211,355,1.144,356,1.123,357,1.125,358,1.705,359,1.144,360,1.705,361,1.123,362,0.879,363,1.166,364,1.144,365,1.144,366,1.061,367,1.166,368,1.235,369,1.235,370,1.144,371,1.188,372,1.166,373,1.061,374,1.166,375,1.705,376,1.166,377,1.166,378,1.437,379,1.144,380,1.062,381,1.123,382,1.144,383,1.166,384,1.166,385,1.166,386,2.065,387,1.144,388,1.144,389,1.144,390,1.144,391,1.211,392,1.235,393,1.235]],["title/modules/AppModule.html",[394,1.381,395,3.616]],["body/modules/AppModule.html",[1,3.689,3,0.06,4,0.052,5,0.06,31,1.212,35,0.007,174,0.175,175,0.596,176,1.572,179,3.073,192,1.212,209,3.339,210,0.06,211,0.471,213,0.005,214,0.005,246,2.363,257,1.384,272,5.896,288,4.578,289,4.578,357,0.931,395,7.184,396,2.262,397,3.654,398,4.578,399,4.578,400,4.578,401,4.578,402,4.578,403,6.213,404,5.175,405,6.213,406,3.914,407,2.763,408,2.763,409,5.154,410,4.063,411,3.433,412,3.24,413,6.054,414,3.24,415,6.815,416,5.552,417,4.199,418,4.629,419,2.96,420,6.815,421,4.578,422,3.339,423,6.815,424,3.778,425,5.154,426,3.501,427,5.154,428,6.782,429,4.578,430,4.878,431,3.689,432,5.154,433,5.154,434,6.054,435,5.154,436,5.552,437,3.073,438,5.154,439,4.578,440,5.154,441,5.154,442,5.154,443,3.914,444,1.357,445,5.154,446,6.815,447,4.199,448,4.878,449,5.154,450,5.177,451,5.154,452,5.154,453,5.552,454,5.154,455,6.054,456,5.154,457,5.154,458,2.374,459,2.763,460,5.154,461,5.154,462,5.154,463,3.689,464,5.154,465,5.154,466,5.154,467,5.154]],["title/modules/AppRoutingModule.html",[394,1.381,403,3.407]],["body/modules/AppRoutingModule.html",[3,0.083,4,0.072,5,0.083,35,0.007,174,0.151,175,0.829,210,0.083,211,0.655,213,0.006,214,0.006,396,3.149,403,5.994,412,3.411,414,3.982,443,4.81,444,1.89,468,7.174,469,4.873,470,3.226,471,1.154,472,7.174,473,3.978]],["title/interfaces/AppState.html",[190,1.119,474,0.142]],["body/interfaces/AppState.html",[3,0.039,4,0.033,5,0.039,7,0.141,8,0.358,30,2.156,35,0.007,37,0.412,50,5.714,66,3.728,106,1.819,133,0.658,174,0.156,176,0.768,179,1.984,185,0.797,187,1.389,188,2.711,189,1.325,190,2.283,192,0.782,202,2.956,203,2.956,204,2.956,205,2.956,206,2.956,207,2.956,210,0.07,213,0.004,214,0.004,215,1.368,236,2.528,238,3.424,243,1.911,283,1.31,284,1.539,295,2.935,314,2.035,329,1.702,373,2.113,380,1.4,394,2.182,436,2.711,470,3.042,471,1.075,474,0.099,475,0.648,476,1.045,477,2.956,478,4.214,479,7.294,480,7.294,481,4.786,482,3.469,483,1.36,484,4.145,485,3.719,486,2.789,487,3.581,488,3.836,489,4.145,490,4.073,491,3.396,492,2.26,493,2.872,494,1.911,495,3.396,496,2.26,497,2.956,498,3.103,499,2.065,500,2.26,501,2.981,502,0.928,503,2.156,504,4.442,505,2.956,506,2.528,507,4.609,508,6.697,509,2.61,510,2.956,511,4.442,512,5.933,513,2.956,514,2.956,515,4.442,516,2.956,517,6.36,518,1.911,519,2.956,520,2.956,521,2.26,522,3.327,523,3.327,524,5,525,2.956,526,2.956,527,2.956,528,2.956,529,2.956,530,2.956,531,2.956,532,2.956,533,2.956,534,5.336,535,2.956,536,2.956,537,2.956,538,2.956,539,2.26,540,2.956,541,2.956,542,2.26,543,2.956,544,4.442,545,2.956,546,2.956,547,2.956,548,2.956,549,2.956,550,2.956,551,2.956,552,2.956,553,2.956,554,1.859,555,2.956,556,4.442,557,2.956,558,2.956,559,2.956,560,2.956,561,2.956,562,3.327,563,3.327,564,1.845,565,3.327,566,2.382,567,3.327,568,2.956,569,4.442,570,1.901,571,2.956,572,4.073,573,2.956,574,2.956,575,2.956,576,2.956,577,2.956,578,2.956,579,2.956,580,2.956,581,2.956,582,2.956]],["title/interfaces/AppState-1.html",[190,0.939,215,1.093,474,0.119]],["body/interfaces/AppState-1.html",[3,0.04,4,0.035,5,0.04,7,0.147,8,0.37,35,0.007,37,0.416,50,5.808,66,3.766,106,1.879,133,0.666,174,0.153,176,0.802,187,1.452,189,1.384,190,2.283,192,0.817,210,0.072,213,0.004,214,0.004,215,1.414,236,3.925,237,3.088,238,3.569,239,3.088,240,2.361,241,3.088,242,1.751,243,1.997,244,2.832,283,1.345,284,1.608,295,2.926,314,2.062,329,1.727,373,2.114,380,1.387,394,2.218,436,2.832,470,2.958,471,1.098,474,0.104,475,0.677,477,3.088,478,4.259,479,7.224,480,7.224,481,4.849,482,3.545,483,1.396,484,4.236,485,3.789,486,2.814,487,3.66,488,3.921,489,4.236,490,4.209,491,3.51,492,2.361,493,2.967,494,1.997,495,3.51,496,2.361,498,3.206,499,2.157,500,2.361,501,3.081,502,0.97,504,4.59,505,3.088,506,2.641,507,4.607,508,6.692,509,2.608,510,3.088,511,4.59,512,5.477,513,3.088,514,3.088,515,4.59,516,3.088,517,5.477,518,1.997,519,3.088,520,3.088,521,2.361,525,3.088,526,3.088,527,3.088,528,3.088,529,3.088,530,3.088,531,3.088,532,3.088,533,3.088,534,5.477,535,3.088,536,3.088,537,3.088,538,3.088,539,2.361,540,3.088,541,3.088,542,2.361,543,3.088,544,4.59,545,3.088,546,3.088,547,3.088,548,3.088,549,3.088,550,3.088,551,3.088,552,3.088,553,3.088,554,1.921,555,3.088,556,4.59,557,3.088,558,3.088,559,3.088,560,3.088,561,3.088,568,3.088,569,4.59,570,1.965,571,3.088,572,4.209,573,3.088,574,3.088,575,3.088,576,3.088,577,3.088,578,3.088,579,3.088,580,3.088,581,3.088,582,3.088,583,3.477]],["title/injectables/AuthEffects.html",[0,1.495,453,3.878]],["body/injectables/AuthEffects.html",[0,2.363,2,3.026,3,0.07,4,0.06,5,0.07,7,0.254,8,0.539,27,1.085,30,5.858,32,1.483,34,1.262,35,0.007,36,0.679,37,0.288,38,1.216,39,2.019,40,1.672,41,6.343,42,6.16,44,3.122,174,0.16,175,0.694,178,4.081,179,3.582,185,1.439,187,2.508,189,2.392,210,0.07,211,0.549,212,1.286,213,0.006,214,0.006,290,2.185,295,2.935,444,1.582,453,6.128,458,3.195,584,6.008,585,8.212,586,7.294,587,6.008,588,6.008,589,7.522,590,7.522,591,7.522,592,7.522,593,7.522,594,3.508,595,7.011,596,6.008,597,7.522,598,6.681,599,6.008,600,3.221]],["title/guards/AuthGuardService.html",[601,4.229,602,3.233]],["body/guards/AuthGuardService.html",[0,2.476,3,0.075,4,0.065,5,0.075,7,0.274,23,4.199,27,1.171,32,1.424,34,1.361,35,0.007,36,0.732,37,0.31,38,1.311,174,0.154,175,0.749,210,0.075,211,0.592,212,1.387,213,0.006,214,0.006,253,1.44,258,3.722,263,1.594,266,1.565,279,1.287,283,1.413,284,2.998,290,2.357,295,2.21,357,1.171,366,1.524,444,1.707,458,3.247,459,4.554,509,2.199,594,2.641,602,5.354,603,5.279,604,8.494,605,6.48,606,6.255,607,6.48,608,4.59,609,6.48,610,6.48,611,6.48,612,4.199,613,6.48,614,6.48,615,4.402,616,2.706]],["title/modules/AuthModule.html",[394,1.381,617,3.233]],["body/modules/AuthModule.html",[3,0.069,4,0.06,5,0.069,35,0.007,174,0.172,175,0.689,210,0.069,211,0.545,213,0.006,214,0.006,336,2.288,355,2.288,396,2.617,397,4.014,406,4.299,407,3.197,408,3.197,410,4.463,411,3.771,412,3.559,414,3.559,418,5.085,419,3.424,426,4.05,459,3.197,473,3.306,602,5.085,608,4.687,617,6.511,618,5.296,619,5.296,620,5.296,621,5.296,622,6.459,623,5.183,624,5.962,625,4.646,626,3.424,627,5.296,628,5.296,629,7.486,630,5.962,631,4.05,632,6.65,633,5.296,634,3.863,635,3.863,636,4.05,637,6.65,638,5.296,639,6.65,640,5.296,641,4.529,642,4.529]],["title/modules/AuthRoutingModule.html",[394,1.381,622,3.407]],["body/modules/AuthRoutingModule.html",[3,0.081,4,0.07,5,0.081,23,4.493,24,1.758,35,0.007,174,0.163,175,0.801,210,0.081,211,0.634,213,0.006,214,0.006,245,0.788,336,2.081,355,2.081,396,3.044,412,3.297,414,3.903,443,4.715,444,1.827,469,4.711,470,3.18,471,1.116,473,3.845,622,5.876,627,6.16,628,6.16,643,6.935,644,4.715,645,4.711]],["title/injectables/AuthService.html",[0,1.495,608,2.472]],["body/injectables/AuthService.html",[0,2.401,2,3.106,3,0.072,4,0.062,5,0.072,7,0.261,8,0.548,27,1.501,32,1.613,35,0.007,36,0.864,133,0.495,174,0.15,175,0.713,210,0.072,211,0.563,212,1.779,213,0.006,214,0.006,258,3.542,263,1.763,266,1.518,279,1.65,280,1.345,283,1.668,295,2.103,471,0.992,509,2.318,598,5.478,608,3.971,612,3.996,646,6.167,647,8.31,648,8.687,649,8.687,650,8.687,651,7.646,652,6.167,653,6.228,654,6.167,655,6.167,656,6.167,657,6.791,658,5.478,659,7.646,660,5.478,661,6.167,662,2.195,663,7.381,664,7.646,665,6.167,666,6.167,667,6.167,668,6.167,669,6.167]],["title/interfaces/BookInfo.html",[474,0.142,670,3.616]],["body/interfaces/BookInfo.html",[0,2.087,3,0.1,4,0.05,5,0.058,7,0.21,8,0.476,29,3.346,31,1.881,35,0.008,37,0.318,44,1.886,62,1.804,73,2.659,75,1.396,77,4.512,133,0.669,174,0.166,175,0.573,176,1.144,181,2.177,182,0.862,185,1.188,186,2.75,187,2.071,189,1.974,190,1.166,192,1.166,210,0.093,211,0.453,212,1.422,213,0.005,214,0.005,215,2.05,263,1.611,283,1.082,284,2.294,290,1.804,295,2.266,316,2.029,384,1.717,424,2.75,444,1.306,458,2.609,471,0.798,474,0.198,475,0.966,476,1.558,482,4.736,483,1.889,486,2.129,501,2.957,503,4.853,507,3.804,509,2.396,600,2.659,662,1.765,670,6.078,671,4.04,672,4.965,673,3.961,674,4.466,675,2.848,676,3.078,677,4.466,678,3.55,679,1.384,680,4.04,681,4.04,682,1.844,683,6.518,684,3.369,685,1.439,686,4.04,687,4.04,688,4.77,689,2.364,690,5.412,691,4.04,692,4.122,693,4.04,694,4.04,695,4.04,696,4.755,697,4.755,698,4.755,699,4.04,700,4.04,701,4.04,702,4.04,703,4.04,704,4.04,705,4.04,706,4.04,707,4.04,708,3.562,709,4.04,710,3.768,711,4.04,712,4.04,713,4.04,714,4.04,715,4.04,716,4.04,717,4.04,718,4.04,719,4.04,720,4.04,721,4.04]],["title/components/BookOptionsComponent.html",[245,0.457,315,1.207]],["body/components/BookOptionsComponent.html",[3,0.048,4,0.042,5,0.048,7,0.176,24,1.056,27,0.752,31,1.967,32,1.342,34,1.238,35,0.007,36,0.84,37,0.282,38,1.192,62,1.515,75,0.875,174,0.134,175,0.481,176,0.961,182,0.724,190,0.979,192,0.979,210,0.048,211,0.381,212,0.892,213,0.004,214,0.004,245,0.656,246,1.056,247,1.581,248,1.14,249,1.14,250,1.14,251,1.14,253,1.309,254,1.733,255,1.097,256,2.469,257,2.105,259,1.494,261,1.494,263,1.527,266,1.17,267,1.884,279,1.357,280,1.775,290,1.515,296,1.549,298,1.907,299,1.987,300,1.385,304,1.14,305,1.612,306,1.612,307,1.14,308,2.033,309,1.14,310,1.14,311,1.076,312,2.462,313,1.056,314,1.494,315,1.884,316,2.167,317,1.612,318,1.076,319,1.056,320,1.612,321,1.076,322,1.14,323,1.612,324,1.076,325,1.14,326,1.612,327,1.056,328,1.056,329,1.285,330,1.87,331,1.056,332,2.033,333,1.076,334,1.87,335,1.14,336,1.056,337,1.14,338,1.076,339,1.14,340,1.14,341,1.076,342,1.14,343,1.056,344,1.14,345,1.056,346,1.14,347,1.076,348,1.056,349,1.8,350,1.056,351,1.056,352,1.87,353,1.036,354,1.118,355,1.056,356,1.036,357,1.064,358,1.612,359,1.056,360,1.612,361,1.036,362,0.812,363,1.076,364,1.056,365,1.056,366,1.607,367,1.076,368,1.14,369,1.14,370,1.056,371,1.097,372,1.076,373,0.979,374,1.076,375,1.612,376,1.076,377,1.076,378,1.359,379,1.056,380,1.005,381,1.036,382,1.056,383,1.076,384,1.076,385,1.076,386,2.105,387,1.056,388,1.056,389,1.056,390,1.056,391,2.185,392,1.14,393,1.14,394,1.709,444,1.097,458,2.835,470,2.142,476,1.308,594,2.401,616,2.46,722,7.839,723,6.386,724,3.393,725,5.568,726,4.799,727,5.891,728,6.053,729,3.164,730,3.7,731,5.891,732,3.393,733,3.7,734,3.7,735,2.46,736,4.001,737,1.232,738,1.644,739,1.778,740,1.658,741,1.813,742,1.98,743,1.98,744,1.482,745,2.096,746,2.521,747,4.165,748,2.022,749,1.658,750,1.698,751,2.098,752,1.391,753,1.584,754,2.644,755,1.232,756,1.876,757,2.191,758,1.698,759,1.739,760,1.739,761,1.658,762,1.421,763,1.62,764,1.482,765,2.233,766,1.658,767,2.037,768,1.62,769,1.208,770,2.521,771,3.164,772,1.927,773,1.98]],["title/interfaces/Booking.html",[75,1,474,0.142]],["body/interfaces/Booking.html",[3,0.07,4,0.061,5,0.07,7,0.255,8,0.541,35,0.007,37,0.451,75,1.811,133,0.787,174,0.109,210,0.1,213,0.006,214,0.006,215,1.652,357,1.557,471,1.214,474,0.225,475,1.176,482,3.918,483,1.952,500,4.099,501,3.598,502,1.684,539,5.124,685,1.751,692,5.349,769,2.501,774,5.361,775,4.217,776,6.549,777,4.099,778,6.549,779,4.622,780,6.17,781,6.549,782,2.805,783,2.805,784,2.805,785,2.244,786,4.32,787,4.585]],["title/interfaces/Booking-1.html",[75,0.839,215,1.093,474,0.119]],["body/interfaces/Booking-1.html",[3,0.07,4,0.061,5,0.07,7,0.255,8,0.541,35,0.007,37,0.451,75,1.811,133,0.787,174,0.109,210,0.1,213,0.006,214,0.006,215,1.652,357,1.557,471,1.214,474,0.225,475,1.176,482,3.918,483,1.952,500,4.099,501,3.598,502,1.684,539,5.124,685,1.751,692,5.349,769,2.501,775,4.217,776,6.549,777,4.099,778,6.549,779,4.622,780,6.17,781,6.549,782,2.805,783,2.805,784,2.805,785,2.244,786,4.32,787,4.585,788,5.361]],["title/components/BookingComponent.html",[245,0.457,311,1.23]],["body/components/BookingComponent.html",[3,0.036,4,0.031,5,0.036,7,0.271,24,0.775,27,1.03,32,1.504,35,0.007,36,0.53,37,0.363,39,1.259,40,1.042,75,1.684,84,1.911,108,2.112,174,0.085,175,0.353,182,1.112,210,0.036,211,0.279,213,0.004,214,0.004,245,0.662,246,0.775,247,1.259,248,0.837,249,0.837,250,0.837,251,0.837,253,1.042,254,1.446,255,0.805,256,2.421,257,1.852,259,1.189,261,1.189,263,1.637,264,3.696,265,2.188,266,0.931,267,1.622,279,1.27,280,1.505,283,1.023,284,2.169,296,2.378,297,1.308,298,2.031,299,2.11,300,1.711,301,2.607,304,0.837,305,1.283,306,1.283,307,0.837,308,1.75,309,0.837,310,0.837,311,1.653,312,2.311,313,0.775,314,0.775,315,0.775,316,1.189,317,1.283,318,0.79,319,1.189,320,1.283,321,0.79,322,0.837,323,1.283,324,0.79,325,0.837,326,1.283,327,0.775,328,0.775,329,1.023,330,1.561,331,0.775,332,1.75,333,0.79,334,1.283,335,0.837,336,0.775,337,0.837,338,0.79,339,1.888,340,0.837,341,0.79,342,0.837,343,0.775,344,1.283,345,0.775,346,0.837,347,0.79,348,0.775,349,1.502,350,0.775,351,0.775,352,1.561,353,0.761,354,1.717,355,0.775,356,0.761,357,0.847,358,1.283,359,0.775,360,1.283,361,0.761,362,0.596,363,0.79,364,0.775,365,0.775,366,0.719,367,0.79,368,0.837,369,0.837,370,0.775,371,0.805,372,0.79,373,0.719,374,0.79,375,1.283,376,0.79,377,0.79,378,1.082,379,0.775,380,0.8,381,0.761,382,0.775,383,0.79,384,0.79,385,0.79,386,1.717,387,0.775,388,0.775,389,0.775,390,0.775,391,0.821,392,0.837,393,0.837,483,1.062,662,2.03,676,1.897,737,0.904,738,1.591,739,1.721,740,1.217,741,1.443,745,1.669,748,2.041,749,1.867,750,1.246,752,1.905,753,1.162,754,2.03,755,2.421,756,1.377,757,2.841,761,1.217,762,2.353,763,1.189,764,2.962,766,1.217,768,2.219,769,1.36,770,2.737,780,3.356,789,3.057,790,5.704,791,4.689,792,5.681,793,5.21,794,6.396,795,2.229,796,2.6,797,5.704,798,4.689,799,3.057,800,3.057,801,3.057,802,4.201,803,3.057,804,3.057,805,3.057,806,3.057,807,3.057,808,3.057,809,3.546,810,3.057,811,3.057,812,3.057,813,4.689,814,4.689,815,4.689,816,4.689,817,3.039,818,2.169,819,2.716,820,3.057,821,2.716,822,2.716,823,2.716,824,2.716,825,4.578,826,2.746,827,1.981,828,1.453,829,1.453,830,1.981,831,1.897,832,1.414,833,1.54,834,1.897,835,2.91,836,1.897,837,2.382,838,2.693,839,1.246,840,1.246,841,2.569,842,2.257,843,2.181,844,2.197,845,5.93,846,3.356,847,2.188,848,2.322,849,3.962,850,4.344,851,1.981,852,1.823,853,3.824,854,3.185,855,2.569,856,2.49,857,2.91,858,3.765,859,2.79,860,4.083,861,2.49,862,3.562,863,2.188,864,3.057,865,4.083,866,1.639,867,1.639,868,3.78,869,3.903,870,4.634,871,2.49,872,4.937,873,5.424,874,3.82,875,3.82,876,4.716,877,1.246,878,3.82,879,1.981,880,2.546,881,4.333,882,3.057,883,3.82,884,3.185,885,2.322,886,2.112,887,2.716,888,2.188,889,3.057,890,2.188,891,1.495,892,2.49,893,1.342,894,1.756,895,3.057,896,2.49,897,1.756]],["title/pipes/BookingPipe.html",[898,2.954,899,3.616]],["body/pipes/BookingPipe.html",[3,0.077,4,0.067,5,0.077,32,1.2,34,1.396,35,0.007,36,0.97,37,0.318,38,1.344,40,1.908,62,2.416,75,1.916,133,0.715,174,0.145,175,0.768,210,0.077,211,0.607,213,0.006,214,0.006,253,1.477,255,1.75,263,1.501,266,1.319,279,1.319,314,2.029,471,1.069,509,2.233,676,4.123,898,4.965,899,6.079,900,5.412,901,6.644,902,4.513,903,7.107,904,6.644,905,7.107,906,5.412,907,5.412,908,5.901,909,6.644,910,6.644,911,6.644,912,6.644,913,5.901,914,4.755]],["title/interfaces/BookingState.html",[474,0.142,482,2.472]],["body/interfaces/BookingState.html",[3,0.077,4,0.067,5,0.077,7,0.282,8,0.574,35,0.007,37,0.319,75,1.805,133,0.763,174,0.12,210,0.104,213,0.006,214,0.006,215,1.821,357,1.202,471,1.289,474,0.239,475,1.297,482,4.463,483,2.019,500,4.52,501,3.968,502,1.857,539,6.197,685,2.324,692,4.13,769,1.931,774,5.911,775,3.255,776,5.056,777,3.164,778,5.056,779,3.568,780,4.763,781,5.056,782,2.978,783,3.195,784,2.978,785,2.474,786,4.763,787,5.056]],["title/interfaces/BookingState-1.html",[215,1.093,474,0.119,482,2.074]],["body/interfaces/BookingState-1.html",[3,0.077,4,0.067,5,0.077,7,0.282,8,0.574,35,0.007,37,0.319,75,1.805,133,0.763,174,0.12,210,0.104,213,0.006,214,0.006,215,1.821,357,1.202,471,1.289,474,0.239,475,1.297,482,4.463,483,2.019,500,4.52,501,3.968,502,1.857,539,6.197,685,2.324,692,4.13,769,1.931,775,3.255,776,5.056,777,3.164,778,5.056,779,3.568,780,4.763,781,5.056,782,2.978,783,3.195,784,2.978,785,2.474,786,4.763,787,5.056,788,5.911]],["title/interfaces/BookingState-2.html",[474,0.119,482,2.074,915,3.033]],["body/interfaces/BookingState-2.html",[0,2.05,3,0.104,4,0.048,5,0.056,7,0.204,8,0.468,29,3.288,31,1.861,35,0.008,37,0.379,44,1.837,62,1.758,73,2.591,75,1.371,77,4.434,133,0.593,174,0.166,175,0.558,176,1.115,181,2.121,182,0.84,185,1.158,186,2.679,187,2.018,189,1.924,190,1.136,192,1.136,210,0.092,211,0.441,212,1.397,213,0.005,214,0.005,215,2.023,263,1.599,283,1.612,284,2.235,290,1.758,295,2.226,316,2.209,384,2.137,424,2.679,444,1.273,458,2.575,471,0.777,474,0.195,475,0.942,476,1.518,482,4.756,483,1.872,486,2.538,501,2.881,503,5.358,507,3.764,509,2.378,600,2.591,662,1.72,670,6.282,671,3.937,672,2.999,673,3.892,674,4.408,675,2.775,676,2.999,677,4.408,678,3.459,679,1.348,680,3.937,681,3.937,682,1.797,683,7.097,684,3.282,685,1.402,686,3.937,687,3.937,688,4.72,689,2.323,690,5.318,691,3.937,692,4.051,693,3.937,694,3.937,695,3.937,696,4.673,697,4.673,698,4.673,699,3.937,700,3.937,701,3.937,702,3.937,703,3.937,704,3.937,705,3.937,706,3.937,707,3.937,708,3.5,709,3.937,710,3.671,711,3.937,712,3.937,713,3.937,714,3.937,715,3.937,716,3.937,717,3.937,718,3.937,719,3.937,720,3.937,721,3.937]],["title/components/BookingsComponent.html",[245,0.457,313,1.207]],["body/components/BookingsComponent.html",[3,0.037,4,0.032,5,0.037,7,0.134,8,0.345,24,0.804,27,0.871,31,1.804,32,1.517,34,1.551,35,0.007,36,0.894,37,0.388,38,1.494,39,0.851,40,1.641,75,1.789,108,2.226,133,0.634,174,0.152,175,0.366,176,0.731,181,2.116,182,0.838,185,0.759,189,1.262,190,0.745,192,0.745,210,0.037,211,0.29,212,1.693,213,0.004,214,0.004,245,0.673,246,0.804,247,1.294,248,0.868,249,0.868,250,0.868,251,0.868,253,1.071,254,1.479,255,0.835,256,2.427,257,1.882,259,1.222,261,1.222,263,1.73,266,0.957,267,1.652,279,1.524,280,1.767,296,1.792,298,1.627,299,1.931,300,1.371,304,0.868,305,1.319,306,1.319,307,0.868,308,1.784,309,0.868,310,0.868,311,0.819,312,2.33,313,1.652,314,1.872,315,0.804,316,0.804,317,1.319,318,0.819,319,0.804,320,1.319,321,0.819,322,0.868,323,1.319,324,0.819,325,0.868,326,1.319,327,0.804,328,0.804,329,1.051,330,1.596,331,0.804,332,1.784,333,0.819,334,1.596,335,0.868,336,0.804,337,0.868,338,0.819,339,0.868,340,0.868,341,0.819,342,0.868,343,0.804,344,0.868,345,0.804,346,0.868,347,0.819,348,0.804,349,1.536,350,0.804,351,0.804,352,1.596,353,0.789,354,1.294,355,0.804,356,0.789,357,0.871,358,1.319,359,0.804,360,1.319,361,0.789,362,0.618,363,0.819,364,0.804,365,0.804,366,1.133,367,0.819,368,0.868,369,0.868,370,0.804,371,0.835,372,0.819,373,1.532,374,0.819,375,1.319,376,0.819,377,0.819,378,1.112,379,0.804,380,0.822,381,0.789,382,0.804,383,0.819,384,0.819,385,0.819,386,1.882,387,0.804,388,0.804,389,0.804,390,0.804,391,1.294,392,0.868,393,0.868,394,2.034,411,2.428,444,0.835,458,2.673,470,1.153,476,0.996,482,1.646,483,1.321,507,3.333,594,1.292,600,1.7,616,1.324,676,1.967,679,1.956,682,1.179,684,5.015,689,2.076,692,1.967,728,5.309,735,1.324,736,2.153,737,2.074,738,2.376,739,1.455,740,1.262,741,1.796,742,1.507,743,1.507,744,2.495,745,1.715,746,2.063,748,1.426,749,1.262,750,1.292,751,1.597,752,1.61,753,1.205,754,1.715,755,0.938,756,1.428,757,2.089,758,1.965,759,2.013,760,2.013,761,1.919,762,1.081,763,1.233,764,1.128,765,1.7,766,1.262,767,1.55,768,1.875,769,1.398,770,2.063,772,1.466,773,1.507,786,2.269,792,4.282,793,3.927,817,1.324,818,2.218,842,1.037,843,1.081,844,0.957,877,2.656,916,3.17,917,5.833,918,4.82,919,3.029,920,3.274,921,4.82,922,2.582,923,4.115,924,2.177,925,4.82,926,2.585,927,3.662,928,3.17,929,3.45,930,3.17,931,3.274,932,3.17,933,4.82,934,3.17,935,4.82,936,3.17,937,4.82,938,3.17,939,3.17,940,3.17,941,3.17,942,2.582,943,2.582,944,2.816,945,2.503,946,1.89,947,2.582,948,1.104,949,1.128,950,3.17,951,3.17,952,1.646,953,3.17,954,1.89,955,3.927,956,3.17,957,2.582,958,3.17,959,3.17,960,2.816,961,3.17,962,3.17,963,3.17,964,3.17,965,3.17,966,3.17,967,3.17,968,2.153,969,2.408,970,2.153,971,4.82,972,2.582,973,4.82,974,1.428,975,1.428,976,3.17,977,2.582,978,2.656,979,2.594,980,1.391,981,1.428,982,1.357,983,1.292,984,1.357,985,1.428,986,1.324,987,1.391]],["title/injectables/BookingsStore.html",[0,1.495,684,3.233]],["body/injectables/BookingsStore.html",[0,1.806,2,2.028,3,0.1,4,0.04,5,0.047,7,0.17,8,0.412,27,0.727,29,3.685,31,1.991,32,1.496,34,0.846,35,0.008,36,0.455,37,0.193,38,0.814,39,2.16,40,1.788,44,1.53,62,2.091,73,2.158,75,1.409,77,4.969,133,0.621,174,0.16,175,0.465,176,0.929,181,1.767,182,0.7,185,0.964,186,2.232,187,1.681,189,1.602,190,0.946,192,0.946,210,0.085,211,0.368,212,1.231,213,0.004,214,0.004,215,2.118,263,1.742,283,0.878,284,2.66,290,1.464,295,2.287,316,2.04,384,1.486,424,2.232,444,1.06,458,2.886,471,0.648,474,0.172,476,1.264,482,4.822,483,1.657,486,1.843,501,2.4,503,4.346,507,4.027,509,2.494,600,2.158,662,1.433,670,5.558,671,3.279,672,2.498,673,3.999,674,4.613,675,2.312,676,2.498,677,4.613,678,2.881,679,1.123,680,3.279,681,3.279,682,1.497,683,6.556,684,3.905,685,1.668,686,3.279,687,5.464,688,5.05,689,2.604,690,5.96,691,5.464,692,4.54,693,5.464,694,5.464,695,5.464,696,5.237,697,5.237,698,5.237,699,4.684,700,4.684,701,4.684,702,4.684,703,4.684,704,4.684,705,4.684,706,4.684,707,4.684,708,3.923,709,4.684,710,5.095,711,4.684,712,4.684,713,4.684,714,4.684,715,4.684,716,4.684,717,4.684,718,4.684,719,4.684,720,4.684,721,4.684,988,4.025,989,4.025,990,4.025,991,4.025,992,4.025,993,4.025,994,4.025,995,4.025]],["title/components/BusEntityComponent.html",[245,0.457,318,1.23]],["body/components/BusEntityComponent.html",[3,0.04,4,0.035,5,0.04,7,0.147,24,0.882,27,0.629,32,1.381,34,1.296,35,0.007,36,0.825,37,0.366,38,1.248,39,0.934,40,0.773,75,0.731,94,1.527,108,2.49,174,0.132,175,0.402,182,0.605,185,0.834,210,0.04,211,0.318,213,0.004,214,0.004,215,0.952,245,0.592,246,0.882,247,1.388,248,0.952,249,0.952,250,0.952,251,0.952,253,1.149,254,1.564,255,0.916,256,2.442,257,1.959,259,1.311,261,1.311,263,1.526,266,1.027,267,1.732,279,1.225,280,1.346,290,1.266,296,2.294,297,1.489,298,2.036,299,2.121,300,1.716,301,2.107,304,0.952,305,1.415,306,1.415,307,0.952,308,1.869,309,0.952,310,0.952,311,0.899,312,2.378,313,0.882,314,0.882,315,0.882,316,0.882,317,1.415,318,1.765,319,2.107,320,1.415,321,0.899,322,0.952,323,1.415,324,0.899,325,0.952,326,1.415,327,0.882,328,0.882,329,1.128,330,1.688,331,0.882,332,1.869,333,0.899,334,1.415,335,0.952,336,0.882,337,0.952,338,0.899,339,1.688,340,0.952,341,0.899,342,0.952,343,0.882,344,0.952,345,0.882,346,0.952,347,0.899,348,0.882,349,1.625,350,0.882,351,0.882,352,1.688,353,0.866,354,0.934,355,0.882,356,0.866,357,0.934,358,1.415,359,0.882,360,1.415,361,0.866,362,0.678,363,0.899,364,0.882,365,0.882,366,0.818,367,0.899,368,0.952,369,0.952,370,0.882,371,0.916,372,0.899,373,0.818,374,0.899,375,1.415,376,0.899,377,0.899,378,1.193,379,0.882,380,0.882,381,0.866,382,0.882,383,0.899,384,0.899,385,0.899,386,1.833,387,0.882,388,0.882,389,0.882,390,0.882,391,0.934,392,0.952,393,0.952,471,0.56,483,1.842,509,1.443,662,1.238,679,0.971,737,1.029,738,0.971,739,1.56,740,1.385,741,1.899,748,1.53,750,1.418,752,1.727,753,1.323,754,1.84,755,2.159,757,2.538,762,1.763,763,1.353,764,2.597,766,2.058,768,2.011,769,1.5,770,2.213,795,2.458,796,2.867,802,3.421,809,2.867,817,2.852,818,2.597,825,5.474,826,2.058,827,2.255,828,1.654,829,1.654,830,2.255,831,2.159,832,1.61,833,1.753,834,2.159,835,3.208,836,2.159,837,2.159,838,1.998,839,1.418,840,1.418,841,2.779,842,2.018,843,1.763,844,2.061,846,2.491,848,2.643,849,2.969,851,2.255,852,2.075,853,3.786,854,3.512,855,1.567,856,2.835,857,3.208,858,2.213,859,1.702,860,4.416,861,2.835,862,2.643,879,2.255,915,2.643,924,2.281,948,1.212,949,1.238,996,4.246,997,7.919,998,7.034,999,3.091,1000,5.48,1001,4.593,1002,4.212,1003,5.17,1004,3.828,1005,3.828,1006,3.48,1007,5.17,1008,3.928,1009,3.357,1010,3.48,1011,5.17,1012,6.83,1013,3.48,1014,5.17,1015,3.091,1016,5.17,1017,3.091,1018,2.363,1019,1.807,1020,3.48,1021,3.091,1022,6.17,1023,3.48,1024,4.593,1025,5.17,1026,4.593,1027,5.17,1028,5.17,1029,5.17,1030,5.17,1031,5.17,1032,3.928,1033,5.17,1034,5.17]],["title/interfaces/CurrentRoute.html",[474,0.142,1035,2.838]],["body/interfaces/CurrentRoute.html",[3,0.065,4,0.056,5,0.065,7,0.235,8,0.513,27,1.003,31,1.861,35,0.007,37,0.343,44,2.111,86,3.252,133,0.574,174,0.17,175,0.642,176,1.281,182,0.965,185,1.33,187,2.318,189,2.21,190,1.305,192,1.305,210,0.065,211,0.507,212,1.79,213,0.005,214,0.005,245,0.687,253,1.234,254,1.814,256,1.408,259,1.408,261,1.408,263,1.569,267,1.408,280,1.56,283,1.727,356,1.381,357,1.68,362,1.686,411,2.797,459,2.977,474,0.166,475,1.082,476,1.744,486,2.537,509,1.549,554,2.66,600,2.977,608,3.716,615,3.771,679,1.996,682,2.064,689,1.976,898,3.445,919,2.883,924,2.389,945,3.716,948,1.934,949,1.976,952,2.883,1004,4.912,1009,2.437,1019,2.883,1035,4.72,1036,4.523,1037,4.218,1038,4.523,1039,4.44,1040,2.977,1041,4.912,1042,4.523,1043,4.218,1044,2.977,1045,4.932,1046,3.597,1047,4.932,1048,3.974,1049,3.597,1050,4.523,1051,4.523,1052,3.974,1053,4.932,1054,4.523,1055,4.523,1056,4.932,1057,3.771,1058,4.932,1059,4.932,1060,4.932,1061,3.597,1062,4.932,1063,3.974,1064,4.932,1065,3.974,1066,4.932,1067,3.974]],["title/classes/CustomSerializer.html",[211,0.435,450,3.616]],["body/classes/CustomSerializer.html",[3,0.073,4,0.063,5,0.073,7,0.267,31,1.482,32,1.139,34,1.325,35,0.007,36,0.712,37,0.302,38,1.276,133,0.506,174,0.14,209,4.085,210,0.09,211,0.576,213,0.006,214,0.006,253,1.722,258,3.621,263,1.575,266,1.539,279,1.252,357,1.623,364,1.599,444,1.661,447,6.314,450,5.888,471,1.247,474,0.188,509,1.759,735,3.504,1068,4.282,1069,6.884,1070,5.6,1071,7.454,1072,7.75,1073,6.884,1074,7.776,1075,6.305,1076,6.837,1077,7.111,1078,5.946,1079,5.6,1080,6.884,1081,5.136,1082,5.6,1083,4.789,1084,5.6,1085,5.6,1086,5.6]],["title/injectables/DataService.html",[0,1.495,29,2.398]],["body/injectables/DataService.html",[0,1.295,2,1.306,3,0.03,4,0.026,5,0.03,7,0.11,8,0.295,9,3.358,10,3.358,23,3.325,24,1.301,25,3.358,26,3.358,27,0.468,29,2.076,32,1.647,34,1.821,35,0.007,36,0.98,37,0.426,38,1.754,39,1.107,40,0.916,44,0.986,48,7.162,62,2.321,66,1.138,75,1.704,77,6.007,86,1.008,94,1.138,96,6.361,110,1.346,118,1.39,133,0.748,150,0.723,174,0.147,175,0.3,178,1.761,179,1.545,180,2.112,182,0.451,185,0.621,195,4.442,196,4.185,210,0.03,211,0.237,212,1.736,213,0.003,214,0.003,258,1.489,263,1.811,266,0.818,279,1.783,290,0.943,295,2.766,316,1.045,391,1.378,424,1.437,434,5.194,471,0.417,509,2.505,554,3.223,570,1.567,612,1.679,662,0.922,663,5.194,679,2.644,710,3.131,777,2.78,946,4.248,1009,1.138,1078,3.485,1081,3.358,1087,2.592,1088,6.767,1089,5.131,1090,5.847,1091,4.122,1092,4.763,1093,4.122,1094,4.122,1095,4.122,1096,4.122,1097,4.122,1098,4.122,1099,4.122,1100,4.122,1101,5.847,1102,5.194,1103,2.592,1104,4.122,1105,4.122,1106,4.122,1107,2.592,1108,4.122,1109,2.592,1110,4.122,1111,2.592,1112,4.122,1113,2.592,1114,2.592,1115,2.592,1116,4.122,1117,2.592,1118,6.036,1119,2.592,1120,4.122,1121,2.592,1122,4.122,1123,2.592,1124,4.122,1125,2.592,1126,4.122,1127,2.592,1128,4.122,1129,2.592,1130,4.122,1131,2.592,1132,4.122,1133,2.592,1134,4.122,1135,2.592,1136,2.592,1137,2.592,1138,2.592,1139,4.122,1140,2.592,1141,4.763,1142,4.122,1143,2.592,1144,4.122,1145,2.592,1146,4.122,1147,2.592,1148,2.592,1149,4.122,1150,2.592,1151,4.122,1152,2.592,1153,4.122,1154,2.592,1155,1.855,1156,2.592,1157,2.302,1158,2.592,1159,1.761,1160,2.302,1161,2.592,1162,2.592,1163,8.341,1164,2.592,1165,2.592,1166,5.131,1167,8.11,1168,8.437,1169,2.592,1170,7.808,1171,7.808,1172,7.808,1173,2.592,1174,2.592,1175,2.592,1176,2.592,1177,2.592,1178,7.125,1179,4.122,1180,2.592,1181,2.592,1182,2.592,1183,7.97,1184,7.97,1185,2.592,1186,2.592,1187,2.592,1188,7.808,1189,2.592,1190,2.592,1191,2.592,1192,2.592,1193,2.592,1194,2.592,1195,2.592,1196,2.592,1197,2.592,1198,2.592]],["title/injectables/DataShareService.html",[0,1.495,924,1.59]],["body/injectables/DataShareService.html",[0,1.474,2,1.541,3,0.036,4,0.031,5,0.036,7,0.129,8,0.336,27,1.031,32,1.711,34,1.685,35,0.007,36,0.906,37,0.384,38,1.623,39,2.465,40,2.054,133,0.677,150,0.854,174,0.125,175,0.354,183,1.982,185,0.733,210,0.036,211,0.279,212,2.024,213,0.004,214,0.004,258,1.757,263,1.829,264,1.982,266,0.932,279,1.677,280,1.842,283,1.245,319,1.447,483,1.649,503,5.876,612,1.982,662,3.268,679,1.785,924,1.567,946,1.824,948,3.304,1004,1.899,1009,2.808,1088,8.658,1157,2.718,1159,2.078,1160,2.718,1199,3.059,1200,5.706,1201,5.069,1202,5.706,1203,3.815,1204,5.706,1205,5.069,1206,5.706,1207,5.706,1208,5.706,1209,3.541,1210,5.706,1211,3.675,1212,5.706,1213,5.706,1214,5.706,1215,5.706,1216,5.706,1217,5.706,1218,5.706,1219,4.346,1220,5.706,1221,3.697,1222,5.706,1223,6.398,1224,5.683,1225,4.692,1226,4.167,1227,4.692,1228,4.692,1229,4.167,1230,6.398,1231,4.692,1232,4.692,1233,4.692,1234,4.167,1235,4.692,1236,3.059,1237,3.059,1238,4.692,1239,3.059,1240,4.167,1241,3.059,1242,4.692,1243,3.059,1244,4.692,1245,3.059,1246,4.692,1247,3.059,1248,2.492,1249,3.059,1250,4.692,1251,3.059,1252,2.492,1253,4.692,1254,3.059,1255,4.692,1256,3.059,1257,4.167,1258,3.059,1259,3.059,1260,4.692,1261,3.059,1262,3.059,1263,4.692,1264,3.059,1265,3.059,1266,4.692,1267,3.059,1268,3.059,1269,4.692,1270,3.059,1271,3.059,1272,4.692,1273,3.059,1274,3.059,1275,4.692,1276,3.059,1277,3.059,1278,4.692,1279,3.059,1280,3.059,1281,4.692,1282,5.706,1283,3.059,1284,4.692,1285,3.059,1286,4.692,1287,3.059,1288,4.692,1289,3.059,1290,3.059,1291,4.692,1292,3.059,1293,3.059,1294,4.692,1295,3.059,1296,3.059,1297,3.059,1298,3.059,1299,3.059,1300,3.059,1301,3.059,1302,3.059,1303,3.059,1304,3.059,1305,3.059,1306,3.059,1307,3.059,1308,3.059,1309,3.059]],["title/injectables/DirectionsStore.html",[0,1.495,923,2.552]],["body/injectables/DirectionsStore.html",[0,1.415,2,1.462,3,0.034,4,0.029,5,0.034,7,0.123,8,0.323,27,0.524,31,1.807,32,1.598,34,0.61,35,0.008,36,0.328,37,0.139,38,0.587,39,2.27,40,1.879,62,1.638,108,2.34,133,0.725,174,0.139,175,0.335,176,0.67,181,1.274,182,0.505,185,0.695,187,1.212,189,1.155,190,0.682,192,0.682,210,0.064,211,0.265,212,0.621,213,0.003,214,0.003,263,1.803,266,0.894,279,1.236,283,0.633,284,2.084,290,1.056,295,1.883,300,1.897,407,2.96,424,1.609,437,1.73,444,0.764,458,2.483,471,0.888,474,0.087,486,1.444,507,4.439,508,3.224,509,2.639,662,1.965,673,3.291,674,3.291,675,1.667,677,3.291,678,2.077,679,2.203,685,1.307,688,5.437,696,3.224,697,3.224,698,3.224,708,2.415,729,2.205,769,2.383,775,1.42,841,2.803,923,2.415,946,5.714,1211,4.911,1310,2.578,1311,4.904,1312,4.904,1313,4.904,1314,4.904,1315,4.497,1316,4.904,1317,4.497,1318,4.904,1319,4.904,1320,4.904,1321,4.904,1322,4.497,1323,5.527,1324,5.527,1325,5.527,1326,5.527,1327,2.902,1328,2.902,1329,2.902,1330,2.902,1331,2.902,1332,2.902,1333,5.222,1334,2.902,1335,4.001,1336,3.67,1337,5.069,1338,4.001,1339,4.001,1340,4.001,1341,5.527,1342,5.527,1343,3.06,1344,4.001,1345,4.001,1346,4.001,1347,2.902,1348,4.904,1349,2.902,1350,4.575,1351,2.902,1352,3.224,1353,4.001,1354,5.222,1355,4.001,1356,6.332,1357,4.904,1358,6.332,1359,4.904,1360,2.902,1361,6.829,1362,2.902,1363,4.202,1364,4.001,1365,2.902,1366,2.902,1367,4.001,1368,4.727,1369,4.001,1370,2.686,1371,2.902,1372,5.069,1373,2.902,1374,2.902,1375,5.222,1376,2.902,1377,2.578,1378,2.077,1379,4.001,1380,2.578,1381,2.578,1382,2.205,1383,1.971,1384,2.205,1385,1.971,1386,4.001,1387,2.578,1388,2.364,1389,2.578,1390,2.578,1391,2.364,1392,4.904,1393,2.578]],["title/components/DoubleInputComponent.html",[245,0.457,321,1.23]],["body/components/DoubleInputComponent.html",[3,0.034,4,0.03,5,0.034,7,0.126,24,0.752,27,0.536,31,1.691,32,1.515,34,0.963,35,0.007,36,0.712,37,0.38,38,0.927,39,1.827,40,1.512,62,1.079,75,0.623,108,1.827,133,0.663,174,0.114,175,0.343,176,0.685,182,0.516,190,0.698,192,0.698,210,0.034,211,0.271,213,0.003,214,0.003,245,0.537,246,0.752,247,1.23,248,0.812,249,0.812,250,0.812,251,0.812,253,1.019,254,1.42,255,0.782,256,2.416,257,1.827,259,1.162,261,1.162,263,1.642,266,0.91,267,1.596,279,1.25,280,1.484,283,1,290,1.079,293,2.016,295,1.563,297,2.396,298,2.161,299,2.136,300,1.763,301,2.282,303,3.27,304,0.812,305,1.254,306,1.254,307,0.812,308,1.723,309,0.812,310,0.812,311,0.767,312,2.295,313,0.752,314,0.752,315,0.752,316,0.752,317,1.254,318,0.767,319,0.752,320,1.254,321,1.627,322,2.119,323,1.254,324,0.767,325,0.812,326,1.254,327,0.752,328,0.752,329,1,330,1.532,331,0.752,332,1.723,333,0.767,334,1.862,335,0.812,336,0.752,337,0.812,338,0.767,339,2.325,340,0.812,341,0.767,342,0.812,343,0.752,344,0.812,345,0.752,346,0.812,347,0.767,348,0.752,349,1.475,350,0.752,351,0.752,352,1.532,353,0.738,354,0.797,355,0.752,356,0.738,357,1.011,358,1.254,359,0.752,360,1.254,361,0.738,362,0.578,363,0.767,364,0.752,365,0.752,366,0.698,367,0.767,368,0.812,369,0.812,370,0.752,371,0.782,372,0.767,373,0.698,374,0.767,375,1.254,376,0.767,377,0.767,378,1.292,379,0.752,380,0.782,381,0.738,382,0.752,383,0.767,384,0.767,385,0.767,386,1.69,387,0.752,388,0.752,389,0.752,390,0.752,391,0.797,392,0.812,393,0.812,476,0.932,662,1.631,737,0.878,738,2.007,739,1.689,740,1.181,741,1.938,742,1.411,743,1.411,744,1.056,745,1.631,746,1.27,748,2.218,749,2.507,750,1.21,751,1.495,752,1.531,753,2.735,754,2.422,755,2.351,756,2.064,757,2.754,758,1.868,759,1.914,760,1.914,761,1.824,762,2.453,763,1.783,764,2.56,765,2.457,766,1.824,769,2.087,770,1.961,772,2.913,773,2.179,775,3.788,795,2.662,796,2.541,802,3.773,809,3.104,817,2.842,818,1.128,826,2.709,828,1.411,829,1.411,832,2.12,833,2.308,834,1.842,835,3.907,836,1.842,837,1.914,838,2.632,839,2.282,840,2.282,842,1.832,843,1.909,844,0.896,845,3.733,847,2.124,853,1.645,855,3.065,858,3.078,859,1.452,879,1.923,880,2.863,886,2.064,893,3.291,894,2.632,897,1.704,907,2.418,920,4.277,983,1.21,996,4.555,1005,2.844,1315,5.129,1352,4.871,1370,1.769,1394,8.496,1395,7.546,1396,2.636,1397,4.561,1398,3.733,1399,4.561,1400,5.599,1401,5.599,1402,5.599,1403,1.27,1404,4.071,1405,2.636,1406,2.968,1407,6.296,1408,2.636,1409,2.968,1410,2.968,1411,2.636,1412,2.968,1413,2.636,1414,4.071,1415,2.968,1416,2.968,1417,2.124,1418,2.254,1419,2.124,1420,2.968,1421,2.968,1422,2.968,1423,3.481,1424,4.583,1425,4.583,1426,4.583,1427,1.842,1428,2.844,1429,1.923,1430,2.418,1431,1.923,1432,1.923,1433,1.923,1434,3.474,1435,4.071,1436,4.071,1437,2.968,1438,2.124,1439,2.636,1440,2.016,1441,2.38,1442,3.481,1443,1.769,1444,2.636,1445,1.842,1446,1.923,1447,1.923,1448,1.769,1449,3.28,1450,2.968,1451,2.968,1452,2.254,1453,1.842,1454,2.969,1455,1.769]],["title/components/DropdownOptionComponent.html",[245,0.457,324,1.23]],["body/components/DropdownOptionComponent.html",[3,0.044,4,0.038,5,0.044,7,0.159,24,0.955,27,1.167,32,1.532,34,0.792,35,0.007,36,0.802,37,0.389,38,0.762,39,1.905,40,1.577,62,2.35,75,0.792,84,2.235,133,0.631,174,0.099,175,0.435,182,0.655,210,0.044,211,0.344,213,0.004,214,0.004,245,0.62,246,0.955,247,1.472,248,1.031,249,1.031,250,1.031,251,1.031,253,1.218,254,1.638,255,0.992,256,2.455,257,2.024,259,1.39,261,1.39,263,1.592,266,1.089,267,1.799,279,1.089,280,1.409,283,1.196,284,2.536,296,1.401,297,1.613,298,2.104,299,2.223,300,1.85,301,3.073,304,1.031,305,1.5,306,1.5,307,1.031,308,1.942,309,1.031,310,1.031,311,0.974,312,2.416,313,0.955,314,0.955,315,0.955,316,0.955,317,1.5,318,0.974,319,0.955,320,1.5,321,0.974,322,1.031,323,1.5,324,1.834,325,2.277,326,1.5,327,0.955,328,0.955,329,1.196,330,1.769,331,0.955,332,1.942,333,0.974,334,1.5,335,1.031,336,0.955,337,1.031,338,0.974,339,2.222,340,1.031,341,0.974,342,1.031,343,0.955,344,1.031,345,0.955,346,1.031,347,0.974,348,0.955,349,1.702,350,0.955,351,0.955,352,1.769,353,0.938,354,1.012,355,0.955,356,0.938,357,0.99,358,1.5,359,0.955,360,1.5,361,0.938,362,0.734,363,0.974,364,0.955,365,0.955,366,0.886,367,0.974,368,1.031,369,1.031,370,0.955,371,0.992,372,0.974,373,0.886,374,0.974,375,1.5,376,0.974,377,0.974,378,1.265,379,0.955,380,0.935,381,0.938,382,0.955,383,0.974,384,0.974,385,0.974,386,1.905,387,0.955,388,0.955,389,0.955,390,0.955,391,1.012,392,1.031,393,1.031,554,1.401,608,1.957,662,1.341,738,1.051,740,2.572,741,1.989,745,1.341,748,1.115,752,1.831,753,2.457,754,1.951,755,2.231,756,1.697,757,2.274,758,1.536,759,1.573,760,1.573,761,1.5,762,1.285,763,1.466,764,1.951,768,1.466,795,2.607,796,3.039,802,3.583,809,3.039,817,2.289,818,1.433,826,1.5,837,2.289,839,1.536,840,1.536,841,3.658,842,1.233,844,1.137,850,2.56,866,2.02,867,2.02,880,1.5,886,1.697,893,2.406,894,2.164,996,4.621,1005,3.402,1046,2.442,1049,5.098,1427,2.338,1428,2.338,1441,1.957,1454,2.442,1455,2.247,1456,8.619,1457,7.655,1458,3.768,1459,5.74,1460,4.87,1461,6.303,1462,5.079,1463,5.482,1464,3.768,1465,3.768,1466,3.768,1467,3.768,1468,3.768,1469,3.768,1470,5.482,1471,3.768,1472,3.768,1473,3.347,1474,4.165,1475,2.863,1476,3.07,1477,3.768,1478,5.482,1479,2.863]],["title/pipes/FilterPipe.html",[898,2.954,1480,3.616]],["body/pipes/FilterPipe.html",[3,0.076,4,0.065,5,0.076,32,1.176,34,1.368,35,0.007,36,0.962,37,0.312,38,1.318,40,1.967,62,2.369,86,3.075,133,0.71,150,2.206,174,0.154,175,0.753,181,3.47,210,0.076,211,0.595,213,0.006,214,0.006,253,1.447,255,1.715,263,1.483,266,1.293,279,1.293,295,2.221,471,1.048,486,2.087,509,2.47,898,4.906,900,5.305,902,4.423,903,7.022,905,7.022,906,5.305,907,5.305,908,5.785,913,5.785,914,4.661,1040,3.492,1480,6.006,1481,6.512,1482,6.512,1483,3.28,1484,6.512,1485,6.512,1486,6.512,1487,6.512]],["title/interfaces/IArrival.html",[474,0.142,1009,2.089]],["body/interfaces/IArrival.html",[3,0.074,4,0.064,5,0.074,7,0.27,8,0.559,35,0.007,37,0.455,133,0.781,210,0.074,213,0.006,214,0.006,474,0.19,475,1.242,483,2.173,1009,3.425,1488,6.376,1489,7.806,1490,7.806,1491,7.806,1492,7.806,1493,4.427,1494,7.159,1495,4.427,1496,4.178,1497,7.806,1498,7.806]],["title/interfaces/IArrival-1.html",[215,1.093,474,0.119,1009,1.752]],["body/interfaces/IArrival-1.html",[3,0.074,4,0.064,5,0.074,7,0.27,8,0.559,35,0.007,37,0.455,133,0.781,210,0.074,213,0.006,214,0.006,474,0.19,475,1.242,483,2.173,1009,3.425,1489,7.806,1490,7.806,1491,7.806,1492,7.806,1493,4.427,1494,7.159,1495,4.427,1496,4.178,1497,7.806,1498,7.806,1499,6.376]],["title/interfaces/ILine.html",[94,2.089,474,0.142]],["body/interfaces/ILine.html",[3,0.074,4,0.064,5,0.074,7,0.27,8,0.56,35,0.007,36,0.994,37,0.439,84,2.603,94,3.704,133,0.783,174,0.115,210,0.102,213,0.006,214,0.006,471,1.257,474,0.233,475,1.244,484,4.848,491,4.338,492,4.338,502,1.782,542,5.306,570,3.343,685,1.853,782,2.904,783,2.904,784,2.904,785,2.374,1500,5.673,1501,3.859,1502,4.181,1503,6.68,1504,6.68,1505,4.571,1506,4.851]],["title/interfaces/ILine-1.html",[94,1.752,215,1.093,474,0.119]],["body/interfaces/ILine-1.html",[3,0.074,4,0.064,5,0.074,7,0.27,8,0.56,35,0.007,36,0.994,37,0.439,84,2.603,94,3.704,133,0.783,174,0.115,210,0.102,213,0.006,214,0.006,471,1.257,474,0.233,475,1.244,484,4.848,491,4.338,492,4.338,502,1.782,542,5.306,570,3.343,685,1.853,782,2.904,783,2.904,784,2.904,785,2.374,1501,3.859,1502,4.181,1503,6.68,1504,6.68,1505,4.571,1506,4.851,1507,5.673]],["title/interfaces/IMapData.html",[474,0.142,1508,3.084]],["body/interfaces/IMapData.html",[3,0.08,4,0.069,5,0.08,7,0.29,8,0.584,35,0.007,37,0.39,106,3.275,133,0.654,150,2.512,174,0.147,210,0.101,213,0.006,214,0.006,240,4.653,242,3.451,380,1.535,471,1.102,474,0.243,475,1.335,769,2.364,1354,5.536,1508,5.281,1509,6.085,1510,4.404,1511,5.536,1512,5.205]],["title/interfaces/IMapData-1.html",[215,1.093,474,0.119,1508,2.587]],["body/interfaces/IMapData-1.html",[3,0.08,4,0.069,5,0.08,7,0.29,8,0.584,35,0.007,37,0.39,106,3.275,133,0.654,150,2.512,174,0.147,210,0.101,213,0.006,214,0.006,240,4.653,242,3.451,380,1.535,471,1.102,474,0.243,475,1.335,769,2.364,1354,5.536,1508,5.281,1510,4.404,1511,5.536,1512,5.205,1513,6.085]],["title/interfaces/INotification.html",[474,0.142,1514,3.616]],["body/interfaces/INotification.html",[3,0.082,4,0.071,5,0.082,7,0.3,8,0.596,35,0.007,37,0.454,133,0.708,210,0.082,213,0.006,214,0.006,283,1.926,373,2.141,474,0.212,475,1.383,483,1.999,1514,6.322,1515,7.097,1516,8.09]],["title/interfaces/INotification-1.html",[215,1.093,474,0.119,1514,3.033]],["body/interfaces/INotification-1.html",[3,0.082,4,0.071,5,0.082,7,0.3,8,0.596,35,0.007,37,0.454,133,0.708,210,0.082,213,0.006,214,0.006,283,1.926,373,2.141,474,0.212,475,1.383,483,1.999,1514,6.322,1516,8.09,1517,7.097]],["title/interfaces/IPoint.html",[474,0.142,1510,2.328]],["body/interfaces/IPoint.html",[3,0.071,4,0.062,5,0.071,7,0.26,8,0.547,35,0.007,36,0.695,37,0.415,86,2.968,106,2.775,110,3.193,133,0.784,150,2.129,174,0.138,210,0.106,213,0.006,214,0.006,242,3.097,283,1.341,300,1.445,357,1.11,362,1.198,380,1.048,471,1.228,474,0.259,475,1.198,486,1.97,487,4.091,493,3.531,494,3.531,502,1.715,518,4.382,554,2.837,564,3.408,570,3.392,685,1.783,779,3.296,782,2.837,783,2.837,784,2.837,785,2.286,1493,4.371,1495,4.371,1496,4.126,1501,2.698,1502,2.923,1510,4.244,1518,4.67,1519,3.815,1520,3.815]],["title/interfaces/IPoint-1.html",[215,1.093,474,0.119,1510,1.953]],["body/interfaces/IPoint-1.html",[3,0.071,4,0.062,5,0.071,7,0.26,8,0.547,35,0.007,36,0.695,37,0.415,86,2.968,106,2.775,110,3.193,133,0.784,150,2.129,174,0.138,210,0.106,213,0.006,214,0.006,242,3.097,283,1.341,300,1.445,357,1.11,362,1.198,380,1.048,471,1.228,474,0.259,475,1.198,486,1.97,487,4.091,493,3.531,494,3.531,502,1.715,518,4.382,554,2.837,564,3.408,570,3.392,685,1.783,779,3.296,782,2.837,783,2.837,784,2.837,785,2.286,1493,4.371,1495,4.371,1496,4.126,1501,2.698,1502,2.923,1510,4.244,1519,3.815,1520,3.815,1521,4.67]],["title/interfaces/IRoute.html",[86,1.852,474,0.142]],["body/interfaces/IRoute.html",[3,0.067,4,0.058,5,0.067,7,0.243,8,0.524,35,0.007,36,0.956,37,0.448,86,3.127,106,3.179,110,2.98,133,0.787,150,2.039,174,0.132,210,0.104,213,0.006,214,0.006,242,2.89,283,1.753,300,1.99,357,1.036,362,1.649,380,0.978,471,1.175,474,0.253,475,1.118,486,2.577,487,3.918,493,3.295,494,3.295,502,1.601,518,4.196,554,3.25,564,3.181,570,3.323,685,1.664,779,4.538,782,2.716,783,2.716,784,2.716,785,2.133,1493,2.89,1495,2.89,1496,2.728,1501,3.715,1502,4.024,1510,4.275,1518,4.358,1519,5.252,1520,3.56]],["title/interfaces/IRoute-1.html",[86,1.553,215,1.093,474,0.119]],["body/interfaces/IRoute-1.html",[3,0.067,4,0.058,5,0.067,7,0.243,8,0.524,35,0.007,36,0.956,37,0.448,86,3.127,106,3.179,110,2.98,133,0.787,150,2.039,174,0.132,210,0.104,213,0.006,214,0.006,242,2.89,283,1.753,300,1.99,357,1.036,362,1.649,380,0.978,471,1.175,474,0.253,475,1.118,486,2.577,487,3.918,493,3.295,494,3.295,502,1.601,518,4.196,554,3.25,564,3.181,570,3.323,685,1.664,779,4.538,782,2.716,783,2.716,784,2.716,785,2.133,1493,2.89,1495,2.89,1496,2.728,1501,3.715,1502,4.024,1510,4.275,1519,5.252,1520,3.56,1521,4.358]],["title/interfaces/IRouteInfo.html",[110,2.472,474,0.142]],["body/interfaces/IRouteInfo.html",[3,0.072,4,0.062,5,0.072,7,0.263,8,0.55,35,0.007,36,0.702,37,0.399,86,2.988,106,3.255,110,3.99,133,0.776,150,2.43,174,0.139,210,0.106,213,0.006,214,0.006,242,3.131,283,1.356,300,1.461,357,1.123,362,1.211,380,1.485,471,1.236,474,0.26,475,1.211,486,1.992,487,4.119,493,3.57,494,3.57,502,1.734,518,4.412,554,3.328,564,3.446,570,2.921,685,1.803,779,3.333,782,2.856,783,2.856,784,2.856,785,2.311,1493,3.131,1495,3.131,1496,2.955,1501,2.728,1502,2.955,1510,4.378,1518,4.722,1519,3.857,1520,3.857]],["title/interfaces/IRouteInfo-1.html",[110,2.074,215,1.093,474,0.119]],["body/interfaces/IRouteInfo-1.html",[3,0.072,4,0.062,5,0.072,7,0.263,8,0.55,35,0.007,36,0.702,37,0.399,86,2.988,106,3.255,110,3.99,133,0.776,150,2.43,174,0.139,210,0.106,213,0.006,214,0.006,242,3.131,283,1.356,300,1.461,357,1.123,362,1.211,380,1.485,471,1.236,474,0.26,475,1.211,486,1.992,487,4.119,493,3.57,494,3.57,502,1.734,518,4.412,554,3.328,564,3.446,570,2.921,685,1.803,779,3.333,782,2.856,783,2.856,784,2.856,785,2.311,1493,3.131,1495,3.131,1496,2.955,1501,2.728,1502,2.955,1510,4.378,1519,3.857,1520,3.857,1521,4.722]],["title/interfaces/ISchedule.html",[474,0.142,1522,2.838]],["body/interfaces/ISchedule.html",[3,0.072,4,0.062,5,0.072,7,0.262,8,0.549,35,0.007,37,0.447,84,3.547,116,3.694,118,3.322,133,0.77,174,0.112,210,0.104,213,0.006,214,0.006,471,1.234,474,0.249,475,1.207,481,3.694,483,2.165,488,4.404,498,3.845,499,3.845,502,1.729,570,3.308,685,1.797,782,2.851,783,2.851,784,2.851,785,2.304,1203,5.188,1496,4.252,1522,4.965,1523,5.048,1524,3.919,1525,5.91,1526,5.91,1527,5.91,1528,4.208,1529,4.208]],["title/interfaces/ISchedule-1.html",[215,1.093,474,0.119,1522,2.38]],["body/interfaces/ISchedule-1.html",[3,0.072,4,0.062,5,0.072,7,0.262,8,0.549,35,0.007,37,0.447,84,3.547,116,3.694,118,3.322,133,0.77,174,0.112,210,0.104,213,0.006,214,0.006,471,1.234,474,0.249,475,1.207,481,3.694,483,2.165,488,4.404,498,3.845,499,3.845,502,1.729,570,3.308,685,1.797,782,2.851,783,2.851,784,2.851,785,2.304,1203,5.188,1496,4.252,1522,4.965,1524,3.919,1525,5.91,1526,5.91,1527,5.91,1528,4.208,1529,4.208,1530,5.048]],["title/interfaces/IScheduleDetails.html",[118,2.552,474,0.142]],["body/interfaces/IScheduleDetails.html",[3,0.077,4,0.067,5,0.077,7,0.281,8,0.573,35,0.007,37,0.383,84,2.703,116,5.311,118,4.286,133,0.751,174,0.12,210,0.106,213,0.006,214,0.006,471,1.286,474,0.256,475,1.292,481,3.954,483,2.017,488,4.591,498,4.116,499,4.116,502,1.851,570,2.522,685,1.924,782,2.972,783,2.972,784,2.972,785,2.466,1203,3.954,1496,4.334,1522,5.311,1523,5.403,1524,2.987,1525,4.505,1526,4.505,1527,4.505,1528,4.505,1529,4.505]],["title/interfaces/IScheduleDetails-1.html",[118,2.141,215,1.093,474,0.119]],["body/interfaces/IScheduleDetails-1.html",[3,0.077,4,0.067,5,0.077,7,0.281,8,0.573,35,0.007,37,0.383,84,2.703,116,5.311,118,4.286,133,0.751,174,0.12,210,0.106,213,0.006,214,0.006,471,1.286,474,0.256,475,1.292,481,3.954,483,2.017,488,4.591,498,4.116,499,4.116,502,1.851,570,2.522,685,1.924,782,2.972,783,2.972,784,2.972,785,2.466,1203,3.954,1496,4.334,1522,5.311,1524,2.987,1525,4.505,1526,4.505,1527,4.505,1528,4.505,1529,4.505,1530,5.403]],["title/interfaces/IStop.html",[150,1.328,474,0.142]],["body/interfaces/IStop.html",[3,0.071,4,0.062,5,0.071,7,0.26,8,0.546,35,0.007,37,0.446,133,0.784,150,2.314,174,0.111,210,0.101,213,0.006,214,0.006,283,1.809,329,1.892,362,1.69,378,1.416,471,1.226,474,0.228,475,1.196,486,2.658,489,4.731,495,4.169,496,4.169,502,1.713,521,5.178,554,3.224,566,4.394,570,3.297,685,1.781,782,2.834,783,2.834,784,2.834,785,2.282,1493,4.368,1495,4.368,1501,3.806,1502,4.123,1531,5.452,1532,4.663]],["title/interfaces/IStop-1.html",[150,1.114,215,1.093,474,0.119]],["body/interfaces/IStop-1.html",[3,0.071,4,0.062,5,0.071,7,0.26,8,0.546,35,0.007,37,0.446,133,0.784,150,2.314,174,0.111,210,0.101,213,0.006,214,0.006,283,1.809,329,1.892,362,1.69,378,1.416,471,1.226,474,0.228,475,1.196,486,2.658,489,4.731,495,4.169,496,4.169,502,1.713,521,5.178,554,3.224,566,4.394,570,3.297,685,1.781,782,2.834,783,2.834,784,2.834,785,2.282,1493,4.368,1495,4.368,1501,3.806,1502,4.123,1532,4.663,1533,5.452]],["title/components/InputComponent.html",[245,0.457,327,1.207]],["body/components/InputComponent.html",[3,0.047,4,0.04,5,0.047,7,0.17,8,0.411,24,1.016,27,1.035,32,1.494,34,1.204,35,0.007,36,0.825,37,0.35,38,1.16,39,1.076,40,0.891,75,0.842,133,0.586,174,0.132,175,0.463,182,0.697,185,0.96,210,0.047,211,0.366,212,1.227,213,0.004,214,0.004,245,0.642,246,1.016,247,1.539,248,1.097,249,1.097,250,1.097,251,1.097,253,1.274,254,1.697,255,1.056,256,2.463,257,2.221,259,1.454,261,1.454,263,1.715,266,1.138,267,1.852,279,1.45,280,1.685,283,1.25,284,3.095,295,2.282,298,1.119,304,1.097,305,1.569,306,1.569,307,1.097,308,1.999,309,1.097,310,1.097,311,1.036,312,2.445,313,1.016,314,1.016,315,1.016,316,1.016,317,1.569,318,1.036,319,1.016,320,1.569,321,1.036,322,1.097,323,1.569,324,1.036,325,1.097,326,1.569,327,1.852,328,1.016,329,1.25,330,1.831,331,1.016,332,1.999,333,1.036,334,1.569,335,1.097,336,1.016,337,1.097,338,1.036,339,1.831,340,1.097,341,1.036,342,1.097,343,1.016,344,1.097,345,1.016,346,1.097,347,1.036,348,1.016,349,2.179,350,1.016,351,1.016,352,1.831,353,0.997,354,1.076,355,1.016,356,0.997,357,1.035,358,1.569,359,1.016,360,1.569,361,0.997,362,0.781,363,1.036,364,1.016,365,1.016,366,1.348,367,1.036,368,1.097,369,1.097,370,1.016,371,1.056,372,1.036,373,0.943,374,1.036,375,1.569,376,1.036,377,1.036,378,1.323,379,1.016,380,0.978,381,0.997,382,1.016,383,1.036,384,1.036,385,1.036,386,1.961,387,1.016,388,1.016,389,1.016,390,1.016,391,1.076,392,1.097,393,1.097,394,1.163,444,1.056,458,2.882,470,1.458,471,0.645,594,1.634,616,1.674,679,1.867,735,1.674,737,2.286,738,2.438,744,2.599,757,1.285,758,1.634,759,1.674,760,1.674,761,1.596,877,2.977,922,3.266,923,3.916,926,3.074,974,1.806,975,1.806,978,2.977,979,2.907,980,1.76,981,1.806,982,1.716,983,1.634,984,1.716,985,1.806,986,1.674,987,1.76,1078,2.723,1252,5.451,1352,5.227,1370,3.418,1397,5.451,1398,4.67,1399,5.451,1534,4.009,1535,7.303,1536,5.733,1537,4.009,1538,4.009,1539,5.733,1540,4.009,1541,4.009,1542,4.009,1543,2.723,1544,4.009,1545,4.009,1546,4.009,1547,4.009,1548,4.009,1549,7.303,1550,4.009,1551,4.009,1552,2.87]],["title/interfaces/Itinerary.html",[238,2.089,474,0.142]],["body/interfaces/Itinerary.html",[3,0.063,4,0.054,5,0.063,7,0.229,8,0.504,35,0.007,36,0.612,37,0.447,66,2.377,106,1.969,133,0.783,174,0.098,210,0.1,213,0.005,214,0.005,238,3.433,299,1.322,474,0.256,475,1.055,478,2.728,483,2.223,485,3.656,502,1.511,777,2.575,891,4.199,1363,2.728,1524,2.439,1553,3.876,1554,4.931,1555,4.931,1556,4.931,1557,4.756,1558,4.931,1559,4.931,1560,4.756,1561,4.756,1562,4.756,1563,4.756,1564,4.441,1565,3.656,1566,4.043,1567,3.11,1568,3.11,1569,3.11,1570,4.043,1571,4.043,1572,4.718,1573,3.11,1574,3.002,1575,2.903,1576,3.11,1577,3.11,1578,3.11,1579,2.903,1580,3.002,1581,3.11,1582,3.11,1583,3.11,1584,3.11,1585,3.11,1586,3.11,1587,3.11,1588,3.002]],["title/interfaces/Itinerary-1.html",[215,1.093,238,1.752,474,0.119]],["body/interfaces/Itinerary-1.html",[3,0.063,4,0.054,5,0.063,7,0.229,8,0.504,35,0.007,36,0.612,37,0.447,66,2.377,106,1.969,133,0.783,174,0.098,210,0.1,213,0.005,214,0.005,238,3.433,299,1.322,474,0.256,475,1.055,478,2.728,483,2.223,485,3.656,502,1.511,777,2.575,891,4.199,1363,2.728,1524,2.439,1554,4.931,1555,4.931,1556,4.931,1557,4.756,1558,4.931,1559,4.931,1560,4.756,1561,4.756,1562,4.756,1563,4.756,1564,4.441,1565,3.656,1566,4.043,1567,3.11,1568,3.11,1569,3.11,1570,4.043,1571,4.043,1572,4.718,1573,3.11,1574,3.002,1575,2.903,1576,3.11,1577,3.11,1578,3.11,1579,2.903,1580,3.002,1581,3.11,1582,3.11,1583,3.11,1584,3.11,1585,3.11,1586,3.11,1587,3.11,1588,3.002,1589,3.876]],["title/interfaces/Leg.html",[474,0.142,1564,2.552]],["body/interfaces/Leg.html",[3,0.058,4,0.05,5,0.058,7,0.213,8,0.48,35,0.007,36,0.568,37,0.458,66,2.205,106,2.925,133,0.789,174,0.091,210,0.097,213,0.005,214,0.005,238,2.94,299,1.963,474,0.25,475,0.979,478,2.53,483,2.206,485,3.479,502,1.401,777,2.388,891,4.098,1363,2.53,1524,2.262,1553,3.595,1554,4.811,1555,4.811,1556,4.811,1557,2.885,1558,4.811,1559,4.811,1560,2.885,1561,2.885,1562,2.885,1563,2.885,1564,4.042,1565,4.176,1566,4.811,1567,2.885,1568,2.885,1569,2.885,1570,3.848,1571,3.848,1572,4.977,1573,2.885,1574,2.785,1575,2.693,1576,2.885,1577,2.885,1578,2.885,1579,4.312,1580,4.459,1581,4.619,1582,4.619,1583,4.619,1584,4.619,1585,4.619,1586,4.619,1587,4.619,1588,2.785]],["title/interfaces/Leg-1.html",[215,1.093,474,0.119,1564,2.141]],["body/interfaces/Leg-1.html",[3,0.058,4,0.05,5,0.058,7,0.213,8,0.48,35,0.007,36,0.568,37,0.458,66,2.205,106,2.925,133,0.789,174,0.091,210,0.097,213,0.005,214,0.005,238,2.94,299,1.963,474,0.25,475,0.979,478,2.53,483,2.206,485,3.479,502,1.401,777,2.388,891,4.098,1363,2.53,1524,2.262,1554,4.811,1555,4.811,1556,4.811,1557,2.885,1558,4.811,1559,4.811,1560,2.885,1561,2.885,1562,2.885,1563,2.885,1564,4.042,1565,4.176,1566,4.811,1567,2.885,1568,2.885,1569,2.885,1570,3.848,1571,3.848,1572,4.977,1573,2.885,1574,2.785,1575,2.693,1576,2.885,1577,2.885,1578,2.885,1579,4.312,1580,4.459,1581,4.619,1582,4.619,1583,4.619,1584,4.619,1585,4.619,1586,4.619,1587,4.619,1588,2.785,1589,3.595]],["title/interfaces/LineState.html",[474,0.142,484,2.954]],["body/interfaces/LineState.html",[3,0.078,4,0.068,5,0.078,7,0.285,8,0.579,35,0.007,36,0.762,37,0.323,84,2.75,94,3.544,133,0.765,174,0.122,210,0.104,213,0.006,214,0.006,471,1.299,474,0.241,475,1.314,484,5.363,491,4.582,492,4.582,502,1.882,542,6.22,570,2.565,685,2.342,782,3.002,783,3.213,784,3.002,785,2.508,1500,5.992,1501,2.961,1502,3.207,1503,5.125,1504,5.125,1505,4.828,1506,5.125]],["title/interfaces/LineState-1.html",[215,1.093,474,0.119,484,2.478]],["body/interfaces/LineState-1.html",[3,0.078,4,0.068,5,0.078,7,0.285,8,0.579,35,0.007,36,0.762,37,0.323,84,2.75,94,3.544,133,0.765,174,0.122,210,0.104,213,0.006,214,0.006,471,1.299,474,0.241,475,1.314,484,5.363,491,4.582,492,4.582,502,1.882,542,6.22,570,2.565,685,2.342,782,3.002,783,3.213,784,3.002,785,2.508,1501,2.961,1502,3.207,1503,5.125,1504,5.125,1505,4.828,1506,5.125,1507,5.992]],["title/components/LinesDropdownComponent.html",[245,0.457,328,1.207]],["body/components/LinesDropdownComponent.html",[3,0.038,4,0.033,5,0.038,7,0.139,8,0.354,24,0.832,27,0.593,31,1.826,32,1.351,34,1.393,35,0.007,36,0.845,37,0.341,38,1.342,40,0.729,75,0.689,84,1.337,86,1.276,94,2.911,108,1.728,133,0.478,174,0.151,175,0.379,176,0.757,181,1.44,182,0.57,185,0.786,190,0.771,192,0.771,210,0.038,211,0.3,212,0.702,213,0.004,214,0.004,245,0.572,246,0.832,247,1.328,248,0.898,249,0.898,250,0.898,251,0.898,253,1.099,254,1.51,255,0.864,256,2.433,257,1.911,259,1.254,261,1.254,263,1.61,266,0.982,267,1.681,279,1.317,280,1.446,290,1.193,293,2.228,297,2.117,298,2.087,299,2.14,300,1.759,301,2.428,303,2.569,304,0.898,305,1.354,306,1.354,307,0.898,308,1.815,309,0.898,310,0.898,311,0.848,312,2.348,313,0.832,314,0.832,315,0.832,316,0.832,317,1.354,318,0.848,319,0.832,320,1.354,321,0.848,322,0.898,323,1.354,324,0.848,325,1.815,326,1.354,327,0.832,328,1.681,329,1.928,330,1.63,331,0.832,332,1.815,333,0.848,334,1.63,335,0.898,336,0.832,337,0.898,338,0.848,339,1.63,340,0.898,341,0.848,342,0.898,343,0.832,344,0.898,345,0.832,346,0.898,347,0.848,348,0.832,349,1.569,350,0.832,351,0.832,352,1.63,353,0.816,354,0.881,355,0.832,356,0.816,357,1.076,358,1.354,359,0.832,360,1.354,361,0.816,362,0.639,363,0.848,364,0.832,365,0.832,366,1.163,367,0.848,368,0.898,369,0.898,370,0.832,371,0.864,372,0.848,373,0.771,374,0.848,375,1.354,376,0.848,377,0.848,378,1.374,379,0.832,380,0.844,381,0.816,382,0.832,383,0.848,384,0.848,385,0.848,386,1.78,387,0.832,388,0.832,389,0.832,390,0.832,391,0.881,392,0.898,393,0.898,394,0.952,444,0.864,458,2.606,476,1.03,509,0.915,594,1.337,616,1.37,679,1.662,682,1.22,729,2.492,735,1.37,737,2.105,738,2.445,739,1.797,741,1.833,742,1.56,743,1.56,744,2.533,745,1.167,746,1.404,748,2.105,749,2.371,750,1.337,751,1.652,752,1.652,753,2.522,754,2.845,755,1.962,756,2.228,757,2.622,758,2.016,759,2.066,760,2.066,761,1.969,762,2.262,763,1.924,764,2.12,765,1.759,766,1.306,775,2.42,795,1.56,817,2.971,818,1.881,826,2.64,828,1.56,829,1.56,832,1.517,833,1.652,837,1.37,839,2.016,840,2.016,842,1.948,843,2.031,844,0.99,855,1.478,863,3.541,877,2.703,880,2.371,886,1.478,893,2.171,974,1.478,975,1.478,978,2.703,979,2.64,980,1.44,981,1.478,982,1.404,983,1.337,984,1.404,985,1.478,986,1.37,987,1.44,1018,2.228,1035,1.956,1040,1.759,1229,4.394,1427,2.036,1428,2.036,1429,2.125,1431,2.125,1432,2.125,1433,2.125,1434,2.036,1438,2.348,1440,2.228,1441,1.704,1442,2.492,1443,1.956,1445,2.036,1446,2.125,1447,2.125,1448,1.956,1452,2.492,1505,2.348,1590,6.897,1591,6.326,1592,2.914,1593,5.29,1594,4.394,1595,4.947,1596,4.394,1597,4.394,1598,4.947,1599,3.28,1600,3.28,1601,4.947,1602,3.28,1603,4.394,1604,5.891,1605,3.28,1606,4.03,1607,2.492,1608,2.914,1609,3.28,1610,3.28,1611,2.914,1612,2.672,1613,2.914,1614,4.947,1615,3.28,1616,3.28,1617,3.28,1618,2.914,1619,2.125,1620,2.125,1621,2.672,1622,2.914,1623,2.914]],["title/classes/LinesMap.html",[211,0.435,1624,3.878]],["body/classes/LinesMap.html",[3,0.043,4,0.037,5,0.043,7,0.158,8,0.39,27,0.675,32,1.681,34,1.778,35,0.007,36,0.957,37,0.44,38,1.713,39,2.273,40,1.881,62,1.359,106,1.359,108,1.084,133,0.714,150,1.972,174,0.142,182,1.612,210,0.043,211,0.341,212,1.679,213,0.004,214,0.004,263,1.758,266,1.082,279,1.731,280,1.901,283,1.188,295,1.274,380,0.637,422,2.421,463,3.9,471,1.137,483,1.234,486,2.061,509,1.52,644,3.129,662,1.939,685,1.58,755,1.612,841,3.183,844,1.644,850,2.538,859,2.665,906,3.044,1004,4.386,1009,3.298,1019,1.94,1021,3.319,1026,3.319,1040,2.003,1068,2.538,1209,4.386,1211,2.146,1454,5.083,1483,1.882,1508,4.579,1510,3.457,1624,4.438,1625,3.736,1626,5.712,1627,7.094,1628,4.139,1629,4.139,1630,4.139,1631,4.139,1632,5.448,1633,7.068,1634,5.369,1635,5.448,1636,5.448,1637,5.448,1638,4.139,1639,4.885,1640,4.139,1641,4.139,1642,4.139,1643,4.139,1644,5.059,1645,5.448,1646,5.96,1647,6.278,1648,3.736,1649,6.153,1650,5.708,1651,4.139,1652,2.838,1653,5.708,1654,4.139,1655,7.249,1656,3.044,1657,2.838,1658,3.044,1659,2.838,1660,2.674,1661,3.044,1662,2.838,1663,2.838,1664,3.044,1665,3.044,1666,2.838,1667,3.044,1668,2.838,1669,3.044,1670,5.448,1671,3.736,1672,3.736,1673,3.736,1674,5.448,1675,3.736,1676,5.448,1677,3.736,1678,5.448,1679,3.736,1680,4.139,1681,3.736,1682,3.044,1683,2.838,1684,3.701,1685,4.139,1686,3.044,1687,2.538,1688,2.838,1689,3.044,1690,4.139,1691,2.838,1692,4.139,1693,3.044,1694,2.838,1695,2.674,1696,3.736,1697,3.044,1698,3.319,1699,3.044,1700,5.448,1701,3.736,1702,3.736,1703,3.736,1704,3.736,1705,3.736,1706,3.736,1707,3.044,1708,3.044,1709,3.319,1710,3.319,1711,3.319,1712,3.736,1713,3.319,1714,3.319,1715,3.044,1716,3.044,1717,4.839,1718,3.736,1719,3.736,1720,3.736,1721,3.736,1722,3.736,1723,3.736,1724,3.319,1725,3.319,1726,3.319]],["title/components/LinesMapComponent.html",[245,0.457,331,1.207]],["body/components/LinesMapComponent.html",[3,0.051,4,0.044,5,0.051,7,0.187,24,1.119,27,1.273,32,1.108,35,0.007,36,0.693,44,1.677,75,0.927,174,0.145,175,0.51,182,1.226,185,1.057,210,0.051,211,0.403,213,0.005,214,0.005,245,0.677,246,1.119,247,1.647,248,1.207,249,1.207,250,1.207,251,1.207,253,1.363,254,1.787,255,1.162,256,2.476,257,2.15,259,1.555,261,1.555,266,1.218,267,1.932,279,0.876,280,1.338,296,1.64,298,1.711,299,1.955,300,1.442,304,1.207,305,1.678,306,1.678,307,1.207,308,2.085,309,1.207,310,1.207,311,1.14,312,2.487,313,1.119,314,1.119,315,1.119,316,1.119,317,1.678,318,1.14,319,1.119,320,1.678,321,1.14,322,1.207,323,1.678,324,1.14,325,1.207,326,1.678,327,1.119,328,1.119,329,1.92,330,1.929,331,1.932,332,2.085,333,1.14,334,1.929,335,1.207,336,1.119,337,1.207,338,1.14,339,1.207,340,1.207,341,1.14,342,1.207,343,1.119,344,1.207,345,1.119,346,1.207,347,1.14,348,1.119,349,1.857,350,1.119,351,1.119,352,1.929,353,1.098,354,1.184,355,1.119,356,1.098,357,1.108,358,1.678,359,1.119,360,1.678,361,1.098,362,0.86,363,1.14,364,1.119,365,1.119,366,1.037,367,1.14,368,1.207,369,1.207,370,1.119,371,1.162,372,1.14,373,1.037,374,1.14,375,1.678,376,1.14,377,1.14,378,1.415,379,1.119,380,1.046,381,1.098,382,1.119,383,1.14,384,1.14,385,1.14,386,2.046,387,1.119,388,1.119,389,1.119,390,1.119,391,1.184,392,1.207,393,1.207,679,1.231,737,2.369,738,2.514,739,2.127,740,1.756,741,1.888,744,2.712,745,2.509,746,1.888,748,1.305,767,2.158,768,1.716,769,1.28,842,1.443,843,1.505,844,1.331,877,3.106,880,3.033,924,1.473,948,1.537,949,1.57,974,1.987,975,1.987,978,3.106,979,3.033,980,1.936,981,1.987,982,1.888,983,1.798,984,1.888,985,1.987,986,1.842,987,1.936,1009,1.936,1019,2.291,1041,2.738,1590,6.262,1727,5.743,1728,3.351,1729,5.356,1730,4.659,1731,3.919,1732,4.412,1733,3.919,1734,3.594]],["title/modules/LinesModule.html",[394,1.381,1735,3.233]],["body/modules/LinesModule.html",[3,0.06,4,0.052,5,0.06,35,0.007,174,0.173,175,0.599,210,0.06,211,0.474,213,0.005,214,0.005,246,2.248,328,2.205,329,1.131,331,2.205,333,2.247,345,1.315,356,2.164,359,2.205,363,2.247,370,2.205,376,2.247,396,2.277,397,3.67,404,5.185,406,3.931,407,2.781,408,2.781,410,4.081,411,2.613,412,3.254,413,6.08,414,3.254,418,4.649,419,2.979,426,3.524,430,4.899,431,3.713,623,4.994,625,4.247,626,2.979,634,3.361,635,3.361,636,3.524,996,2.781,1037,3.941,1591,4.226,1727,4.226,1735,6.601,1736,4.608,1737,5.188,1738,4.608,1739,4.608,1740,6.225,1741,5.188,1742,5.188,1743,5.188,1744,6.08,1745,4.608,1746,6.08,1747,5.576,1748,5.188,1749,4.608,1750,5.188,1751,4.608,1752,4.226,1753,6.08,1754,3.941,1755,4.226,1756,5.2,1757,4.608,1758,4.608,1759,4.608,1760,3.361,1761,3.941]],["title/modules/LinesRoutingModule.html",[394,1.381,1740,3.407]],["body/modules/LinesRoutingModule.html",[3,0.073,4,0.063,5,0.073,35,0.007,37,0.37,62,2.808,174,0.17,175,0.724,182,1.089,210,0.073,211,0.572,213,0.006,214,0.006,245,0.861,328,1.957,331,1.957,356,1.921,359,1.957,370,1.957,396,2.75,412,2.978,414,3.671,443,4.434,444,1.65,469,4.255,470,3.044,471,1.008,473,3.473,606,4.255,644,5.316,645,4.255,1037,4.759,1494,5.104,1591,5.104,1727,5.104,1740,5.526,1746,6.858,1747,5.104,1753,6.858,1754,4.759,1755,5.104,1756,4.759,1757,5.565,1760,4.059,1762,6.265,1763,5.244,1764,4.484,1765,4.759,1766,5.865,1767,7.72,1768,6.265,1769,6.265,1770,6.265,1771,5.565]],["title/components/ListItemComponent.html",[245,0.457,333,1.23]],["body/components/ListItemComponent.html",[3,0.041,4,0.035,5,0.041,7,0.148,8,0.371,24,0.885,27,0.631,31,1.8,32,1.529,34,1.089,35,0.007,36,0.865,37,0.38,38,1.049,39,0.937,40,0.776,75,0.734,108,1.504,116,3.686,150,1.725,174,0.15,175,0.404,176,0.806,182,0.901,185,0.837,190,0.821,192,0.821,210,0.041,211,0.319,212,1.464,213,0.004,214,0.004,243,2.005,245,0.593,246,0.885,247,1.392,248,0.956,249,0.956,250,0.956,251,0.956,253,1.152,254,1.568,255,0.92,256,2.443,257,1.962,259,1.314,261,1.314,263,1.631,266,1.029,267,1.735,279,1.358,280,1.67,283,1.131,290,1.27,295,1.768,297,1.494,298,1.446,299,1.784,300,1.219,301,1.423,303,1.814,304,0.956,305,1.419,306,1.419,307,0.956,308,1.872,309,0.956,310,0.956,311,0.902,312,2.38,313,0.885,314,0.885,315,0.885,316,0.885,317,1.419,318,0.902,319,0.885,320,1.419,321,0.902,322,0.956,323,1.419,324,0.902,325,0.956,326,1.419,327,0.885,328,0.885,329,1.131,330,1.692,331,0.885,332,1.872,333,1.768,334,2.277,335,0.956,336,0.885,337,0.956,338,0.902,339,1.872,340,0.956,341,0.902,342,0.956,343,0.885,344,0.956,345,0.885,346,0.956,347,0.902,348,0.885,349,1.628,350,0.885,351,0.885,352,1.692,353,0.869,354,0.937,355,0.885,356,0.869,357,0.936,358,1.419,359,0.885,360,1.419,361,0.869,362,0.68,363,0.902,364,0.885,365,0.885,366,0.821,367,0.902,368,0.956,369,0.956,370,0.885,371,0.92,372,0.902,373,0.821,374,0.902,375,2.096,376,0.902,377,0.902,378,1.686,379,0.885,380,0.884,381,0.869,382,0.885,383,0.902,384,0.902,385,0.902,386,1.837,387,0.885,388,0.885,389,0.885,390,0.885,391,0.937,392,0.956,393,0.956,476,1.097,483,1.4,662,1.243,679,1.725,682,1.298,738,1.909,741,1.075,744,2.435,748,1.534,750,1.423,752,2.065,753,1.328,754,1.845,755,1.829,757,2.454,762,1.191,763,1.358,764,2.601,766,1.39,769,1.013,795,2.465,796,2.874,802,3.428,809,2.874,837,1.458,839,1.423,840,1.423,842,1.142,843,1.191,853,2.874,858,2.218,859,1.708,880,1.39,886,3.081,893,2.713,894,2.005,897,2.005,924,2.285,948,1.216,949,1.243,978,2.788,979,2.723,980,1.533,982,1.494,984,1.494,986,1.458,1005,3.836,1008,4.697,1024,4.605,1039,3.836,1048,2.499,1049,2.263,1061,4.433,1203,3.686,1209,2.167,1226,4.605,1240,4.605,1375,2.372,1403,1.494,1441,1.814,1453,2.167,1455,3.091,1474,2.653,1483,1.759,1522,2.082,1749,7.629,1772,8.589,1773,3.492,1774,5.037,1775,6.182,1776,5.184,1777,3.836,1778,6.077,1779,6.182,1780,5.184,1781,3.492,1782,3.492,1783,3.492,1784,3.492,1785,3.492,1786,3.492,1787,3.492,1788,4.425,1789,3.492,1790,3.102,1791,3.492,1792,3.492,1793,3.492,1794,3.492,1795,3.492,1796,3.492,1797,3.492,1798,5.184,1799,3.492,1800,3.492,1801,4.605,1802,4.433,1803,6.841,1804,3.102,1805,3.102,1806,3.492,1807,1.872,1808,2.845,1809,3.102,1810,3.102,1811,3.102]],["title/injectables/LiveDataStore.html",[0,1.495,1041,2.954]],["body/injectables/LiveDataStore.html",[0,1.784,2,1.993,3,0.046,4,0.04,5,0.046,7,0.167,8,0.407,27,1.026,28,3.006,29,4.03,31,1.982,32,1.551,34,0.831,35,0.008,36,0.447,37,0.189,38,0.801,39,1.949,40,1.613,44,1.504,73,4.121,84,2.315,94,1.737,150,1.104,174,0.161,175,0.457,176,0.913,181,1.737,182,0.688,185,0.948,186,2.194,190,0.93,192,0.93,210,0.077,211,0.361,212,1.939,213,0.004,214,0.004,263,1.7,266,1.128,279,1.441,319,1.003,329,1.239,357,1.311,364,1.44,378,1.675,380,0.968,424,2.194,437,2.359,471,0.637,474,0.118,507,3.451,509,2.559,564,3.149,673,3.961,674,4.583,675,2.272,677,4.583,679,2.396,685,1.647,688,4.328,708,3.892,924,1.322,926,3.045,948,1.378,949,1.408,1004,5.622,1009,3.617,1019,2.055,1035,2.359,1041,3.524,1044,2.122,1155,2.832,1159,2.688,1333,3.857,1343,4.931,1350,2.688,1383,2.688,1384,3.006,1385,3.857,1802,5.909,1812,3.515,1813,5.047,1814,5.901,1815,5.047,1816,5.901,1817,5.515,1818,6.448,1819,6.448,1820,6.448,1821,3.957,1822,3.957,1823,3.957,1824,3.957,1825,3.957,1826,4.314,1827,4.314,1828,4.314,1829,4.314,1830,5.515,1831,5.515,1832,4.314,1833,4.314,1834,3.957,1835,5.045,1836,5.045,1837,5.045,1838,5.045,1839,5.045,1840,5.045,1841,3.957,1842,5.184,1843,5.901,1844,3.957,1845,5.047,1846,3.957,1847,3.006,1848,3.006,1849,3.006,1850,5.045,1851,5.045,1852,3.515,1853,5.045,1854,3.515,1855,3.515,1856,3.515,1857,3.515,1858,3.515,1859,4.314,1860,4.314,1861,3.515,1862,3.006]],["title/interfaces/LiveState.html",[474,0.142,1842,3.084]],["body/interfaces/LiveState.html",[0,2.014,3,0.055,4,0.047,5,0.055,7,0.199,8,0.459,27,0.85,29,3.673,31,1.841,35,0.008,37,0.307,44,1.789,73,3.91,84,1.918,94,2.065,150,1.313,174,0.166,175,0.544,176,1.086,181,2.065,182,0.818,185,1.127,186,2.609,190,1.106,192,1.106,210,0.085,211,0.43,212,1.81,213,0.005,214,0.005,263,1.537,319,1.193,329,1.026,357,1.414,364,1.626,378,1.683,380,0.802,424,2.609,437,2.806,471,0.757,474,0.141,475,0.917,507,3.723,509,2.563,564,3.555,673,3.823,674,4.348,675,2.703,677,4.348,679,2.286,685,1.365,688,3.823,708,3.438,924,1.572,926,3.438,948,1.639,949,1.675,1004,5.701,1009,3.919,1019,2.444,1035,2.806,1041,2.92,1044,2.523,1155,3.368,1159,3.196,1333,4.355,1343,4.355,1350,3.196,1383,3.196,1384,3.575,1385,4.355,1802,5.992,1812,4.18,1813,3.575,1814,4.18,1815,3.575,1816,4.18,1817,3.575,1818,4.18,1819,4.18,1820,4.18,1826,3.575,1827,3.575,1828,3.575,1829,3.575,1830,4.871,1831,4.871,1832,3.575,1833,3.575,1835,4.18,1836,4.18,1837,4.18,1838,4.18,1839,4.18,1840,4.18,1842,5.309,1843,5.695,1845,4.871,1847,3.575,1848,3.575,1849,3.575,1850,5.695,1851,5.695,1852,4.18,1853,5.695,1854,4.18,1855,4.18,1856,4.18,1857,4.18,1858,4.18,1859,4.871,1860,4.871,1861,4.18,1862,3.575]],["title/interfaces/LiveState-1.html",[215,1.093,474,0.119,1842,2.587]],["body/interfaces/LiveState-1.html",[0,2.282,3,0.066,4,0.057,5,0.066,7,0.241,8,0.521,29,4.033,31,1.984,35,0.007,37,0.272,44,2.163,73,3.896,94,2.496,150,1.587,174,0.17,175,0.657,176,1.312,181,2.496,185,1.363,186,3.153,190,1.337,192,1.337,210,0.093,211,0.52,212,1.555,213,0.005,214,0.005,263,1.502,290,2.069,378,1.677,380,0.97,424,3.153,437,3.391,471,0.915,474,0.17,475,1.108,507,3.455,509,2.234,673,4.332,674,4.332,675,3.267,677,4.332,679,2.234,685,1.65,688,3.391,708,3.05,926,3.05,1009,3.826,1019,2.954,1035,3.391,1044,3.05,1155,4.071,1159,3.863,1333,3.863,1343,3.863,1350,3.863,1383,3.863,1385,3.863,1802,6.051,1813,4.321,1815,4.321,1817,4.321,1826,4.321,1827,4.321,1828,4.321,1829,4.321,1830,4.321,1831,4.321,1832,4.321,1833,4.321,1842,5.466,1845,4.321,1847,4.321,1848,4.321,1849,4.321,1859,4.321,1860,4.321,1862,4.321,1863,5.052,1864,3.863]],["title/components/LoginComponent.html",[245,0.457,336,1.207]],["body/components/LoginComponent.html",[3,0.035,4,0.03,5,0.035,7,0.126,8,0.329,23,5.019,24,0.753,27,0.828,31,1.869,32,1.399,34,0.963,35,0.007,36,0.712,37,0.359,38,0.928,40,0.66,75,0.624,108,1.33,133,0.577,174,0.144,175,0.343,176,0.685,182,0.516,185,0.712,187,1.24,189,1.182,190,0.698,192,0.698,210,0.035,211,0.271,212,1.199,213,0.003,214,0.003,245,0.538,246,0.753,247,1.231,248,0.813,249,0.813,250,0.813,251,0.813,253,1.019,254,1.42,255,0.782,256,2.416,257,2.014,259,1.163,261,1.163,263,1.666,266,0.911,267,1.597,279,1.352,280,1.485,283,1,296,1.104,297,1.271,298,1.563,299,1.831,300,1.317,301,1.21,304,0.813,305,1.255,306,1.533,307,0.813,308,1.724,309,0.813,310,0.813,311,0.767,312,2.296,313,0.753,314,0.753,315,0.753,316,0.753,317,1.255,318,0.767,319,0.753,320,1.255,321,0.767,322,0.813,323,1.255,324,0.767,325,0.813,326,1.255,327,0.753,328,0.753,329,1,330,1.533,331,0.753,332,1.724,333,0.767,334,1.255,335,0.813,336,1.597,337,0.813,338,0.767,339,1.255,340,0.813,341,0.767,342,0.813,343,0.753,344,0.813,345,0.753,346,0.813,347,0.767,348,0.753,349,1.475,350,0.753,351,0.753,352,1.533,353,0.739,354,0.797,355,0.753,356,0.739,357,0.828,358,1.255,359,0.753,360,1.255,361,0.739,362,0.579,363,0.767,364,0.753,365,0.753,366,0.698,367,0.767,368,0.813,369,0.813,370,0.753,371,0.782,372,0.767,373,0.698,374,0.767,375,1.255,376,0.767,377,0.767,378,1.058,379,0.753,380,0.782,381,0.739,382,0.753,383,0.767,384,0.767,385,0.767,386,1.691,387,0.753,388,0.753,389,0.753,390,0.753,391,0.797,392,0.813,393,0.813,419,1.706,459,3.003,471,0.478,476,0.933,509,0.829,600,1.592,631,5.261,653,6.31,662,1.993,672,2.846,679,1.563,689,2.561,708,1.592,737,2.014,738,2.341,739,1.69,741,1.412,744,2.242,748,1.357,751,1.496,752,1.532,753,1.743,754,2.242,755,2.567,756,2.065,757,2.602,758,1.21,759,1.24,760,1.24,761,1.182,762,2.148,763,2.179,764,2.423,768,1.155,770,1.271,772,1.374,773,1.412,817,1.24,818,1.129,826,2.71,828,1.412,829,1.412,832,1.374,833,1.496,837,1.24,839,1.869,840,1.869,842,1.832,843,1.564,844,1.69,849,1.706,852,3.756,854,2.017,855,2.837,857,1.843,858,3.402,859,2.243,866,1.592,867,1.592,868,3.895,869,4.021,870,4.761,872,4.009,873,4.009,876,4.081,877,2.567,880,1.825,881,3.484,886,1.338,888,3.282,924,2.104,948,1.035,949,1.057,974,1.338,975,1.338,978,2.567,979,2.508,980,1.303,981,1.338,982,1.271,983,1.21,984,1.271,985,1.338,986,1.24,987,1.303,1141,4.563,1221,4.411,1403,1.271,1417,2.126,1418,2.256,1419,2.126,1423,3.484,1429,1.924,1431,1.924,1432,1.924,1433,1.924,1434,1.843,1445,1.843,1446,1.924,1447,1.924,1453,1.843,1619,1.924,1807,1.592,1865,2.97,1866,5.601,1867,4.586,1868,4.975,1869,5.595,1870,4.073,1871,4.586,1872,2.97,1873,4.073,1874,2.97,1875,2.97,1876,2.97,1877,2.97,1878,5.131,1879,2.97,1880,4.563,1881,2.419,1882,2.419,1883,2.419,1884,2.638,1885,2.638,1886,3.736,1887,4.073,1888,2.638,1889,6.391,1890,2.97,1891,2.638,1892,2.97,1893,2.256,1894,2.638,1895,2.638,1896,2.97,1897,2.638,1898,2.638,1899,2.638,1900,2.97,1901,5.131,1902,4.785,1903,5.595,1904,4.073,1905,4.073,1906,2.638,1907,6.476,1908,2.419,1909,2.419,1910,3.736,1911,2.419,1912,4.411,1913,2.419,1914,2.419,1915,3.736,1916,4.255,1917,2.419,1918,2.419,1919,2.419,1920,2.419,1921,4.073,1922,5.595,1923,2.419]],["title/components/MainInputComponent.html",[245,0.457,338,1.23]],["body/components/MainInputComponent.html",[3,0.029,4,0.025,5,0.029,7,0.107,8,0.289,24,0.641,27,0.73,31,1.58,32,1.623,34,0.531,35,0.007,36,0.57,37,0.413,38,0.511,39,2.125,40,1.843,75,0.531,108,1.949,133,0.665,174,0.121,175,0.292,176,0.583,182,1.274,190,0.594,192,0.594,210,0.029,211,0.231,212,1.439,213,0.003,214,0.003,245,0.484,246,0.641,247,1.084,248,0.692,249,0.692,250,0.692,251,0.692,253,0.898,254,1.279,255,0.666,256,2.385,257,1.692,259,1.024,261,1.024,263,1.746,266,0.802,267,1.461,269,3.069,270,3.833,275,1.92,276,3.612,279,1.5,280,1.69,281,1.809,282,3.069,283,1.598,284,1.169,287,1.92,292,1.809,293,1.717,295,2.577,297,1.729,298,1.968,299,1.997,300,1.482,301,2.057,303,2.993,304,0.692,305,1.106,306,1.106,307,0.692,308,1.577,309,0.692,310,0.692,311,0.653,312,2.205,313,0.641,314,0.641,315,0.641,316,0.641,317,1.106,318,0.653,319,0.641,320,1.106,321,0.653,322,0.692,323,1.106,324,0.653,325,0.692,326,1.106,327,0.641,328,0.641,329,0.881,330,1.381,331,0.641,332,1.577,333,0.653,334,1.381,335,0.692,336,0.641,337,0.692,338,1.489,339,2.32,340,0.692,341,0.653,342,0.692,343,0.641,344,0.692,345,0.641,346,0.692,347,0.653,348,0.641,349,1.329,350,0.641,351,0.641,352,1.381,353,0.629,354,0.679,355,0.641,356,0.629,357,0.911,358,1.106,359,0.641,360,1.106,361,0.629,362,1.123,363,0.653,364,0.641,365,0.641,366,0.95,367,0.653,368,0.692,369,0.692,370,0.641,371,0.666,372,0.653,373,0.594,374,0.653,375,1.106,376,0.653,377,0.653,378,0.932,379,0.641,380,0.689,381,0.629,382,0.641,383,0.653,384,0.653,385,0.653,386,1.547,387,0.641,388,0.641,389,0.641,390,0.641,391,0.679,392,0.692,393,0.692,394,2.126,444,0.666,458,2.457,476,0.794,554,1.876,594,1.03,616,1.055,631,2.744,662,1.796,689,1.796,735,1.055,737,0.748,738,1.408,739,1.219,741,1.244,748,1.705,749,1.608,750,1.03,752,1.685,753,2.192,754,2.392,755,2.168,756,1.138,757,2.422,762,2.149,763,1.571,764,2.051,765,1.355,766,1.006,767,3.082,769,0.733,770,2.159,772,1.869,773,1.921,775,2.819,795,1.921,796,2.24,802,3.911,809,3.196,817,2.631,818,0.961,826,2.808,828,1.202,829,1.202,831,1.568,832,1.169,833,1.273,837,1.055,838,1.452,839,2.349,840,2.349,841,1.138,842,1.886,843,1.966,844,1.219,847,1.809,849,1.452,855,1.138,857,1.568,858,3.234,859,3.082,868,1.313,869,1.355,870,1.355,876,1.638,880,2.009,884,1.717,885,3.069,886,1.138,893,2.215,897,3.31,924,1.925,948,0.88,949,0.899,970,1.717,996,4.838,1221,3.735,1396,2.245,1397,4.111,1398,3.291,1399,4.111,1403,1.082,1404,2.245,1405,2.245,1408,2.245,1411,2.245,1413,2.245,1417,1.809,1418,1.92,1419,1.809,1423,3.069,1428,1.568,1429,1.638,1430,2.059,1431,1.638,1432,1.638,1433,1.638,1434,1.568,1435,2.245,1436,2.245,1438,1.809,1439,2.245,1440,1.717,1441,1.313,1442,1.92,1443,2.408,1444,2.245,1445,1.568,1446,1.638,1447,1.638,1455,1.507,1475,4.787,1807,2.706,1893,1.92,1908,2.059,1924,9.023,1925,8.015,1926,5.046,1927,5.12,1928,5.764,1929,5.764,1930,4.126,1931,4.126,1932,5.764,1933,5.046,1934,5.046,1935,4.111,1936,5.046,1937,4.482,1938,4.04,1939,2.527,1940,2.527,1941,2.527,1942,2.527,1943,2.527,1944,2.527,1945,2.527,1946,2.527,1947,4.04,1948,2.527,1949,2.527,1950,2.527,1951,2.527,1952,2.527,1953,2.527,1954,2.527,1955,2.527,1956,2.527,1957,2.527,1958,2.527,1959,2.527,1960,2.527,1961,2.527,1962,2.527,1963,1.568,1964,4.04,1965,4.04,1966,4.04,1967,4.04,1968,4.04,1969,2.059,1970,2.527,1971,2.245,1972,2.245,1973,2.245,1974,2.059,1975,2.245,1976,2.245,1977,3.588,1978,2.059,1979,2.059]],["title/classes/Map.html",[182,0.828,211,0.435]],["body/classes/Map.html",[3,0.049,4,0.042,5,0.049,7,0.178,8,0.426,27,1.073,32,1.653,34,1.654,35,0.007,36,0.89,37,0.432,38,1.593,39,2.254,40,1.866,133,0.749,174,0.107,182,1.49,210,0.049,211,0.385,213,0.004,214,0.004,266,1.179,279,1.622,280,1.717,283,1.5,284,2.747,295,2.026,422,3.848,463,5.346,471,1.267,483,1.558,509,1.657,644,2.42,662,1.5,755,2.329,841,3.68,844,2.076,859,3.851,1068,2.862,1209,4.886,1211,2.42,1368,3.201,1454,5.841,1627,7.371,1628,5.225,1629,5.225,1630,5.225,1631,5.225,1634,5.673,1638,4.512,1639,5.673,1640,4.512,1641,4.512,1642,4.512,1643,3.201,1644,5.636,1646,6.206,1649,6.904,1650,6.71,1651,5.673,1652,4.512,1653,6.71,1654,5.673,1657,4.512,1659,4.512,1660,4.251,1662,4.512,1663,4.512,1666,4.512,1668,4.512,1680,4.512,1683,4.512,1684,5.073,1685,5.981,1687,4.034,1688,4.512,1690,4.512,1691,4.512,1692,5.673,1694,3.201,1695,3.016,1708,5.603,1711,3.743,1980,4.214,1981,7.468,1982,5.94,1983,4.214,1984,4.214,1985,4.214,1986,4.214,1987,4.214,1988,4.214,1989,4.214,1990,4.214,1991,4.214,1992,4.214,1993,4.214,1994,4.214,1995,4.214,1996,4.214,1997,5.276,1998,4.214,1999,4.214,2000,4.214,2001,4.214,2002,4.214,2003,3.433,2004,4.214,2005,4.214,2006,4.214,2007,4.214,2008,3.743,2009,4.214,2010,4.214]],["title/components/MapAreaComponent.html",[245,0.457,341,1.23]],["body/components/MapAreaComponent.html",[3,0.041,4,0.035,5,0.041,7,0.22,8,0.372,24,0.889,27,0.939,31,1.803,32,1.504,34,1.092,35,0.007,36,0.774,37,0.367,38,1.052,39,1.663,40,0.779,44,1.332,73,1.879,75,0.736,108,1.508,174,0.155,175,0.405,176,0.809,181,1.538,182,1.494,183,2.271,185,0.84,190,0.824,192,0.824,195,2.662,210,0.041,211,0.32,212,1.977,213,0.004,214,0.004,245,0.595,246,0.889,247,1.395,248,0.959,249,0.959,250,0.959,251,0.959,253,1.155,254,1.571,255,0.923,256,2.444,257,1.965,259,1.318,261,1.318,266,1.032,267,1.738,279,1.361,280,1.596,304,0.959,305,1.422,306,1.422,307,0.959,308,1.876,309,0.959,310,0.959,311,0.906,312,2.381,313,0.889,314,0.889,315,0.889,316,0.889,317,1.422,318,0.906,319,0.889,320,1.422,321,0.906,322,0.959,323,1.422,324,0.906,325,0.959,326,1.422,327,0.889,328,0.889,329,1.134,330,1.696,331,0.889,332,1.876,333,0.906,334,1.422,335,0.959,336,0.889,337,0.959,338,0.906,339,0.959,340,0.959,341,1.771,342,0.959,343,0.889,344,1.422,345,0.889,346,0.959,347,0.906,348,0.889,349,1.632,350,0.889,351,0.889,352,1.696,353,0.872,354,0.941,355,0.889,356,0.872,357,0.939,358,1.422,359,0.889,360,1.422,361,0.872,362,0.683,363,0.906,364,0.889,365,0.889,366,0.824,367,0.906,368,0.959,369,0.959,370,0.889,371,0.923,372,0.906,373,0.824,374,0.906,375,1.422,376,0.906,377,0.906,378,1.43,379,0.889,380,0.886,381,0.872,382,0.889,383,0.906,384,0.906,385,0.906,386,1.84,387,0.889,388,0.889,389,0.889,390,0.889,391,0.941,392,0.959,393,0.959,422,2.271,444,0.923,458,2.765,471,0.564,476,1.101,662,2.205,682,1.303,689,2.205,737,1.037,738,2.042,739,2.068,744,1.85,745,2.605,772,1.621,773,1.666,832,2.404,888,2.508,893,1.538,924,2.289,948,1.221,949,1.247,978,1.428,979,1.395,986,1.463,1039,3.845,1044,1.879,1061,4.44,1201,6.087,1211,2.013,1252,2.855,1403,1.5,1623,4.617,1624,6.246,1644,4.434,1660,2.508,1695,2.508,1788,4.434,2003,2.855,2011,8.473,2012,7.526,2013,3.504,2014,5.198,2015,6.195,2016,5.198,2017,6.246,2018,6.195,2019,6.195,2020,5.198,2021,5.198,2022,3.504,2023,5.198,2024,3.504,2025,3.504,2026,3.504,2027,3.504,2028,3.504,2029,5.047,2030,3.504,2031,3.504,2032,3.504,2033,2.662,2034,3.504,2035,3.504,2036,3.504,2037,3.504,2038,3.504,2039,3.504,2040,3.504,2041,3.504,2042,3.504,2043,3.113,2044,3.504,2045,3.504,2046,3.113,2047,3.504,2048,3.504,2049,3.504,2050,3.504,2051,3.504,2052,3.504,2053,3.504,2054,3.504,2055,3.504,2056,3.504,2057,3.504,2058,3.504,2059,3.504,2060,3.504,2061,3.504,2062,3.504,2063,3.504,2064,3.504,2065,3.504,2066,3.504,2067,3.504,2068,3.504,2069,3.504,2070,3.504,2071,3.504,2072,3.504,2073,3.504,2074,3.504,2075,3.504,2076,3.504,2077,3.504,2078,3.504,2079,3.504,2080,3.504,2081,3.504,2082,3.504,2083,3.504,2084,3.504,2085,3.504,2086,3.504,2087,3.504,2088,3.504,2089,3.504,2090,3.504,2091,3.504,2092,3.504,2093,5.198,2094,3.113,2095,2.855,2096,2.38]],["title/modules/MapModule.html",[394,1.381,404,2.838]],["body/modules/MapModule.html",[3,0.078,4,0.068,5,0.078,35,0.007,174,0.162,175,0.778,210,0.078,211,0.615,213,0.006,214,0.006,341,2.496,396,2.956,397,4.325,404,5.601,406,4.633,407,3.611,408,3.611,410,4.81,411,3.392,412,3.202,414,3.835,473,4.472,625,5.006,626,3.868,924,2.249,948,2.346,949,2.397,2012,5.982,2097,5.982,2098,5.982,2099,5.982,2100,6.734,2101,6.734,2102,6.734]],["title/components/MiniMapComponent.html",[245,0.457,343,1.207]],["body/components/MiniMapComponent.html",[3,0.052,4,0.045,5,0.052,7,0.19,24,1.142,27,1.287,32,1.123,35,0.007,36,0.703,75,0.946,174,0.081,175,0.52,182,1.239,210,0.052,211,0.411,213,0.005,214,0.005,245,0.684,246,1.142,247,1.67,248,1.232,249,1.232,250,1.232,251,1.232,253,1.382,254,1.807,255,1.186,256,2.479,257,2.166,259,1.577,261,1.577,266,1.235,267,1.949,279,0.894,280,1.357,296,1.674,298,1.735,299,1.969,300,1.462,304,1.232,305,1.702,306,1.702,307,1.232,308,2.103,309,1.232,310,1.232,311,1.163,312,2.496,313,1.142,314,1.142,315,1.142,316,1.142,317,1.702,318,1.163,319,1.142,320,1.702,321,1.163,322,1.232,323,1.702,324,1.163,325,1.232,326,1.702,327,1.142,328,1.142,329,1.357,330,1.95,331,1.142,332,2.103,333,1.163,334,1.95,335,1.232,336,1.142,337,1.232,338,1.163,339,1.232,340,1.232,341,1.163,342,1.232,343,1.949,344,2.385,345,1.142,346,1.232,347,1.163,348,1.142,349,1.877,350,1.142,351,1.142,352,1.95,353,1.12,354,1.209,355,1.142,356,1.12,357,1.123,358,1.702,359,1.142,360,1.702,361,1.12,362,0.877,363,1.163,364,1.142,365,1.142,366,1.059,367,1.163,368,1.232,369,1.232,370,1.142,371,1.186,372,1.163,373,1.059,374,1.163,375,1.702,376,1.163,377,1.163,378,1.435,379,1.142,380,1.061,381,1.12,382,1.142,383,1.163,384,1.163,385,1.163,386,2.063,387,1.142,388,1.142,389,1.142,390,1.142,391,1.209,392,1.232,393,1.232,737,2.386,738,2.523,739,2.15,740,1.792,741,1.915,744,2.735,745,2.536,746,1.927,748,1.332,767,2.202,768,1.751,769,1.306,842,1.473,843,1.535,844,1.359,877,3.133,880,3.06,974,2.028,975,2.028,978,3.133,979,3.06,980,1.976,981,2.028,982,1.927,983,1.835,984,1.927,985,2.028,986,1.88,987,1.976,996,3.821,1728,3.42,1729,5.414,1730,4.725,1731,3.999,2103,6.33,2104,5.805,2105,4.502,2106,4.502]],["title/guards/MiniMapService.html",[601,4.229,1763,3.233]],["body/guards/MiniMapService.html",[0,2.578,3,0.081,4,0.07,5,0.081,7,0.293,27,1.58,32,1.483,35,0.007,174,0.148,175,0.801,210,0.081,211,0.634,213,0.006,214,0.006,253,1.541,258,3.983,263,1.641,266,1.63,279,1.377,283,1.791,292,4.964,444,1.827,603,5.65,606,6.354,612,4.493,1763,5.576,1764,6.259,2107,6.935,2108,6.935,2109,6.935]],["title/components/MultipleDropdownComponent.html",[245,0.457,345,1.207]],["body/components/MultipleDropdownComponent.html",[3,0.046,4,0.04,5,0.046,7,0.168,24,1.004,27,1.201,32,1.489,34,0.832,35,0.007,36,0.821,37,0.368,38,0.801,39,1.784,40,1.779,62,2.641,75,0.832,133,0.582,174,0.072,175,0.458,182,0.689,210,0.046,211,0.362,213,0.004,214,0.004,245,0.638,246,1.004,247,1.526,248,1.084,249,1.084,250,1.084,251,1.084,253,1.263,254,1.685,255,1.043,256,2.462,257,2.064,259,1.441,261,1.441,263,1.547,265,5.504,266,1.129,267,1.841,279,1.129,280,1.45,296,1.473,297,1.695,298,1.855,299,1.954,300,1.563,301,1.614,304,1.084,305,1.555,306,1.555,307,1.084,308,1.988,309,1.084,310,1.084,311,1.024,312,2.439,313,1.004,314,1.004,315,1.004,316,1.004,317,1.555,318,1.024,319,1.004,320,1.555,321,1.024,322,1.084,323,1.555,324,1.024,325,1.819,326,1.555,327,1.004,328,1.004,329,1.24,330,1.819,331,1.004,332,1.988,333,1.024,334,1.819,335,1.084,336,1.004,337,1.084,338,1.024,339,2.104,340,1.084,341,1.024,342,1.084,343,1.004,344,1.084,345,1.841,346,2.308,347,1.024,348,1.004,349,1.751,350,1.004,351,1.004,352,1.819,353,0.985,354,1.063,355,1.004,356,0.985,357,1.027,358,1.555,359,1.004,360,1.555,361,0.985,362,0.772,363,1.024,364,1.685,365,1.004,366,0.931,367,1.024,368,1.084,369,1.084,370,1.004,371,1.043,372,1.024,373,0.931,374,1.024,375,1.555,376,1.024,377,1.024,378,1.311,379,1.004,380,0.969,381,0.985,382,1.004,383,1.024,384,1.024,385,1.024,386,1.95,387,1.004,388,1.004,389,1.004,390,1.004,391,1.063,392,1.084,393,1.084,662,1.41,737,1.172,738,1.105,739,1.195,740,1.577,741,1.75,742,1.883,743,1.883,744,1.41,745,1.41,746,1.695,748,1.966,749,1.577,751,1.995,752,2.22,753,2.761,754,2.365,755,1.966,756,2.56,757,2.565,758,2.316,759,2.373,760,2.373,761,2.262,762,1.938,763,2.211,764,2.023,765,2.124,768,1.541,795,2.702,796,3.151,802,3.685,809,3.151,817,1.654,818,1.506,837,2.373,839,1.614,840,1.614,841,1.784,853,2.196,855,3.271,866,2.124,867,2.124,886,1.784,893,1.738,996,4.522,1049,2.566,1427,2.458,1441,2.057,1453,2.458,1473,3.518,1474,3.009,1475,3.009,1476,3.227,1592,3.518,1593,5.904,1594,5.048,1597,3.518,1751,7.492,1752,6.871,2110,6.647,2111,5.683,2112,3.961,2113,3.961,2114,3.961,2115,3.961,2116,5.683,2117,3.961,2118,5.683,2119,5.683,2120,3.961]],["title/interfaces/Notification.html",[474,0.142,2121,4.229]],["body/interfaces/Notification.html",[3,0.072,4,0.062,5,0.072,7,0.262,8,0.549,23,4.015,35,0.007,37,0.45,133,0.731,174,0.139,176,1.43,187,2.587,189,2.466,192,1.457,210,0.106,213,0.006,214,0.006,283,1.816,295,2.615,373,2.142,455,5.504,459,3.322,471,1.439,474,0.185,475,1.207,490,6.247,507,3.959,508,5.488,509,2.139,600,3.322,689,3.242,1882,5.048,1883,5.048,1927,5.504,2121,8.203,2122,6.196,2123,6.196,2124,6.196,2125,6.196,2126,8.327,2127,6.196,2128,6.196,2129,6.196,2130,6.196,2131,6.196,2132,5.504,2133,6.196,2134,6.196,2135,6.196]],["title/components/OptionComponent.html",[245,0.457,347,1.23]],["body/components/OptionComponent.html",[3,0.039,4,0.034,5,0.039,7,0.142,24,0.85,27,1.09,32,1.59,35,0.007,36,0.568,37,0.394,39,2.025,40,1.676,62,2.195,75,0.704,108,1.751,133,0.645,174,0.061,175,0.387,182,0.583,210,0.039,211,0.306,213,0.004,214,0.004,245,0.579,246,0.85,247,1.35,248,0.918,249,0.918,250,0.918,251,0.918,253,1.118,254,1.53,255,0.883,256,2.437,257,2.1,259,1.275,261,1.275,263,1.698,266,0.999,267,1.7,279,1.331,280,1.567,283,1.462,295,2.287,296,2.804,298,1.684,299,1.91,300,1.419,301,2.05,303,1.741,304,0.918,305,1.376,306,1.376,307,0.918,308,1.835,309,0.918,310,0.918,311,0.866,312,2.359,313,0.85,314,0.85,315,0.85,316,0.85,317,1.376,318,0.866,319,0.85,320,1.376,321,0.866,322,0.918,323,1.376,324,0.866,325,0.918,326,1.376,327,0.85,328,0.85,329,1.097,330,1.652,331,0.85,332,1.835,333,0.866,334,1.376,335,0.918,336,0.85,337,0.918,338,0.866,339,2.202,340,0.918,341,0.866,342,0.918,343,0.85,344,0.918,345,0.85,346,0.918,347,1.733,348,0.85,349,1.589,350,0.85,351,0.85,352,1.652,353,0.834,354,0.9,355,0.85,356,0.834,357,0.908,358,1.376,359,0.85,360,1.376,361,0.834,362,1.307,363,0.866,364,0.85,365,0.85,366,0.788,367,0.866,368,0.918,369,0.918,370,0.85,371,0.883,372,0.866,373,0.788,374,0.866,375,1.376,376,0.866,377,0.866,378,1.16,379,0.85,380,0.858,381,0.834,382,0.85,383,0.866,384,0.866,385,0.866,386,1.8,387,0.85,388,0.85,389,0.85,390,0.85,391,0.9,392,0.918,393,0.918,662,2.148,737,0.992,738,2.004,739,2.023,740,3.003,741,1.032,744,1.79,748,0.992,749,1.335,752,1.68,753,1.275,754,2.386,755,2.232,757,2.637,762,1.715,764,2.684,767,1.64,768,1.956,769,0.973,770,2.152,795,2.391,796,2.788,802,4.337,809,3.717,818,1.275,819,2.978,826,2.86,827,2.172,828,1.594,829,1.594,830,2.172,831,3.121,832,1.551,833,1.689,834,2.081,835,3.121,836,2.081,837,1.4,838,1.926,839,1.367,840,1.367,841,3.624,842,1.645,843,1.715,844,1.518,846,4.319,847,3.6,848,2.547,849,1.926,852,1.999,853,2.788,854,2.277,858,3.074,859,3.689,863,2.4,866,1.798,867,1.798,868,1.741,869,1.798,870,1.798,876,2.172,884,2.277,885,5.094,890,2.4,891,1.64,893,1.472,902,2.277,978,2.05,979,2.002,982,1.435,986,1.4,996,4.758,1005,4.161,1443,1.999,1448,1.999,1455,1.999,1459,5.36,1460,4.467,1475,4.584,1501,3.153,1777,3.745,1807,3.236,1920,2.731,1930,4.799,1931,4.799,1937,5.36,1974,2.731,1975,2.978,1976,2.978,1977,4.467,2136,3.353,2137,5.029,2138,3.353,2139,3.353,2140,3.353,2141,3.353,2142,3.353,2143,3.353,2144,3.353,2145,3.353,2146,3.353,2147,3.353,2148,3.353,2149,3.353,2150,3.353,2151,3.353,2152,3.353,2153,2.978,2154,3.353,2155,2.731,2156,3.353,2157,3.353,2158,3.353,2159,3.353,2160,2.978,2161,3.353,2162,3.353,2163,3.353,2164,3.353]],["title/components/PlacesComponent.html",[245,0.457,348,1.207]],["body/components/PlacesComponent.html",[3,0.038,4,0.032,5,0.038,7,0.137,8,0.351,24,0.821,27,0.885,31,1.818,32,1.545,34,1.384,35,0.007,36,0.841,37,0.398,38,1.333,39,1.586,40,1.769,44,1.231,62,1.177,75,0.68,92,2.637,108,1.714,133,0.713,174,0.144,175,0.374,176,0.747,182,0.851,183,2.098,185,0.776,190,0.761,192,0.761,210,0.038,211,0.296,212,1.778,213,0.004,214,0.004,245,0.679,246,0.821,247,1.315,248,0.886,249,0.886,250,0.886,251,0.886,253,1.089,254,1.498,255,0.853,256,2.431,257,1.9,259,1.242,261,1.242,263,1.715,266,0.973,267,1.67,279,1.405,280,1.686,298,0.903,299,1.196,300,1.916,304,0.886,305,1.34,306,1.34,307,0.886,308,1.803,309,0.886,310,0.886,311,0.837,312,2.341,313,0.821,314,0.821,315,0.821,316,0.821,317,1.34,318,0.837,319,0.821,320,1.34,321,0.837,322,0.886,323,1.34,324,0.837,325,0.886,326,1.34,327,0.821,328,0.821,329,1.068,330,1.617,331,0.821,332,1.803,333,0.837,334,1.34,335,0.886,336,0.821,337,0.886,338,0.837,339,0.886,340,0.886,341,0.837,342,0.886,343,0.821,344,0.886,345,0.821,346,0.886,347,0.837,348,1.67,349,1.864,350,0.821,351,0.821,352,1.617,353,0.805,354,0.869,355,0.821,356,0.805,357,1.19,358,1.34,359,0.821,360,1.34,361,0.805,362,0.631,363,0.837,364,0.821,365,0.821,366,0.761,367,0.837,368,0.886,369,0.886,370,0.821,371,0.853,372,0.837,373,1.664,374,0.837,375,1.34,376,0.837,377,0.837,378,1.13,379,0.821,380,0.835,381,0.805,382,0.821,383,0.837,384,0.837,385,0.837,386,1.769,387,0.821,388,0.821,389,0.821,390,0.821,391,0.869,392,0.886,393,0.886,444,0.853,476,1.017,503,2.098,507,3.364,679,2.157,682,1.204,689,2.103,737,2.093,738,2.355,741,0.997,744,2.344,748,0.958,750,1.996,752,1.081,755,1.449,757,1.57,758,1.32,759,1.352,760,1.352,761,1.289,762,1.104,769,1.911,826,1.289,842,1.059,843,1.104,844,0.977,858,3.186,868,3.068,869,3.168,870,3.168,877,2.884,898,2.009,919,3.068,923,3.532,924,2.2,926,3.168,945,2.544,946,3.928,948,1.128,949,1.152,952,1.681,954,1.93,955,2.637,970,4.013,974,1.458,975,1.458,978,2.685,979,2.622,980,1.421,981,1.458,982,1.385,983,1.32,984,1.385,985,1.458,986,1.352,987,1.421,1039,3.666,1061,4.268,1211,1.859,1219,3.327,1336,2.637,1337,2.637,1370,2.92,1388,2.637,1391,2.637,1448,1.93,1543,2.199,1788,4.229,1807,1.736,1912,3.174,2165,3.237,2166,5.908,2167,4.898,2168,5.908,2169,5.908,2170,4.898,2171,4.898,2172,4.898,2173,3.237,2174,6.588,2175,4.898,2176,4.898,2177,3.237,2178,4.898,2179,3.237,2180,3.237,2181,3.237,2182,4.898,2183,3.237,2184,3.237,2185,3.237,2186,3.237,2187,3.237,2188,3.237,2189,3.237,2190,3.237,2191,4.898,2192,3.237,2193,3.237,2194,3.237,2195,3.237,2196,3.237,2197,3.237,2198,2.876,2199,2.876,2200,3.237,2201,3.237,2202,3.237,2203,3.237,2204,3.237,2205,3.237,2206,3.237,2207,4.898,2208,2.876,2209,4.898,2210,3.237,2211,3.237,2212,3.237,2213,3.237,2214,2.459,2215,2.199,2216,2.459,2217,2.459]],["title/components/PlacesMapComponent.html",[245,0.457,350,1.207]],["body/components/PlacesMapComponent.html",[3,0.055,4,0.047,5,0.055,7,0.2,24,1.199,27,1.321,32,1.162,35,0.007,36,0.727,75,0.993,174,0.132,175,0.546,182,1.271,210,0.055,211,0.432,213,0.005,214,0.005,245,0.702,246,1.199,247,1.727,248,1.294,249,1.294,250,1.294,251,1.294,253,1.43,254,1.854,255,1.245,256,2.485,257,2.203,259,1.631,261,1.631,266,1.277,267,1.989,279,0.939,280,1.403,296,1.758,298,1.795,299,2.004,300,1.512,304,1.294,305,1.76,306,1.76,307,1.294,308,2.147,309,1.294,310,1.294,311,1.222,312,2.516,313,1.199,314,1.199,315,1.199,316,1.199,317,1.76,318,1.222,319,1.199,320,1.76,321,1.222,322,1.294,323,1.76,324,1.222,325,1.294,326,1.76,327,1.199,328,1.199,329,1.403,330,2.001,331,1.199,332,2.147,333,1.222,334,2.001,335,1.294,336,1.199,337,1.294,338,1.222,339,1.294,340,1.294,341,1.222,342,1.294,343,1.199,344,1.294,345,1.199,346,1.294,347,1.222,348,1.199,349,2.38,350,1.989,351,1.199,352,2.001,353,1.176,354,1.269,355,1.199,356,1.176,357,1.162,358,1.76,359,1.199,360,1.76,361,1.176,362,0.921,363,1.222,364,1.199,365,1.199,366,1.112,367,1.222,368,1.294,369,1.294,370,1.199,371,1.245,372,1.222,373,1.112,374,1.222,375,1.76,376,1.222,377,1.222,378,1.484,379,1.199,380,1.097,381,1.176,382,1.199,383,1.222,384,1.222,385,1.222,386,2.106,387,1.199,388,1.199,389,1.199,390,1.199,391,1.269,392,1.294,393,1.294,737,1.399,738,1.795,739,2.206,740,1.882,741,1.98,745,2.602,746,2.024,748,1.399,767,2.313,768,1.839,769,1.372,842,1.547,843,1.613,844,1.427,880,3.123,923,2.535,924,1.579,947,3.852,948,1.647,949,1.683,987,2.075,1728,3.592,1729,5.554,1730,4.887,1734,3.852,2218,6.494,2219,5.956,2220,4.728,2221,4.728]],["title/components/PlacesSliderComponent.html",[245,0.457,351,1.207]],["body/components/PlacesSliderComponent.html",[3,0.047,4,0.04,5,0.047,7,0.17,8,0.411,24,1.016,27,0.724,31,1.945,32,1.395,34,1.204,35,0.007,36,0.825,37,0.35,38,1.16,39,1.076,40,1.717,75,0.842,133,0.62,174,0.145,175,0.463,176,0.925,182,0.697,185,0.96,190,0.943,192,0.943,210,0.047,211,0.366,212,0.858,213,0.004,214,0.004,245,0.642,246,1.016,247,1.539,248,1.097,249,1.097,250,1.097,251,1.097,253,1.274,254,1.697,255,1.056,256,2.463,257,2.074,259,1.454,261,1.454,263,1.616,266,1.138,267,1.852,279,1.138,280,1.46,290,1.458,296,1.491,297,1.716,298,1.6,299,1.886,300,1.348,304,1.097,305,1.569,306,1.569,307,1.097,308,1.999,309,1.097,310,1.097,311,1.036,312,2.445,313,1.016,314,1.016,315,1.016,316,1.016,317,1.569,318,1.036,319,1.016,320,1.569,321,1.036,322,1.097,323,1.569,324,1.036,325,1.097,326,1.569,327,1.016,328,1.016,329,1.25,330,1.831,331,1.016,332,1.999,333,1.036,334,1.569,335,1.097,336,1.016,337,1.097,338,1.036,339,1.097,340,1.097,341,1.036,342,1.097,343,1.016,344,1.097,345,1.016,346,1.097,347,1.036,348,1.016,349,2.302,350,1.016,351,1.852,352,1.831,353,0.997,354,1.076,355,1.016,356,0.997,357,1.035,358,1.569,359,1.016,360,1.569,361,0.997,362,0.781,363,1.036,364,1.016,365,1.016,366,0.943,367,1.036,368,1.097,369,1.097,370,1.016,371,1.923,372,1.036,373,1.816,374,1.036,375,1.569,376,1.036,377,1.036,378,1.323,379,1.016,380,0.978,381,0.997,382,1.016,383,1.036,384,1.036,385,1.036,386,1.961,387,1.016,388,1.016,389,1.016,390,1.016,391,1.076,392,1.097,393,1.097,476,1.259,679,1.867,682,1.491,737,2.286,738,2.493,739,1.73,741,1.765,744,2.599,745,1.427,746,1.716,748,1.186,754,2.04,757,1.285,758,1.634,759,1.674,760,1.674,761,1.596,767,1.961,768,1.559,769,1.163,770,2.453,772,1.854,773,1.906,842,1.312,843,1.367,844,1.21,877,2.977,923,3.916,947,3.266,954,2.39,974,1.806,975,1.806,978,2.977,979,2.907,980,1.76,981,1.806,982,1.716,983,1.634,984,1.716,985,1.806,986,1.674,987,1.76,1052,4.103,2198,3.561,2218,7.138,2222,6.547,2223,2.87,2224,4.545,2225,3.894,2226,5.733,2227,3.561,2228,5.733,2229,5.733,2230,3.561,2231,4.009,2232,4.009,2233,3.561]],["title/interfaces/Plan.html",[66,2.089,474,0.142]],["body/interfaces/Plan.html",[3,0.067,4,0.058,5,0.067,7,0.243,8,0.524,35,0.007,36,0.648,37,0.428,66,3.207,106,2.087,133,0.786,174,0.104,210,0.102,213,0.006,214,0.006,238,3.715,299,1.401,474,0.261,475,1.118,478,4.263,483,2.191,485,4.396,502,1.601,777,4.024,891,3.574,1363,4.263,1524,2.584,1553,4.107,1554,4.196,1555,4.196,1556,4.196,1557,3.295,1558,4.196,1559,4.196,1560,3.295,1561,3.295,1562,3.295,1563,3.295,1564,3.918,1565,3.794,1566,4.196,1567,3.295,1568,3.295,1569,3.295,1570,4.196,1571,4.196,1572,5.015,1573,3.295,1574,3.181,1575,3.076,1576,3.295,1577,3.295,1578,3.295,1579,3.076,1580,3.181,1581,3.295,1582,3.295,1583,3.295,1584,3.295,1585,3.295,1586,3.295,1587,3.295,1588,4.692]],["title/interfaces/Plan-1.html",[66,1.752,215,1.093,474,0.119]],["body/interfaces/Plan-1.html",[3,0.067,4,0.058,5,0.067,7,0.243,8,0.524,35,0.007,36,0.648,37,0.428,66,3.207,106,2.087,133,0.786,174,0.104,210,0.102,213,0.006,214,0.006,238,3.715,299,1.401,474,0.261,475,1.118,478,4.263,483,2.191,485,4.396,502,1.601,777,4.024,891,3.574,1363,4.263,1524,2.584,1554,4.196,1555,4.196,1556,4.196,1557,3.295,1558,4.196,1559,4.196,1560,3.295,1561,3.295,1562,3.295,1563,3.295,1564,3.918,1565,3.794,1566,4.196,1567,3.295,1568,3.295,1569,3.295,1570,4.196,1571,4.196,1572,5.015,1573,3.295,1574,3.181,1575,3.076,1576,3.295,1577,3.295,1578,3.295,1579,3.076,1580,3.181,1581,3.295,1582,3.295,1583,3.295,1584,3.295,1585,3.295,1586,3.295,1587,3.295,1588,4.692,1589,4.107]],["title/modules/PlannerModule.html",[394,1.381,2234,3.616]],["body/modules/PlannerModule.html",[3,0.052,4,0.045,5,0.052,35,0.007,174,0.175,175,0.515,210,0.052,211,0.407,213,0.005,214,0.005,311,2.149,313,2.108,315,2.108,327,2.108,348,2.108,350,2.108,351,2.108,353,2.069,377,2.149,385,2.149,387,2.108,388,2.108,389,2.108,390,1.797,396,1.956,397,3.312,404,4.958,406,3.547,407,2.389,408,2.389,410,3.682,411,3.111,412,2.936,414,2.936,418,4.195,419,3.547,426,3.027,430,4.421,431,3.19,617,5.648,623,4.776,625,3.833,626,2.559,632,5.486,633,3.959,634,2.887,635,2.887,636,3.027,637,5.486,638,3.959,639,5.486,723,3.63,899,6.317,923,4.458,1543,3.027,1744,5.486,1745,3.959,1754,3.385,1756,3.385,1760,2.887,1761,3.385,2219,3.63,2222,3.63,2234,7.418,2235,3.959,2236,3.959,2237,3.959,2238,3.959,2239,5.952,2240,4.457,2241,3.959,2242,3.63,2243,5.031,2244,3.959,2245,4.457,2246,6.176,2247,3.959,2248,6.176,2249,4.457,2250,6.296,2251,3.63,2252,4.692,2253,4.457,2254,3.63,2255,6.176,2256,4.457,2257,3.63,2258,3.959,2259,5.486,2260,3.959,2261,3.959,2262,3.959,2263,3.959,2264,4.457,2265,3.959,2266,6.176,2267,3.959,2268,3.19,2269,5.486,2270,3.027,2271,4.457]],["title/interfaces/QRLocal.html",[474,0.142,2272,3.878]],["body/interfaces/QRLocal.html",[3,0.072,4,0.063,5,0.072,7,0.264,8,0.552,31,1.963,35,0.007,37,0.369,75,1.991,133,0.5,174,0.165,175,0.72,176,1.439,182,1.084,185,1.494,190,1.466,192,1.466,210,0.072,211,0.57,213,0.006,214,0.006,245,0.802,253,1.386,254,1.952,256,1.581,259,1.581,261,1.581,263,1.444,267,1.581,280,1.36,283,1.821,290,2.268,353,1.551,354,1.674,373,2.145,386,1.674,474,0.186,475,1.215,476,1.958,483,1.412,486,2.677,509,1.74,676,3.869,679,2.148,682,2.318,919,3.238,945,3.998,952,3.238,954,3.717,2272,6.271,2273,5.538,2274,5.538,2275,5.538,2276,5.538,2277,5.538,2278,4.737,2279,5.538,2280,5.538]],["title/components/QrComponent.html",[245,0.457,353,1.184]],["body/components/QrComponent.html",[3,0.045,4,0.039,5,0.045,7,0.163,8,0.4,24,0.98,27,0.698,31,1.866,32,1.297,34,1.173,35,0.007,36,0.811,37,0.314,38,1.13,62,2.03,75,1.667,133,0.576,174,0.143,175,0.446,176,0.892,182,0.971,185,0.926,190,0.908,192,0.908,210,0.045,211,0.353,213,0.004,214,0.004,245,0.731,246,0.98,247,1.499,248,1.057,249,1.057,250,1.057,251,1.057,253,1.241,254,1.662,255,1.018,256,2.458,257,2.045,259,1.416,261,1.416,263,1.489,266,1.109,267,1.82,279,1.109,280,1.218,283,0.843,290,1.405,296,2.437,298,2.003,299,2.084,300,1.541,304,1.057,305,1.528,306,1.528,307,1.057,308,1.965,309,1.057,310,1.057,311,0.998,312,2.428,313,0.98,314,0.98,315,0.98,316,0.98,317,1.528,318,0.998,319,0.98,320,1.528,321,0.998,322,1.057,323,1.528,324,0.998,325,1.057,326,1.528,327,0.98,328,0.98,329,1.218,330,1.794,331,0.98,332,1.965,333,0.998,334,1.794,335,1.057,336,0.98,337,1.057,338,0.998,339,1.057,340,1.057,341,0.998,342,1.057,343,0.98,344,1.057,345,0.98,346,1.057,347,0.998,348,0.98,349,1.726,350,0.98,351,0.98,352,1.794,353,1.786,354,1.76,355,0.98,356,0.961,357,1.008,358,1.528,359,0.98,360,1.528,361,0.961,362,0.753,363,0.998,364,0.98,365,0.98,366,0.908,367,0.998,368,1.057,369,1.057,370,0.98,371,1.018,372,0.998,373,1.688,374,0.998,375,1.528,376,0.998,377,0.998,378,1.288,379,0.98,380,0.952,381,0.961,382,0.98,383,0.998,384,0.998,385,0.998,386,2.197,387,0.98,388,0.98,389,0.98,390,0.98,391,1.037,392,1.057,393,1.057,474,0.115,476,1.214,483,1.484,486,1.239,509,1.078,672,2.398,676,2.398,679,1.829,682,1.437,737,2.253,738,2.475,739,1.685,740,1.538,741,2.018,742,1.837,743,1.837,744,2.71,745,1.987,746,2.389,748,1.652,749,1.538,750,1.575,751,1.946,752,1.865,753,1.469,754,1.987,755,1.143,756,1.74,757,2.301,758,2.276,759,2.331,760,2.331,761,2.222,762,1.318,763,1.503,764,1.375,765,2.072,766,1.538,767,1.89,768,2.55,769,1.62,770,1.654,771,2.935,772,1.787,773,1.837,817,2.331,818,2.492,842,1.264,843,1.318,844,1.685,858,2.389,877,2.927,919,3.404,945,2.899,952,2.007,954,2.304,974,1.74,975,1.74,977,3.148,978,2.927,979,2.858,980,1.696,981,1.74,982,1.654,983,1.575,984,1.654,985,1.74,986,1.613,987,1.696,1403,1.654,1453,2.398,2268,2.766,2272,3.148,2273,3.432,2274,3.432,2275,4.959,2276,5.822,2277,3.432,2278,2.935,2279,4.959,2280,3.432,2281,5.583,2282,3.864,2283,3.864,2284,3.432]],["title/components/RegisterComponent.html",[245,0.457,355,1.207]],["body/components/RegisterComponent.html",[3,0.034,4,0.029,5,0.034,7,0.123,8,0.324,24,2.086,27,0.817,31,1.859,32,1.391,34,0.95,35,0.007,36,0.913,37,0.357,38,0.915,40,0.648,75,0.613,108,1.312,133,0.573,174,0.146,175,0.337,176,0.673,182,0.507,185,0.699,187,1.218,189,1.161,190,0.686,192,0.686,210,0.034,211,0.267,212,1.186,213,0.003,214,0.003,245,0.648,246,0.74,247,1.214,248,0.798,249,0.798,250,0.798,251,0.798,253,1.005,254,1.404,255,0.768,256,2.413,257,1.813,259,1.147,261,1.147,263,1.661,266,0.898,267,1.582,279,1.341,280,1.473,283,0.986,296,1.085,297,1.248,298,1.545,299,1.819,300,1.302,301,1.189,304,0.798,305,1.238,306,1.516,307,0.798,308,1.708,309,0.798,310,0.798,311,0.754,312,2.286,313,0.74,314,0.74,315,0.74,316,0.74,317,1.238,318,0.754,319,0.74,320,1.238,321,0.754,322,0.798,323,1.238,324,0.754,325,0.798,326,1.238,327,0.74,328,0.74,329,0.986,330,1.516,331,0.74,332,1.708,333,0.754,334,1.238,335,0.798,336,0.74,337,0.798,338,0.754,339,1.238,340,0.798,341,0.754,342,0.798,343,0.74,344,0.798,345,0.74,346,0.798,347,0.754,348,0.74,349,1.459,350,0.74,351,0.74,352,1.516,353,0.726,354,0.783,355,1.582,356,0.726,357,0.817,358,1.238,359,0.74,360,1.238,361,0.726,362,0.568,363,0.754,364,0.74,365,0.74,366,0.686,367,0.754,368,0.798,369,0.798,370,0.74,371,0.768,372,0.754,373,0.686,374,0.754,375,1.238,376,0.754,377,0.754,378,1.044,379,0.74,380,0.771,381,0.726,382,0.74,383,0.754,384,0.754,385,0.754,386,1.675,387,0.74,388,0.74,389,0.74,390,0.74,391,0.783,392,0.798,393,0.798,419,1.675,471,0.469,476,0.916,509,0.814,600,1.564,608,1.515,631,5.231,640,2.591,653,6.274,662,2.22,672,2.806,679,1.545,689,2.542,708,1.564,737,1.998,738,2.331,739,1.671,741,1.392,744,2.22,748,1.338,751,1.469,752,1.51,753,1.72,754,2.22,755,2.558,756,2.037,757,2.59,758,1.189,759,1.218,760,1.218,761,1.161,762,2.128,763,2.154,764,2.403,768,1.135,770,1.248,772,1.349,773,1.387,817,1.218,818,1.109,826,2.688,828,1.387,829,1.387,832,1.349,833,1.469,837,1.218,839,1.843,840,1.843,842,1.812,843,1.542,844,1.671,849,1.675,852,3.72,854,1.981,855,2.81,857,1.81,858,3.384,859,2.212,866,1.564,867,1.564,868,3.87,869,3.995,870,4.747,872,3.964,873,3.964,876,4.043,877,2.543,880,1.8,881,3.436,886,1.314,888,3.237,924,2.084,948,1.016,949,1.038,974,1.314,975,1.314,978,2.543,979,2.484,980,1.28,981,1.314,982,1.248,983,1.189,984,1.248,985,1.314,986,1.218,987,1.28,1141,4.512,1221,4.375,1403,1.248,1417,2.088,1418,2.216,1419,2.088,1423,3.436,1429,1.89,1431,1.89,1432,1.89,1433,1.89,1434,1.81,1445,1.81,1446,1.89,1447,1.89,1453,1.81,1619,1.89,1807,1.564,1868,4.92,1869,5.542,1870,4.017,1873,4.017,1878,5.083,1880,5.083,1881,2.377,1882,2.377,1883,2.377,1884,2.591,1885,2.591,1886,4.512,1887,4.92,1888,2.591,1889,6.345,1891,2.591,1893,2.216,1894,2.591,1895,2.591,1898,2.591,1899,2.591,1901,5.819,1902,5.426,1903,6.345,1904,5.542,1906,2.591,1907,6.441,1908,2.377,1909,2.377,1910,3.684,1911,2.377,1912,4.375,1913,2.377,1914,2.377,1915,3.684,1916,4.207,1917,2.377,1918,2.377,1919,2.377,1920,2.377,1921,4.017,1922,5.542,1923,2.377,2132,2.591,2285,2.917,2286,5.539,2287,4.523,2288,5.539,2289,4.523,2290,2.917,2291,2.917,2292,2.917,2293,2.917,2294,2.917,2295,2.917,2296,2.917,2297,2.917,2298,2.917,2299,2.917,2300,2.917]],["title/components/RouteDetailsComponent.html",[245,0.457,356,1.184]],["body/components/RouteDetailsComponent.html",[3,0.038,4,0.033,5,0.038,7,0.138,8,0.353,24,0.828,27,0.89,31,1.756,32,1.4,34,1.247,35,0.007,36,0.802,37,0.317,38,1.201,44,1.241,75,0.686,86,1.917,108,1.723,133,0.599,174,0.155,175,0.377,176,0.753,182,0.857,185,0.782,187,1.363,189,1.299,190,0.767,192,0.767,210,0.038,211,0.298,212,1.416,213,0.004,214,0.004,245,0.57,246,0.828,247,1.323,248,0.893,249,0.893,250,0.893,251,0.893,253,1.095,254,1.506,255,0.86,256,2.432,257,1.906,259,1.25,261,1.25,263,1.562,266,0.979,267,1.677,279,1.314,280,1.629,283,0.712,293,2.217,297,2.109,298,1.981,299,2.092,300,1.67,301,2.42,303,2.56,304,0.893,305,1.349,306,1.349,307,0.893,308,1.81,309,0.893,310,0.893,311,0.843,312,2.346,313,0.828,314,0.828,315,0.828,316,0.828,317,1.349,318,0.843,319,0.828,320,1.349,321,0.843,322,0.893,323,1.349,324,0.843,325,0.893,326,1.349,327,0.828,328,0.828,329,1.075,330,1.625,331,0.828,332,1.81,333,0.843,334,1.349,335,0.893,336,0.828,337,0.893,338,0.843,339,1.625,340,0.893,341,0.843,342,0.893,343,0.828,344,0.893,345,0.828,346,0.893,347,0.843,348,0.828,349,1.564,350,0.828,351,0.828,352,1.625,353,0.812,354,0.876,355,0.828,356,1.646,357,1.581,358,1.349,359,0.828,360,1.349,361,0.812,362,1.157,363,0.843,364,0.828,365,0.828,366,0.767,367,0.843,368,0.893,369,0.893,370,0.828,371,0.86,372,0.843,373,0.767,374,0.843,375,1.349,376,0.843,377,0.843,378,1.137,379,0.828,380,0.84,381,0.812,382,0.828,383,0.843,384,0.843,385,0.843,386,1.776,387,0.828,388,0.828,389,0.828,390,0.828,391,0.876,392,0.893,393,0.893,411,2.483,459,3.184,474,0.097,476,1.025,486,1.046,509,0.911,554,2.46,600,1.75,608,3.436,615,2.217,679,1.657,682,1.214,689,2.113,737,2.101,738,2.419,739,1.487,741,1.517,744,2.354,748,1.757,749,1.962,750,1.33,752,1.09,753,2.258,754,1.754,755,1.757,756,1.47,757,2.393,758,1.33,759,1.363,760,1.363,761,1.299,762,2.025,763,1.27,764,1.754,766,1.299,775,2.411,795,1.552,817,2.762,818,1.241,826,2.633,828,1.552,829,1.552,832,1.51,833,1.644,837,1.363,839,2.009,840,2.009,842,1.943,843,2.025,844,0.985,855,1.47,863,3.528,877,2.696,880,2.364,886,1.47,893,2.163,898,2.026,919,3.084,924,2.209,945,2.56,948,1.137,949,1.162,952,1.695,974,1.47,975,1.47,978,2.696,979,2.633,980,1.433,981,1.47,982,1.397,983,1.33,984,1.397,985,1.47,986,1.363,987,1.433,1004,3.685,1009,1.433,1019,1.695,1035,2.938,1036,6.502,1037,6.063,1038,2.659,1039,3.685,1040,1.75,1041,4.634,1042,2.659,1043,2.48,1044,1.75,1045,2.899,1046,2.115,1047,2.899,1048,2.336,1049,3.193,1050,4.015,1051,4.837,1052,4.25,1053,2.899,1054,2.659,1055,2.659,1056,2.899,1057,2.217,1058,2.899,1059,2.899,1060,2.899,1061,4.286,1062,2.899,1063,3.528,1064,2.899,1065,3.528,1066,2.899,1067,4.25,1403,1.397,1427,2.026,1428,2.026,1429,2.115,1431,2.115,1432,2.115,1433,2.115,1434,2.026,1438,2.336,1440,2.217,1441,1.695,1442,2.48,1443,1.946,1445,2.026,1446,2.115,1447,2.115,1448,1.946,1452,2.48,1619,2.115,1620,2.115,1621,2.659,1622,2.899,1930,3.528,1931,3.528,2301,3.744,2302,4.929,2303,3.264,2304,3.264,2305,3.264,2306,3.264,2307,2.659,2308,3.264]],["title/components/RouteListComponent.html",[245,0.457,359,1.207]],["body/components/RouteListComponent.html",[3,0.04,4,0.035,5,0.04,7,0.147,8,0.369,24,0.878,27,0.626,31,1.795,32,1.316,34,1.083,35,0.007,36,0.77,37,0.326,38,1.043,75,0.728,84,2.508,86,1.348,94,1.521,108,1.785,133,0.493,174,0.147,175,0.4,176,0.799,182,0.602,185,0.83,190,0.815,192,0.815,199,2.822,210,0.04,211,0.316,212,0.742,213,0.004,214,0.004,245,0.591,246,0.878,247,1.384,248,0.948,249,0.948,250,0.948,251,0.948,253,1.145,254,1.56,255,0.912,256,2.442,257,1.956,259,1.307,261,1.307,263,1.558,266,1.023,267,1.728,279,1.023,280,1.342,290,1.26,296,1.916,297,2.205,298,2.206,299,2.22,300,1.859,301,2.508,304,0.948,305,1.41,306,1.41,307,0.948,308,1.865,309,0.948,310,0.948,311,0.895,312,2.376,313,0.878,314,0.878,315,0.878,316,0.878,317,1.41,318,0.895,319,0.878,320,1.41,321,0.895,322,0.948,323,1.41,324,0.895,325,0.948,326,1.41,327,0.878,328,0.878,329,1.124,330,1.684,331,0.878,332,1.865,333,0.895,334,1.994,335,0.948,336,0.878,337,0.948,338,0.895,339,1.41,340,0.948,341,0.895,342,0.948,343,0.878,344,0.948,345,0.878,346,0.948,347,0.895,348,0.878,349,1.621,350,0.878,351,0.878,352,1.684,353,0.862,354,0.93,355,0.878,356,0.862,357,1.526,358,1.41,359,1.728,360,1.41,361,0.862,362,0.675,363,0.895,364,0.878,365,0.878,366,1.212,367,0.895,368,0.948,369,0.948,370,0.878,371,0.912,372,0.895,373,0.815,374,0.895,375,1.41,376,0.895,377,0.895,378,1.189,379,0.878,380,0.879,381,0.862,382,0.878,383,0.895,384,0.895,385,0.895,386,1.83,387,0.878,388,0.878,389,0.878,390,0.878,391,0.93,392,0.948,393,0.948,394,1.005,444,0.912,458,2.754,470,2.649,476,1.088,594,1.412,616,1.447,679,2.032,682,1.288,735,1.447,737,2.155,738,2.47,739,2.056,740,1.379,741,2.098,742,1.647,743,1.647,744,2.592,745,1.233,746,1.483,748,2.016,749,2.45,750,1.412,751,1.745,752,1.721,753,1.959,754,2.717,755,1.821,756,1.56,757,2.534,758,2.101,759,2.152,760,2.152,761,2.052,762,2.099,763,2.005,764,1.834,765,1.858,766,1.379,767,1.695,768,2.005,769,1.495,770,2.205,775,2.521,777,2.45,795,1.647,817,3.042,818,1.317,826,2.45,828,1.647,829,1.647,832,1.603,833,1.745,837,1.447,839,2.101,840,2.101,842,2.013,843,2.099,844,1.045,855,1.56,877,2.778,880,2.45,886,1.56,974,1.56,975,1.56,977,2.822,978,2.778,979,2.713,980,1.521,981,1.56,982,1.483,983,1.412,984,1.483,985,1.56,986,1.447,987,1.521,1018,2.353,1036,6.22,1040,1.858,1043,2.632,1403,1.483,1427,2.15,1428,2.15,1429,2.245,1431,2.245,1432,2.245,1433,2.245,1434,2.15,1438,2.48,1445,2.15,1446,2.245,1447,2.245,1448,2.066,1452,2.632,1619,2.245,1620,2.245,1621,2.822,1755,6.22,1777,3.198,1963,2.15,2309,2.822,2310,5.013,2311,4.198,2312,4.578,2313,3.077,2314,5.154,2315,3.077,2316,3.077,2317,3.464,2318,3.464,2319,3.464,2320,3.464]],["title/interfaces/RouteState.html",[474,0.142,487,2.552]],["body/interfaces/RouteState.html",[3,0.074,4,0.064,5,0.074,7,0.268,8,0.557,35,0.007,36,0.716,37,0.303,86,3.024,106,2.827,110,3.29,133,0.778,150,2.169,174,0.141,210,0.106,213,0.006,214,0.006,242,3.191,283,1.382,300,1.489,357,1.144,362,1.234,380,1.08,471,1.251,474,0.262,475,1.234,486,2.03,487,4.509,493,3.638,494,3.638,502,1.768,518,5.168,554,2.89,564,3.512,570,2.956,685,2.255,779,3.397,782,2.89,783,3.127,784,2.89,785,2.355,1493,3.191,1495,3.191,1496,3.012,1501,2.78,1502,3.012,1510,4.113,1518,4.812,1519,3.931,1520,3.931]],["title/interfaces/RouteState-1.html",[215,1.093,474,0.119,487,2.141]],["body/interfaces/RouteState-1.html",[3,0.074,4,0.064,5,0.074,7,0.268,8,0.557,35,0.007,36,0.716,37,0.303,86,3.024,106,2.827,110,3.29,133,0.778,150,2.169,174,0.141,210,0.106,213,0.006,214,0.006,242,3.191,283,1.382,300,1.489,357,1.144,362,1.234,380,1.08,471,1.251,474,0.262,475,1.234,486,2.03,487,4.509,493,3.638,494,3.638,502,1.768,518,5.168,554,2.89,564,3.512,570,2.956,685,2.255,779,3.397,782,2.89,783,3.127,784,2.89,785,2.355,1493,3.191,1495,3.191,1496,3.012,1501,2.78,1502,3.012,1510,4.113,1519,3.931,1520,3.931,1521,4.812]],["title/injectables/RouterEffects.html",[0,1.495,448,3.407]],["body/injectables/RouterEffects.html",[0,1.267,2,1.271,3,0.029,4,0.025,5,0.029,7,0.213,8,0.289,18,3.828,19,3.828,20,3.828,27,0.729,30,4.567,31,1.722,32,1.59,34,0.847,35,0.008,36,0.456,37,0.193,38,0.816,39,2.333,40,1.931,41,6.686,42,6.674,44,0.959,73,2.702,83,3.064,105,6.853,133,0.505,174,0.146,175,0.291,176,0.582,178,1.713,179,1.504,181,1.107,182,1.487,184,1.916,185,0.604,187,1.053,188,2.055,189,1.004,190,0.593,191,2.241,192,0.593,208,2.055,209,1.634,210,0.029,211,0.23,212,1.509,213,0.003,214,0.003,243,1.449,266,0.801,279,0.501,280,0.55,295,1.964,329,0.88,349,1.768,366,1.185,380,0.688,390,1.023,394,1.462,444,0.664,448,2.887,458,2.455,470,1.467,471,0.649,497,2.241,506,3.064,509,2.043,594,2.054,595,4.69,616,2.104,626,1.449,735,1.053,736,2.74,769,1.17,920,2.74,929,2.887,931,4.276,969,3.064,972,4.69,1077,6.438,1078,5.26,1083,6.727,1092,4.105,1370,2.405,1607,1.916,1735,3.423,1963,2.503,2033,3.828,2268,3.607,2321,2.523,2322,4.476,2323,4.476,2324,4.476,2325,4.476,2326,4.476,2327,4.476,2328,4.476,2329,4.476,2330,4.476,2331,4.476,2332,4.476,2333,4.476,2334,2.241,2335,5.47,2336,2.523,2337,2.523,2338,8.072,2339,8.17,2340,6.505,2341,3.583,2342,3.583,2343,3.583,2344,3.583,2345,3.583,2346,2.523,2347,7.944,2348,3.286,2349,5.114,2350,5.964,2351,6.505,2352,3.583,2353,2.523,2354,3.583,2355,3.583,2356,2.523,2357,5.47,2358,2.523,2359,5.964,2360,5.114,2361,5.964,2362,5.114,2363,3.583,2364,2.523,2365,3.583,2366,2.523,2367,5.964,2368,3.583,2369,2.523,2370,3.583,2371,5.964,2372,3.583,2373,5.114,2374,2.523,2375,2.523,2376,3.583,2377,5.114,2378,2.523,2379,3.583,2380,3.583,2381,2.523,2382,3.286,2383,3.583,2384,2.523,2385,3.583,2386,2.523,2387,4.374,2388,3.583,2389,2.523,2390,3.583,2391,5.114,2392,3.583,2393,3.583,2394,2.523,2395,3.583,2396,3.583,2397,3.064,2398,4.033,2399,4.033,2400,2.523,2401,3.583,2402,3.583,2403,2.523,2404,2.523,2405,3.583,2406,3.583,2407,3.583,2408,2.523,2409,2.523,2410,2.241,2411,2.241,2412,2.241,2413,2.241]],["title/injectables/RouterEffects-1.html",[0,1.254,215,1.093,448,2.858]],["body/injectables/RouterEffects-1.html",[0,1.273,2,1.278,3,0.029,4,0.025,5,0.029,7,0.214,8,0.29,18,3.843,19,3.843,20,3.843,27,0.732,30,4.578,31,1.725,32,1.592,34,0.851,35,0.008,36,0.458,37,0.194,38,0.82,39,2.336,40,1.933,41,6.69,42,6.678,44,0.965,73,2.712,83,3.078,105,6.858,133,0.506,174,0.143,175,0.293,176,0.585,178,1.723,179,1.513,181,1.114,182,1.489,184,1.927,185,0.608,187,1.059,189,1.01,190,0.597,192,0.597,208,2.067,209,1.644,210,0.029,211,0.232,212,1.512,213,0.003,214,0.003,236,3.078,243,1.457,244,2.067,266,0.805,279,0.504,280,0.553,295,1.97,329,0.884,349,1.773,366,1.189,380,0.691,390,1.027,394,1.468,444,0.668,448,2.9,458,2.461,470,1.474,471,0.652,506,3.078,509,2.047,594,2.062,595,4.706,616,2.112,735,1.059,736,2.752,769,1.175,920,2.752,929,2.9,931,4.289,969,3.078,972,4.706,1077,6.446,1078,5.269,1083,6.733,1092,4.121,1370,2.416,1607,1.927,1735,3.436,1963,2.514,2033,3.843,2268,3.621,2322,4.494,2323,4.494,2324,4.494,2325,4.494,2326,4.494,2327,4.494,2328,4.494,2329,4.494,2330,4.494,2331,4.494,2332,4.494,2333,4.494,2334,2.254,2335,5.144,2338,8.078,2339,8.176,2340,6.518,2341,3.599,2342,3.599,2343,3.599,2344,3.599,2345,3.599,2347,7.951,2348,3.301,2349,5.131,2350,5.979,2351,6.518,2352,3.599,2354,3.599,2355,3.599,2357,5.484,2359,5.979,2360,5.131,2361,5.979,2362,5.131,2363,3.599,2365,3.599,2367,5.979,2368,3.599,2370,3.599,2371,5.979,2372,3.599,2373,5.131,2376,3.599,2377,5.131,2379,3.599,2380,3.599,2382,3.301,2383,3.599,2385,3.599,2387,4.388,2388,3.599,2390,3.599,2391,5.131,2392,3.599,2393,3.599,2395,3.599,2396,3.599,2397,3.078,2401,3.599,2402,3.599,2405,3.599,2406,3.599,2407,3.599,2410,2.254,2411,2.254,2412,2.254,2413,2.254,2414,2.537,2415,2.537,2416,2.537,2417,2.537,2418,2.537,2419,2.537,2420,2.537,2421,2.537,2422,2.537,2423,2.537,2424,2.537,2425,2.537,2426,2.537,2427,2.537,2428,2.537,2429,2.537,2430,2.537,2431,2.537,2432,2.537,2433,2.537,2434,2.537,2435,2.537,2436,2.537]],["title/interfaces/RouterStateUrl.html",[474,0.142,1076,3.878]],["body/interfaces/RouterStateUrl.html",[3,0.073,4,0.063,5,0.073,7,0.267,8,0.556,31,1.485,35,0.007,37,0.402,133,0.673,174,0.14,209,4.091,210,0.09,211,0.577,213,0.006,214,0.006,253,1.403,258,3.627,263,1.185,357,1.582,364,1.601,444,1.663,447,5.144,450,4.797,471,1.248,474,0.189,475,1.23,509,1.762,735,3.822,1069,5.609,1070,5.609,1071,6.891,1073,5.609,1074,6.891,1076,6.841,1077,7.349,1078,6.298,1079,5.609,1080,6.891,1081,5.144,1082,5.609,1083,4.797,1084,5.609,1085,5.609,1086,5.609]],["title/modules/RoutesRoutingModule.html",[394,1.381,2239,3.407]],["body/modules/RoutesRoutingModule.html",[3,0.062,4,0.054,5,0.062,35,0.007,37,0.336,62,2.549,174,0.172,175,0.621,182,1.218,210,0.062,211,0.491,213,0.005,214,0.005,245,0.909,313,1.777,314,1.364,315,1.777,327,1.777,343,1.777,348,1.977,350,1.977,351,1.977,353,1.744,387,1.777,388,1.777,389,1.777,390,1.777,396,2.36,412,2.557,414,3.332,443,4.025,444,1.417,469,3.653,470,2.835,471,0.865,473,2.982,602,6.33,606,6.369,634,3.485,641,4.086,642,4.086,644,5.438,645,3.653,723,4.381,769,1.56,968,3.653,1370,3.207,1754,4.086,1756,4.086,1760,4.541,1763,5.295,1764,3.85,1765,4.086,1771,6.925,2103,4.777,2104,4.381,2219,4.381,2222,4.381,2239,5.016,2241,4.777,2250,6.925,2251,4.381,2252,5.324,2254,4.381,2257,4.381,2258,4.777,2262,4.777,2263,4.777,2265,4.777,2269,6.225,2270,3.653,2437,5.378,2438,5.378,2439,5.378,2440,5.378,2441,5.378,2442,5.378,2443,5.378]],["title/interfaces/Saved.html",[362,0.928,474,0.142]],["body/interfaces/Saved.html",[3,0.093,4,0.056,5,0.065,7,0.238,8,0.517,31,1.874,35,0.007,37,0.382,40,1.604,86,3.269,133,0.713,150,2.345,174,0.166,175,0.651,176,1.299,182,0.979,185,1.349,190,1.324,192,1.324,196,4.031,210,0.065,211,0.514,212,1.545,213,0.005,214,0.005,245,0.693,253,1.251,254,1.831,256,1.428,259,1.428,261,1.428,263,1.631,267,1.428,280,1.228,283,1.738,290,2.048,357,1.017,361,1.401,362,1.693,366,1.324,371,1.483,373,2.091,380,1.433,394,2.312,444,1.483,458,2.776,470,3.057,474,0.168,475,1.097,476,1.769,486,2.85,594,2.295,616,2.351,679,2.014,682,2.094,735,2.351,919,2.924,927,4.278,929,4.031,931,3.825,945,3.749,952,2.924,954,3.357,970,3.825,1040,3.019,1483,2.836,1963,3.494,2223,4.031,2224,3.825,2225,3.825,2278,4.278,2397,4.278,2444,5.002,2445,4.278,2446,5.002,2447,5.002,2448,6.413,2449,5.002,2450,5.002,2451,5.002,2452,5.002]],["title/modules/SavedModule.html",[394,1.381,2453,3.616]],["body/modules/SavedModule.html",[3,0.072,4,0.062,5,0.072,29,4.591,35,0.007,174,0.169,175,0.717,186,3.441,210,0.072,211,0.567,213,0.006,214,0.006,361,2.267,362,1.209,396,2.724,397,4.115,406,4.408,407,3.327,408,3.327,410,4.576,411,3.866,412,3.649,414,3.649,426,4.215,430,5.494,431,4.442,617,6.191,623,5.234,625,4.763,626,3.564,634,4.021,635,4.021,636,4.215,2261,5.512,2270,4.215,2445,4.714,2453,7.316,2454,5.512,2455,5.512,2456,5.512,2457,5.512,2458,6.524,2459,6.206,2460,5.512]],["title/modules/SavedRoutingModule.html",[394,1.381,2458,3.407]],["body/modules/SavedRoutingModule.html",[3,0.08,4,0.069,5,0.08,35,0.007,174,0.163,175,0.8,210,0.08,211,0.632,213,0.006,214,0.006,245,0.665,361,2.04,396,3.039,412,3.292,414,3.899,443,4.71,444,1.823,469,4.702,470,3.178,471,1.114,473,3.838,602,5.57,606,4.702,641,5.259,642,5.259,644,3.976,645,4.702,2270,4.702,2445,5.259,2458,5.87,2460,6.149,2461,6.923]],["title/components/SavedSliderComponent.html",[245,0.457,361,1.184]],["body/components/SavedSliderComponent.html",[3,0.07,4,0.033,5,0.039,7,0.14,8,0.358,24,0.842,27,0.599,31,1.767,32,1.449,34,1.503,35,0.007,36,0.881,37,0.373,38,1.447,39,0.891,40,1.67,75,0.697,86,1.941,108,2.075,133,0.72,150,1.392,174,0.145,175,0.384,176,0.766,181,2.19,182,0.868,185,0.795,190,0.78,192,0.78,196,2.376,210,0.039,211,0.303,212,1.428,213,0.004,214,0.004,245,0.576,246,0.842,247,1.34,248,0.908,249,0.908,250,0.908,251,0.908,253,1.109,254,1.521,255,0.874,256,2.435,257,1.92,259,1.265,261,1.265,263,1.662,266,0.991,267,1.691,279,1.42,280,1.639,283,0.724,290,1.207,296,1.856,297,1.42,298,1.673,299,1.958,300,1.41,304,0.908,305,1.366,306,1.366,307,0.908,308,1.826,309,0.908,310,0.908,311,0.858,312,2.354,313,0.842,314,0.842,315,0.842,316,0.842,317,1.366,318,0.858,319,0.842,320,1.366,321,0.858,322,0.908,323,1.366,324,0.858,325,0.908,326,1.366,327,0.842,328,0.842,329,1.089,330,1.641,331,0.842,332,1.826,333,0.858,334,1.641,335,0.908,336,0.842,337,0.908,338,0.858,339,0.908,340,0.908,341,0.858,342,0.908,343,0.842,344,0.908,345,0.842,346,0.908,347,0.858,348,0.842,349,1.58,350,0.842,351,0.842,352,1.641,353,0.826,354,0.891,355,0.842,356,0.826,357,1.083,358,1.366,359,0.842,360,1.366,361,1.66,362,1.599,363,0.858,364,0.842,365,0.842,366,1.173,367,0.858,368,0.908,369,0.908,370,0.842,371,1.757,372,0.858,373,1.568,374,0.858,375,1.366,376,0.858,377,0.858,378,1.152,379,0.842,380,1.023,381,0.826,382,0.842,383,0.858,384,0.858,385,0.858,386,1.791,387,0.842,388,0.842,389,0.842,390,0.842,391,0.891,392,0.908,393,0.908,394,2.075,444,0.874,458,2.716,470,1.207,474,0.099,476,1.042,486,1.6,554,1.856,594,1.353,616,1.386,679,1.673,682,1.234,735,1.386,737,2.116,738,2.451,739,1.81,740,1.321,741,1.846,742,1.578,743,1.578,744,2.545,745,1.776,746,2.136,748,1.774,749,1.321,750,2.445,752,1.667,754,1.776,755,1.477,757,1.6,758,1.353,759,1.386,760,1.386,761,1.321,762,1.132,766,1.321,767,1.623,768,1.941,769,1.448,770,2.136,772,1.535,773,1.578,826,1.321,842,1.086,843,1.132,844,1.002,858,3.216,868,3.115,869,3.216,870,3.216,877,2.915,880,1.321,919,3.115,920,3.39,927,3.791,929,3.572,931,3.39,945,2.592,952,1.724,954,1.979,970,2.254,974,1.495,975,1.495,978,2.719,979,2.656,980,1.457,981,1.495,982,1.42,983,1.353,984,1.42,985,1.495,986,1.386,987,1.457,1040,1.78,1219,3.39,1403,1.42,1448,1.979,1483,1.672,1807,1.78,1912,3.234,1963,2.06,2214,2.521,2215,2.254,2216,2.521,2217,2.521,2223,2.376,2224,4.074,2225,3.39,2230,4.433,2233,2.948,2278,2.521,2397,2.521,2444,7.289,2445,6.234,2446,2.948,2447,4.433,2448,4.433,2449,2.948,2450,4.433,2451,2.948,2452,2.948,2462,4.991,2463,4.991,2464,3.319,2465,3.319,2466,3.319,2467,3.319,2468,3.319,2469,3.319,2470,4.991,2471,4.991,2472,3.319]],["title/interfaces/ScheduleState.html",[474,0.142,488,2.734]],["body/interfaces/ScheduleState.html",[3,0.079,4,0.068,5,0.079,35,0.007,84,2.773,116,4.057,118,3.648,133,0.736,174,0.123,210,0.107,213,0.006,214,0.006,471,1.306,474,0.259,475,1.326,481,4.057,483,2.034,488,4.982,498,4.222,499,4.222,502,1.898,570,2.587,685,2.355,782,3.018,783,3.225,784,3.018,785,2.53,1203,4.057,1496,3.859,1522,4.839,1523,5.543,1524,3.065,1525,4.621,1526,4.621,1527,4.621,1528,4.621,1529,4.621]],["title/interfaces/ScheduleState-1.html",[215,1.093,474,0.119,488,2.293]],["body/interfaces/ScheduleState-1.html",[3,0.079,4,0.068,5,0.079,35,0.007,84,2.773,116,4.057,118,3.648,133,0.736,174,0.123,210,0.107,213,0.006,214,0.006,471,1.306,474,0.259,475,1.326,481,4.057,483,2.034,488,4.982,498,4.222,499,4.222,502,1.898,570,2.587,685,2.355,782,3.018,783,3.225,784,3.018,785,2.53,1203,4.057,1496,3.859,1522,4.839,1524,3.065,1525,4.621,1526,4.621,1527,4.621,1528,4.621,1529,4.621,1530,5.543]],["title/components/SelectComponent.html",[245,0.457,363,1.23]],["body/components/SelectComponent.html",[3,0.046,4,0.039,5,0.046,7,0.166,8,0.405,24,0.997,27,0.71,31,1.877,32,1.486,34,1.188,35,0.007,36,0.818,37,0.382,38,1.144,39,1.777,40,1.471,75,0.826,86,2.575,108,1.64,133,0.64,174,0.144,175,0.454,176,0.908,182,0.684,187,1.642,189,1.566,190,0.925,192,0.925,210,0.046,211,0.359,212,0.842,213,0.004,214,0.004,245,0.736,246,0.997,247,1.518,248,1.076,249,1.076,250,1.076,251,1.076,253,1.257,254,1.679,255,1.036,256,2.461,257,2.059,259,1.434,261,1.434,263,1.609,266,1.123,267,1.835,279,1.123,280,1.444,290,1.431,298,1.097,299,1.381,300,0.925,303,2.937,304,1.076,305,1.548,306,1.548,307,1.076,308,1.981,309,1.076,310,1.076,311,1.016,312,2.436,313,0.997,314,0.997,315,0.997,316,0.997,317,1.548,318,1.016,319,0.997,320,1.548,321,1.016,322,1.076,323,1.548,324,1.016,325,1.076,326,1.548,327,0.997,328,0.997,329,1.233,330,1.812,331,0.997,332,1.981,333,1.016,334,1.548,335,1.076,336,0.997,337,1.076,338,1.016,339,2.099,340,1.076,341,1.016,342,1.076,343,0.997,344,1.076,345,0.997,346,1.076,347,1.016,348,0.997,349,1.744,350,0.997,351,0.997,352,1.812,353,0.979,354,1.056,355,0.997,356,0.979,357,1.021,358,1.548,359,0.997,360,1.548,361,0.979,362,0.766,363,1.871,364,1.944,365,0.997,366,0.925,367,1.016,368,1.076,369,1.076,370,0.997,371,1.036,372,1.016,373,0.925,374,1.016,375,1.548,376,1.016,377,1.016,378,1.305,379,0.997,380,0.964,381,0.979,382,0.997,383,1.016,384,1.016,385,1.016,386,1.943,387,0.997,388,0.997,389,0.997,390,0.997,391,1.056,392,1.076,393,1.076,394,1.921,476,1.235,483,1.499,737,1.164,738,1.578,739,2.184,741,1.211,748,1.164,750,1.603,752,1.314,755,1.164,757,1.261,764,1.4,766,1.566,770,3.098,795,2.689,818,2.752,826,2.882,827,3.664,828,2.689,829,2.689,830,3.664,831,3.509,832,2.616,833,2.848,834,3.509,835,4.492,836,3.509,837,2.361,838,3.248,839,1.603,840,1.603,853,2.181,858,2.833,893,1.726,924,2.418,948,1.37,949,1.4,1008,5.03,1040,2.109,1118,5.881,1203,3.947,1378,2.815,1403,1.683,1440,2.672,1807,2.109,1935,6.247,2473,3.933,2474,6.621,2475,5.655,2476,6.621,2477,5.655,2478,3.933,2479,3.933,2480,3.933,2481,5.655,2482,3.933,2483,5.655,2484,5.655,2485,5.655,2486,5.655,2487,5.655,2488,5.655,2489,5.655,2490,3.933,2491,3.933,2492,3.933,2493,3.933,2494,3.933,2495,3.933]],["title/modules/SharedModule.html",[394,1.381,623,2.734]],["body/modules/SharedModule.html",[3,0.054,4,0.047,5,0.054,35,0.007,174,0.171,175,0.537,210,0.054,211,0.424,213,0.005,214,0.005,318,2.369,321,2.369,324,2.369,338,2.369,343,2.324,345,2.324,347,2.369,372,2.369,374,2.369,383,2.369,396,2.039,397,3.407,404,5.021,406,3.65,407,2.491,408,2.491,410,3.789,412,3.021,414,3.021,418,4.316,419,2.668,443,3.65,444,1.223,473,3.523,623,5.608,625,3.943,626,2.668,635,3.01,996,3.407,998,4.126,1395,4.126,1457,4.126,1480,6.964,1747,3.784,1752,3.784,1758,4.126,1760,3.01,1761,3.529,1925,4.126,2104,3.784,2215,3.155,2259,5.645,2260,4.126,2496,4.126,2497,4.645,2498,4.126,2499,4.126,2500,4.645,2501,4.645,2502,4.645,2503,6.355,2504,4.126,2505,4.645,2506,6.355,2507,4.645,2508,4.645,2509,4.645,2510,4.645,2511,4.645,2512,4.645,2513,6.355,2514,4.645,2515,6.355,2516,4.645,2517,4.645,2518,4.645]],["title/components/SideNavComponent.html",[245,0.457,367,1.23]],["body/components/SideNavComponent.html",[3,0.029,4,0.025,5,0.029,7,0.241,8,0.285,24,1.263,27,0.719,32,1.565,34,1.311,35,0.007,36,0.791,37,0.384,38,1.263,39,1.338,40,0.884,75,0.521,108,2.45,133,0.4,174,0.127,175,0.46,182,0.431,210,0.029,211,0.227,212,1.685,213,0.003,214,0.003,215,0.679,245,0.478,246,0.629,247,1.068,248,0.679,249,0.679,250,0.679,251,0.679,253,0.884,254,1.263,255,0.653,256,2.381,257,1.676,259,1.009,261,1.009,263,1.701,264,3.228,266,0.79,267,1.446,269,3.022,270,3.022,275,1.884,276,3.566,279,1.53,280,1.748,281,2.848,282,3.022,283,0.868,287,1.884,294,4.645,295,2.273,296,0.922,297,3.114,298,1.859,299,1.709,300,1.171,301,1.011,303,1.288,304,0.679,305,1.089,306,1.089,307,0.679,308,1.56,309,0.679,310,0.679,311,0.641,312,2.194,313,0.629,314,0.629,315,0.629,316,0.629,317,1.089,318,0.641,319,1.263,320,1.089,321,0.641,322,0.679,323,1.089,324,0.641,325,0.679,326,1.089,327,0.629,328,0.629,329,0.868,330,1.364,331,0.629,332,1.56,333,0.641,334,1.089,335,0.679,336,0.629,337,0.679,338,0.641,339,0.679,340,0.679,341,0.641,342,0.679,343,0.629,344,0.679,345,0.629,346,0.679,347,0.641,348,0.629,349,1.312,350,0.629,351,0.629,352,1.364,353,0.617,354,0.666,355,0.629,356,0.617,357,0.719,358,1.089,359,0.629,360,1.089,361,0.617,362,0.483,363,0.641,364,0.629,365,0.629,366,0.935,367,1.473,368,1.992,369,0.679,370,0.629,371,1.755,372,0.641,373,0.583,374,0.641,375,1.089,376,0.641,377,0.641,378,0.918,379,0.629,380,0.678,381,0.617,382,0.629,383,0.641,384,0.641,385,0.641,386,1.531,387,0.629,388,0.629,389,0.629,390,0.629,391,0.666,392,0.679,393,0.679,408,2.133,444,0.653,458,2.439,459,3.057,471,0.64,483,0.901,509,1.591,586,5.064,594,1.622,608,2.961,615,1.684,616,1.035,672,3.538,689,1.416,737,1.847,738,2.521,739,2.196,741,1.225,742,1.179,743,1.179,744,2.029,745,2.029,748,1.474,749,0.987,753,1.894,754,0.883,755,1.847,757,2.136,758,1.622,761,1.584,762,0.846,764,1.773,766,1.983,769,0.719,772,3.366,773,1.179,817,1.035,818,0.943,821,2.203,822,2.203,823,2.203,824,3.534,826,2.485,828,1.179,829,1.179,832,1.84,839,2.031,840,2.324,842,1.302,843,1.357,844,0.748,849,1.424,855,1.792,858,2.132,865,2.848,877,2.324,879,1.607,886,3.001,890,2.848,891,1.946,893,1.746,897,1.424,915,3.022,924,1.904,942,4.059,943,2.02,948,0.864,949,0.883,974,1.117,975,1.117,978,2.324,979,2.27,980,1.088,981,1.117,982,1.061,983,1.011,984,1.061,985,1.117,986,1.035,987,1.746,1039,3.092,1046,1.607,1061,3.694,1067,3.566,1205,3.534,1221,3.228,1441,1.288,1449,4.77,1462,2.848,1552,3.566,1596,3.534,1603,3.534,1604,5.064,1606,3.241,1611,3.534,1612,2.02,1613,3.534,1618,2.203,1619,1.607,1620,1.607,1684,4.24,1687,4.24,1774,2.02,1788,3.566,1902,1.884,1905,5.064,1973,2.203,2094,3.534,2095,2.02,2096,3.873,2160,3.534,2215,4.24,2301,3.022,2307,2.02,2519,8.724,2520,7.749,2521,2.48,2522,3.979,2523,4.982,2524,3.979,2525,4.982,2526,4.426,2527,4.426,2528,6.663,2529,3.979,2530,5.064,2531,3.979,2532,2.48,2533,3.979,2534,2.48,2535,3.979,2536,3.979,2537,2.48,2538,3.979,2539,2.48,2540,2.48,2541,2.48,2542,2.48,2543,2.48,2544,2.48,2545,2.48,2546,2.48,2547,2.48,2548,2.48,2549,2.48,2550,2.48,2551,3.979,2552,2.48,2553,2.48,2554,2.48,2555,2.48,2556,2.48,2557,2.48,2558,4.982,2559,2.203,2560,2.48,2561,2.203,2562,2.48,2563,2.48,2564,2.48,2565,2.48,2566,2.48,2567,4.982,2568,3.241,2569,2.48,2570,2.48,2571,2.48,2572,2.48,2573,5.702,2574,3.979,2575,3.979,2576,3.979,2577,2.48,2578,2.203,2579,2.203,2580,6.242,2581,3.979,2582,2.48,2583,2.48,2584,3.534,2585,5.064,2586,2.48,2587,2.48,2588,2.203,2589,2.203,2590,4.426,2591,2.203,2592,3.979,2593,3.979,2594,3.979,2595,2.48,2596,2.02,2597,2.203,2598,2.48,2599,2.48,2600,3.979,2601,2.48,2602,2.48,2603,2.48,2604,2.48,2605,2.48,2606,2.02,2607,2.48,2608,2.48,2609,2.48,2610,2.48,2611,2.48,2612,2.203,2613,2.48,2614,3.979,2615,5.702,2616,2.48,2617,2.48,2618,3.979,2619,2.48,2620,3.979,2621,3.979]],["title/modules/SidebarModule.html",[394,1.381,405,3.407]],["body/modules/SidebarModule.html",[3,0.068,4,0.058,5,0.068,35,0.007,174,0.171,175,0.674,210,0.068,211,0.533,213,0.006,214,0.006,365,2.275,366,1.371,367,2.451,396,2.559,397,3.958,405,6.867,406,4.239,407,3.126,408,3.126,410,4.401,411,3.718,412,3.509,414,3.509,416,4.75,418,5.014,419,3.348,428,6.557,429,5.179,443,4.239,444,1.536,473,4.092,623,5.153,625,4.58,626,3.348,634,3.778,635,3.778,636,3.96,924,2.997,948,2.031,949,2.075,1763,5.014,1764,4.173,1765,4.429,2243,4.75,2252,4.429,2520,5.179,2622,5.179,2623,5.179,2624,5.179,2625,5.179,2626,5.179,2627,6.422,2628,5.83,2629,5.83,2630,5.83,2631,5.179,2632,4.75,2633,5.83,2634,7.381,2635,5.83]],["title/components/SidebarOptionsComponent.html",[245,0.457,365,1.207]],["body/components/SidebarOptionsComponent.html",[3,0.043,4,0.037,5,0.043,7,0.155,8,0.386,24,0.931,27,0.664,32,1.348,34,1.131,35,0.007,36,0.792,37,0.305,38,1.089,39,0.986,40,0.816,62,1.336,75,0.772,84,2.193,108,1.561,133,0.625,174,0.115,175,0.425,182,0.639,210,0.043,211,0.336,212,0.786,213,0.004,214,0.004,245,0.611,246,0.931,247,1.445,248,1.005,249,1.005,250,1.005,251,1.005,253,1.196,254,1.615,255,0.968,256,2.451,257,2.004,259,1.364,261,1.364,263,1.582,266,1.069,267,1.778,279,1.265,280,1.529,290,1.336,296,2.001,298,1.502,299,1.712,300,1.265,301,1.497,304,1.005,305,1.473,306,1.473,307,1.005,308,1.919,309,1.005,310,1.005,311,0.949,312,2.404,313,0.931,314,1.892,315,0.931,316,1.892,317,1.473,318,0.949,319,1.615,320,1.473,321,0.949,322,1.005,323,1.473,324,0.949,325,1.005,326,1.473,327,0.931,328,0.931,329,1.802,330,1.743,331,0.931,332,1.919,333,0.949,334,1.743,335,1.005,336,0.931,337,1.005,338,0.949,339,1.473,340,1.005,341,0.949,342,1.005,343,0.931,344,1.005,345,0.931,346,1.005,347,0.949,348,0.931,349,1.677,350,0.931,351,0.931,352,1.743,353,0.914,354,0.986,355,0.931,356,0.914,357,1.266,358,1.473,359,0.931,360,1.473,361,0.914,362,1.57,363,0.949,364,0.931,365,1.778,366,1.982,367,0.949,368,1.005,369,1.005,370,0.931,371,0.968,372,0.949,373,0.864,374,0.949,375,1.473,376,0.949,377,0.949,378,1.618,379,0.931,380,1.409,381,0.914,382,0.931,383,0.949,384,0.949,385,0.949,386,1.882,387,0.931,388,0.931,389,0.931,390,0.931,391,2.094,392,1.005,393,1.005,394,1.066,444,0.968,458,2.716,470,2.55,594,1.497,616,1.534,689,2.266,724,2.993,725,5.188,726,4.384,729,2.791,730,3.263,732,2.993,735,1.534,736,3.655,737,1.087,738,1.956,739,2.116,740,1.462,741,1.131,744,1.307,745,1.915,748,1.087,749,1.462,752,1.797,755,1.087,757,1.725,762,1.253,763,1.429,764,1.307,768,1.429,841,3.859,842,1.202,843,1.253,844,1.109,855,2.424,859,4.191,866,1.97,867,1.97,880,1.462,886,1.655,897,2.11,924,2.342,931,5.82,948,1.28,949,1.307,957,2.993,968,3.655,978,1.497,979,1.462,984,1.572,1221,4.543,1427,2.28,1455,2.19,1501,3.761,1619,2.38,1777,3.339,1807,1.97,1893,2.791,1971,3.263,2348,4.384,2357,4.384,2382,4.384,2632,6.353,2636,7.798,2637,3.674,2638,5.382,2639,3.674,2640,3.674,2641,7.798,2642,5.382,2643,5.382,2644,4.384,2645,5.382,2646,4.78,2647,5.382,2648,5.382,2649,4.78,2650,5.382,2651,3.674,2652,3.674,2653,4.78,2654,5.382,2655,3.674]],["title/modules/SidebarRoutingModule.html",[394,1.381,2627,3.407]],["body/modules/SidebarRoutingModule.html",[3,0.072,4,0.062,5,0.072,35,0.007,62,3.255,174,0.157,175,0.718,210,0.072,211,0.568,213,0.006,214,0.006,245,0.597,329,1.356,362,1.211,365,1.948,366,2.144,380,1.06,396,2.728,412,2.955,414,3.653,443,4.412,444,1.637,459,3.333,470,3.168,471,1,473,3.446,602,4.222,641,4.722,642,4.722,644,5.236,645,4.222,1606,7.428,1766,6.799,2252,4.722,2627,5.499,2631,5.521,2632,5.063,2656,6.215,2657,6.215,2658,8.95,2659,6.215,2660,6.215,2661,8.95,2662,6.215,2663,6.215,2664,6.215,2665,6.215,2666,6.215,2667,6.215,2668,6.215,2669,6.215]],["title/components/SliderComponent.html",[245,0.457,370,1.207]],["body/components/SliderComponent.html",[3,0.045,4,0.039,5,0.045,7,0.166,8,0.404,24,0.992,27,1.018,31,0.92,32,1.383,34,1.184,35,0.007,36,0.816,37,0.346,38,1.14,39,1.051,40,0.87,44,1.488,75,0.822,94,1.718,108,2.383,150,1.092,174,0.155,175,0.452,176,0.903,182,0.98,185,0.938,190,0.92,192,0.92,210,0.045,211,0.358,212,1.206,213,0.004,214,0.004,245,0.735,246,0.992,247,1.513,248,1.071,249,1.071,250,1.071,251,1.071,253,1.252,254,1.674,255,1.031,256,2.46,257,2.055,259,1.429,261,1.429,263,1.607,266,1.119,267,1.831,279,1.119,280,1.44,296,1.455,298,1.092,299,1.376,300,0.92,301,1.595,304,1.071,305,1.542,306,1.542,307,1.071,308,1.977,309,1.071,310,1.071,311,1.011,312,2.434,313,0.992,314,0.992,315,0.992,316,0.992,317,1.542,318,1.011,319,0.992,320,1.542,321,1.011,322,1.071,323,1.542,324,1.011,325,1.071,326,1.542,327,0.992,328,0.992,329,1.229,330,1.807,331,0.992,332,1.977,333,1.011,334,1.542,335,1.071,336,0.992,337,1.071,338,1.011,339,1.071,340,1.071,341,1.011,342,1.071,343,0.992,344,1.071,345,0.992,346,1.071,347,1.011,348,0.992,349,1.739,350,0.992,351,0.992,352,1.807,353,0.974,354,1.051,355,0.992,356,0.974,357,1.018,358,1.542,359,0.992,360,1.542,361,0.974,362,0.763,363,1.011,364,0.992,365,0.992,366,0.92,367,1.011,368,1.071,369,1.071,370,1.831,371,1.902,372,1.011,373,0.92,374,1.011,375,1.542,376,1.011,377,1.011,378,1.3,379,0.992,380,0.961,381,0.974,382,0.992,383,1.011,384,1.011,385,1.011,386,1.939,387,0.992,388,0.992,389,0.992,390,0.992,391,1.051,392,1.071,393,1.071,476,1.229,483,1.733,679,1.842,682,1.455,689,2.35,737,1.158,738,1.842,739,1.7,740,2.628,748,2.137,750,2.691,752,1.307,753,2.142,755,1.953,757,2.116,762,1.922,763,1.522,764,1.393,768,1.522,818,2.142,826,1.558,837,1.634,839,1.595,840,1.595,841,2.538,842,1.28,844,1.181,851,3.651,853,2.17,855,2.538,858,3.411,866,2.098,867,2.098,868,3.429,869,3.54,870,3.54,877,1.595,893,1.718,898,2.429,919,3.429,924,2.412,945,2.926,948,1.363,949,1.393,952,2.033,1004,2.429,1018,2.658,1041,4.482,1043,2.973,1044,2.098,1052,4.033,1055,3.188,1057,2.658,1219,4.906,1234,5.005,1257,5.005,1441,2.033,1448,2.333,1483,1.971,1733,3.476,1802,4.278,1807,3.021,1842,2.536,1912,3.651,2214,2.973,2215,2.658,2216,4.281,2217,2.973,2224,4.485,2225,3.827,2227,3.476,2670,3.914,2671,5.379,2672,5.635,2673,3.914,2674,3.914,2675,3.914,2676,3.914,2677,3.914,2678,3.914,2679,3.914,2680,3.914]],["title/injectables/SocketIOService.html",[0,1.495,272,3.233]],["body/injectables/SocketIOService.html",[0,2.451,2,3.212,3,0.074,4,0.064,5,0.074,7,0.27,8,0.559,27,1.152,31,2.157,32,1.41,34,1.339,35,0.007,36,0.721,37,0.374,38,1.29,40,1.734,62,2.838,174,0.163,175,0.737,176,1.471,190,1.499,192,1.499,210,0.074,211,0.582,212,1.805,213,0.006,214,0.006,243,3.662,258,3.662,272,5.301,274,5.194,290,2.319,437,3.801,474,0.19,483,1.767,612,4.131,689,2.777,1403,2.729,2681,7.491,2682,5.663,2683,8.149,2684,7.804,2685,5.194,2686,5.194,2687,5.663,2688,6.932,2689,5.663,2690,5.663,2691,5.663,2692,5.663,2693,5.663,2694,5.663,2695,5.663,2696,5.663]],["title/components/SpinnerComponent.html",[245,0.457,372,1.23]],["body/components/SpinnerComponent.html",[3,0.051,4,0.044,5,0.051,7,0.258,24,1.109,27,1.267,32,1.101,35,0.007,36,0.689,75,0.919,108,2.398,174,0.079,175,0.505,182,0.76,210,0.051,211,0.399,213,0.005,214,0.005,215,1.197,245,0.766,246,1.109,247,1.636,248,1.197,249,1.197,250,1.197,251,1.197,253,1.355,254,1.779,255,1.152,256,2.475,257,2.143,259,1.545,261,1.545,266,1.21,267,1.924,279,0.868,280,1.329,298,1.958,304,1.197,305,1.668,306,1.668,307,1.197,308,2.077,309,1.197,310,1.197,311,1.13,312,2.483,313,1.109,314,1.109,315,1.109,316,1.109,317,1.668,318,1.13,319,1.109,320,1.668,321,1.13,322,1.197,323,1.668,324,1.13,325,1.197,326,1.668,327,1.109,328,1.109,329,1.329,330,1.92,331,1.109,332,2.077,333,1.13,334,1.668,335,1.197,336,1.109,337,1.197,338,1.13,339,1.197,340,1.197,341,1.13,342,1.197,343,1.109,344,1.197,345,1.109,346,1.197,347,1.13,348,1.109,349,1.848,350,1.109,351,1.109,352,1.92,353,1.088,354,1.174,355,1.109,356,1.088,357,1.101,358,1.668,359,1.109,360,1.668,361,1.088,362,0.852,363,1.13,364,1.109,365,1.109,366,1.028,367,1.13,368,1.197,369,1.197,370,1.109,371,1.152,372,1.961,373,1.65,374,1.13,375,1.668,376,1.13,377,1.13,378,1.406,379,1.109,380,1.039,381,1.088,382,1.109,383,1.13,384,1.13,385,1.13,386,2.038,387,1.109,388,1.109,389,1.109,390,1.109,391,1.174,392,1.197,393,1.197,737,1.294,738,1.958,739,2.117,745,2.497,749,1.741,752,1.46,753,1.663,755,1.803,766,1.741,772,3.246,773,2.079,826,1.741,832,2.819,837,1.826,838,2.511,839,1.782,840,1.782,843,1.491,844,1.32,886,1.97,893,3.331,894,2.511,902,4.14,996,3.762,1002,5.716,1441,2.271,1443,4.183,1449,4.363,1454,2.833,1552,4.363,1766,5.766,1978,3.562,1979,3.562,2095,3.562,2096,2.97,2697,4.373,2698,7.017,2699,6.095,2700,4.373,2701,4.373,2702,3.884,2703,3.562,2704,8.482,2705,8.482,2706,4.373,2707,4.373,2708,4.373,2709,4.373,2710,6.095,2711,5.414,2712,4.373,2713,4.373,2714,4.373,2715,3.884,2716,4.373,2717,7.017,2718,4.373,2719,4.373,2720,4.373,2721,4.373,2722,4.373,2723,4.373,2724,3.884,2725,4.373,2726,4.373]],["title/components/StationEntityComponent.html",[245,0.457,374,1.23]],["body/components/StationEntityComponent.html",[3,0.038,4,0.033,5,0.038,7,0.139,8,0.354,24,0.83,27,0.892,30,2.122,31,1.758,32,1.402,34,1.038,35,0.007,36,0.749,37,0.358,38,1,75,0.688,108,1.726,150,1.849,174,0.153,175,0.378,176,0.756,182,0.859,185,0.785,189,1.304,190,0.77,192,0.77,210,0.038,211,0.299,212,1.058,213,0.004,214,0.004,245,0.571,246,0.83,247,1.326,248,0.896,249,0.896,250,0.896,251,0.896,253,1.098,254,1.509,255,0.863,256,2.433,257,1.909,259,1.253,261,1.253,263,1.588,266,0.981,267,1.68,279,1.181,280,1.445,296,2.464,297,1.402,298,2.165,299,2.174,300,1.825,301,2.701,304,0.896,305,1.352,306,1.352,307,0.896,308,1.813,309,0.896,310,0.896,311,0.846,312,2.347,313,0.83,314,0.83,315,0.83,316,0.83,317,1.352,318,0.846,319,1.509,320,1.352,321,0.846,322,0.896,323,1.352,324,0.846,325,0.896,326,1.352,327,0.83,328,0.83,329,1.078,330,1.628,331,0.83,332,1.813,333,0.846,334,1.628,335,0.896,336,0.83,337,0.896,338,0.846,339,1.628,340,0.896,341,0.846,342,0.896,343,0.83,344,0.896,345,0.83,346,0.896,347,0.846,348,0.83,349,1.567,350,0.83,351,0.83,352,1.628,353,0.815,354,0.879,355,0.83,356,0.815,357,0.892,358,1.352,359,0.83,360,1.352,361,0.815,362,0.638,363,0.846,364,1.509,365,0.83,366,0.77,367,0.846,368,0.896,369,0.896,370,0.83,371,0.863,372,0.846,373,0.77,374,1.712,375,2.316,376,0.846,377,0.846,378,1.725,379,0.83,380,0.843,381,0.815,382,0.83,383,0.846,384,0.846,385,0.846,386,1.779,387,0.83,388,0.83,389,0.83,390,0.83,391,0.879,392,0.896,393,0.896,476,1.029,481,2.946,662,1.165,679,1.66,682,1.218,737,0.969,738,2.086,739,2.342,740,1.304,741,1.832,748,1.462,750,2.014,752,1.65,754,1.165,755,2.296,757,2.561,762,1.685,763,1.274,764,2.661,766,2.369,768,2.314,769,1.433,770,2.115,795,2.349,796,2.739,802,3.299,809,2.739,817,2.767,818,2.262,825,5.351,826,1.967,827,2.122,828,1.557,829,1.557,830,2.122,831,2.032,832,1.515,833,1.65,834,2.032,835,3.066,836,2.032,837,2.063,838,1.881,839,1.335,840,1.335,841,2.68,842,1.946,843,1.685,844,2,846,3.537,848,3.753,849,2.838,851,2.122,852,1.953,853,3.674,854,4.041,855,2.225,856,2.668,857,3.066,858,2.115,859,1.602,860,4.743,861,4.847,862,2.488,866,1.756,867,1.756,880,1.304,897,1.881,914,3.537,924,2.213,948,1.141,949,1.165,996,4.283,999,2.909,1000,5.285,1001,4.389,1005,3.692,1008,4.52,1009,2.611,1015,2.909,1017,2.909,1019,1.701,1041,2.032,1042,2.668,1044,1.756,1209,2.032,1211,1.881,1378,2.344,1403,1.402,1483,1.65,1575,1.756,1607,2.488,1608,2.909,1707,2.668,1801,4.389,1802,3.855,1809,2.909,1972,2.909,2504,7.096,2649,2.909,2727,7.989,2728,4.941,2729,6.626,2730,4.941,2731,4.941,2732,3.275,2733,3.275,2734,3.275,2735,3.275,2736,2.668,2737,3.275,2738,3.275,2739,4.941,2740,4.941,2741,6.626,2742,6.626,2743,4.941,2744,4.941,2745,5.886,2746,4.941,2747,4.941,2748,3.275]],["title/components/StationListComponent.html",[245,0.457,376,1.23]],["body/components/StationListComponent.html",[3,0.037,4,0.032,5,0.037,7,0.136,8,0.349,24,0.815,27,0.581,31,1.746,32,1.561,34,1.379,35,0.007,36,0.898,37,0.403,38,1.329,39,1.308,40,1.083,75,0.676,84,1.311,86,1.251,108,1.905,150,0.897,174,0.139,175,0.372,176,0.742,182,0.847,185,0.771,190,0.756,192,0.756,210,0.037,211,0.294,212,1.589,213,0.004,214,0.004,245,0.677,246,0.815,247,1.308,248,0.88,249,0.88,250,0.88,251,0.88,253,1.083,254,1.492,255,0.847,256,2.43,257,1.894,259,1.236,261,1.236,263,1.697,266,0.968,267,1.665,279,1.401,280,1.809,281,2.302,290,1.17,293,2.185,297,2.518,298,1.969,299,2.086,300,1.659,301,1.311,303,2.531,304,0.88,305,1.334,306,1.334,307,0.88,308,1.797,309,0.88,310,0.88,311,0.831,312,2.338,313,0.815,314,0.815,315,0.815,316,0.815,317,1.334,318,0.831,319,0.815,320,1.334,321,0.831,322,0.88,323,1.334,324,0.831,325,0.88,326,1.334,327,0.815,328,0.815,329,1.063,330,1.611,331,0.815,332,1.797,333,0.831,334,2.032,335,0.88,336,0.815,337,0.88,338,0.831,339,0.88,340,0.88,341,0.831,342,0.88,343,0.815,344,0.88,345,0.815,346,0.88,347,0.831,348,0.815,349,1.55,350,0.815,351,0.815,352,1.611,353,0.8,354,0.863,355,0.815,356,0.8,357,0.88,358,1.334,359,0.815,360,1.334,361,0.8,362,0.627,363,0.831,364,0.815,365,0.815,366,0.756,367,0.831,368,0.88,369,0.88,370,0.815,371,0.847,372,0.831,373,0.756,374,0.831,375,2.389,376,1.697,377,0.831,378,1.125,379,0.815,380,0.831,381,0.8,382,0.815,383,0.831,384,0.831,385,0.831,386,1.763,387,0.815,388,0.815,389,0.815,390,0.815,391,1.308,392,0.88,393,0.88,476,1.01,483,1.747,509,0.897,572,2.62,662,1.145,679,1.969,682,1.196,737,0.952,738,1.642,739,1.981,741,2.021,742,1.529,743,1.529,745,1.735,746,1.376,748,1.942,750,1.311,752,2.356,753,1.853,754,1.735,755,2.087,757,1.886,762,1.097,763,1.251,764,1.735,766,1.94,769,1.414,770,1.376,772,1.488,773,1.529,796,2.702,802,3.263,809,2.702,817,1.343,818,1.853,837,1.343,839,1.311,840,1.311,841,1.449,842,2.148,843,2.007,844,0.971,851,2.084,858,2.518,865,2.302,880,1.28,886,3.474,893,2.583,894,1.847,897,1.847,942,4.794,943,2.62,983,1.311,1005,3.652,1035,3.915,1040,1.725,1049,2.084,1054,2.62,1209,1.996,1219,2.185,1375,2.185,1403,1.376,1441,1.67,1453,1.996,1455,1.918,1462,2.302,1474,2.443,1479,2.443,1483,1.62,1759,7.755,1774,2.62,1777,3.024,1804,2.857,1805,2.857,1807,2.613,1808,2.62,1810,2.857,1811,4.329,2284,2.857,2309,2.62,2310,4.794,2311,3.971,2312,2.857,2313,2.857,2315,2.857,2316,2.857,2526,5.227,2530,5.832,2559,2.857,2568,2.62,2749,8.731,2750,5.227,2751,5.885,2752,5.885,2753,5.885,2754,5.885,2755,4.874,2756,4.874,2757,4.874,2758,3.216,2759,4.874,2760,5.832,2761,3.216,2762,4.874,2763,3.216,2764,4.874,2765,2.857,2766,3.216,2767,2.857,2768,2.857,2769,4.874,2770,3.216,2771,3.216,2772,4.874,2773,4.874,2774,3.216,2775,3.216,2776,3.216,2777,3.216,2778,3.216,2779,3.216,2780,4.874,2781,3.216,2782,4.874,2783,2.857,2784,3.216,2785,3.216,2786,3.216,2787,3.216]],["title/interfaces/Step.html",[474,0.142,1565,2.472]],["body/interfaces/Step.html",[3,0.066,4,0.057,5,0.066,7,0.241,8,0.521,35,0.007,36,0.643,37,0.427,66,2.496,106,2.069,133,0.787,174,0.103,210,0.101,213,0.005,214,0.005,238,3.189,299,1.389,474,0.26,475,1.108,478,2.865,483,2.209,485,3.774,502,1.587,777,2.704,891,3.554,1363,2.865,1524,2.562,1553,4.071,1554,4.173,1555,4.173,1556,4.173,1557,3.267,1558,4.173,1559,4.173,1560,3.267,1561,3.267,1562,3.267,1563,3.267,1564,3.896,1565,4.158,1566,5.007,1567,4.845,1568,4.845,1569,4.845,1570,5.007,1571,5.007,1572,4.78,1573,3.267,1574,3.153,1575,3.05,1576,3.267,1577,3.267,1578,3.267,1579,3.05,1580,3.153,1581,3.267,1582,3.267,1583,3.267,1584,3.267,1585,3.267,1586,3.267,1587,3.267,1588,3.153]],["title/interfaces/Step-1.html",[215,1.093,474,0.119,1565,2.074]],["body/interfaces/Step-1.html",[3,0.066,4,0.057,5,0.066,7,0.241,8,0.521,35,0.007,36,0.643,37,0.427,66,2.496,106,2.069,133,0.787,174,0.103,210,0.101,213,0.005,214,0.005,238,3.189,299,1.389,474,0.26,475,1.108,478,2.865,483,2.209,485,3.774,502,1.587,777,2.704,891,3.554,1363,2.865,1524,2.562,1554,4.173,1555,4.173,1556,4.173,1557,3.267,1558,4.173,1559,4.173,1560,3.267,1561,3.267,1562,3.267,1563,3.267,1564,3.896,1565,4.158,1566,5.007,1567,4.845,1568,4.845,1569,4.845,1570,5.007,1571,5.007,1572,4.78,1573,3.267,1574,3.153,1575,3.05,1576,3.267,1577,3.267,1578,3.267,1579,3.05,1580,3.153,1581,3.267,1582,3.267,1583,3.267,1584,3.267,1585,3.267,1586,3.267,1587,3.267,1588,3.153,1589,4.071]],["title/components/StopDropDownComponent.html",[245,0.457,377,1.23]],["body/components/StopDropDownComponent.html",[3,0.036,4,0.031,5,0.036,7,0.13,8,0.337,24,0.778,27,0.849,31,1.714,32,1.546,34,1.531,35,0.007,36,0.884,37,0.392,38,1.475,39,1.262,40,1.045,62,2.078,75,0.644,108,1.658,133,0.7,150,0.856,174,0.151,175,0.354,176,0.708,182,0.533,185,0.735,187,1.28,189,1.221,190,0.721,192,0.721,195,2.33,210,0.036,211,0.28,212,1.624,213,0.004,214,0.004,245,0.549,246,0.778,247,1.262,248,0.839,249,0.839,250,0.839,251,0.839,253,1.045,254,1.449,255,0.808,256,2.421,257,1.854,259,1.192,261,1.192,263,1.735,264,3.703,266,0.933,267,1.624,279,1.554,280,1.655,283,1.397,284,2.174,292,2.195,295,1.603,298,0.856,299,1.147,300,0.721,304,0.839,305,1.286,306,1.286,307,0.839,308,1.753,309,0.839,310,0.839,311,0.792,312,2.313,313,0.778,314,0.778,315,0.778,316,0.778,317,1.286,318,0.792,319,0.778,320,1.286,321,0.792,322,0.839,323,1.286,324,0.792,325,1.564,326,1.286,327,0.778,328,0.778,329,1.025,330,1.564,331,0.778,332,1.753,333,0.792,334,1.564,335,0.839,336,0.778,337,0.839,338,0.792,339,1.753,340,0.839,341,0.792,342,0.839,343,0.778,344,0.839,345,0.778,346,0.839,347,0.792,348,0.778,349,1.505,350,0.778,351,0.778,352,1.564,353,0.763,354,0.823,355,0.778,356,0.763,357,0.849,358,1.286,359,0.778,360,1.286,361,0.763,362,1.248,363,0.792,364,0.778,365,0.778,366,1.105,367,0.792,368,0.839,369,0.839,370,0.778,371,0.808,372,0.792,373,0.721,374,0.792,375,1.286,376,0.792,377,1.655,378,1.852,379,0.778,380,1.178,381,0.763,382,0.778,383,0.792,384,0.792,385,0.792,386,1.854,387,0.778,388,0.778,389,0.778,390,0.778,391,1.262,392,0.839,393,0.839,394,0.89,444,0.808,458,2.643,470,1.115,471,0.493,476,0.963,509,0.856,554,2.382,594,1.25,616,1.28,662,1.091,679,1.927,682,1.14,689,2.034,728,5.219,735,1.28,736,2.083,737,2.044,738,2.324,739,0.925,740,1.221,741,0.944,742,1.458,743,1.458,744,2.458,745,1.091,746,1.312,748,0.907,749,1.221,750,1.25,751,1.545,752,1.57,753,1.166,754,1.091,755,0.907,756,1.381,757,1.832,758,1.25,759,1.28,760,1.28,761,1.221,762,1.046,763,1.193,764,1.091,765,1.644,766,1.221,793,3.829,795,2.235,877,2.611,880,1.221,923,3.435,924,2.14,926,3.064,948,1.068,949,1.091,974,1.381,975,1.381,978,2.611,979,2.55,980,1.346,981,1.381,982,1.312,983,1.25,984,1.312,985,1.381,986,1.28,987,1.346,1005,2.917,1063,3.364,1065,3.364,1102,2.724,1372,4.655,1378,2.195,1403,1.312,1414,4.175,1417,2.195,1419,3.364,1483,1.545,1543,2.083,1930,3.364,1931,3.364,1997,2.724,2199,2.724,2243,7.663,2244,7.682,2335,3.829,2788,8.649,2789,3.067,2790,5.715,2791,4.7,2792,6.406,2793,5.715,2794,4.7,2795,4.7,2796,3.067,2797,3.067,2798,4.7,2799,3.067,2800,3.067,2801,4.7,2802,3.067,2803,4.7,2804,3.067,2805,3.067,2806,3.067,2807,3.067,2808,3.067,2809,3.067,2810,3.067,2811,3.067,2812,3.067,2813,4.7,2814,3.067,2815,4.175,2816,3.067,2817,3.067,2818,2.498,2819,2.498,2820,4.7,2821,3.067,2822,3.067,2823,3.067,2824,3.067,2825,3.067,2826,3.067,2827,3.067,2828,3.067,2829,3.067,2830,3.067,2831,3.067,2832,3.067,2833,3.067,2834,3.067,2835,3.067,2836,4.7,2837,3.067]],["title/interfaces/StopInfo.html",[474,0.142,2838,3.878]],["body/interfaces/StopInfo.html",[3,0.061,4,0.053,5,0.061,7,0.223,8,0.495,27,0.951,31,1.814,35,0.007,37,0.369,44,2.001,86,3.186,94,2.31,108,1.527,133,0.619,150,2.286,174,0.171,175,0.608,176,1.215,182,0.915,185,1.261,187,2.198,189,2.095,190,1.238,192,1.238,210,0.061,211,0.481,212,1.821,213,0.005,214,0.005,245,0.663,253,1.17,254,1.752,256,1.335,259,1.335,261,1.335,263,1.67,267,1.335,280,1.148,283,1.683,357,0.951,362,1.658,366,1.238,371,1.386,373,1.238,378,2.107,381,1.31,394,1.527,411,2.651,444,1.386,458,2.687,459,2.822,470,3.176,474,0.157,475,1.026,476,1.653,483,1.192,486,2.473,509,1.469,554,2.569,594,2.145,600,2.822,608,3.589,615,3.575,616,2.198,679,2.153,682,1.957,689,1.873,735,2.198,919,2.734,924,2.308,926,2.822,945,3.589,948,1.834,949,1.873,952,2.734,1009,2.31,1018,3.575,1019,2.734,1032,3.999,1040,2.822,1044,2.822,1046,3.41,1057,3.575,1063,3.768,1065,3.768,1067,3.768,1483,2.651,1864,5.24,1963,3.266,2223,3.768,2224,3.575,2225,3.575,2671,4.288,2736,4.288,2818,4.288,2819,4.288,2838,5.63,2839,4.675,2840,3.999,2841,4.675,2842,4.675,2843,4.675,2844,4.675,2845,4.675,2846,4.675,2847,4.675,2848,4.288,2849,4.675,2850,4.288,2851,4.675,2852,4.675,2853,4.675]],["title/components/StopSliderComponent.html",[245,0.457,381,1.184]],["body/components/StopSliderComponent.html",[3,0.037,4,0.032,5,0.037,7,0.137,8,0.35,24,0.818,27,0.883,31,1.748,32,1.471,34,1.382,35,0.007,36,0.84,37,0.37,38,1.331,39,0.866,40,0.717,44,1.227,75,0.678,86,1.9,94,1.416,108,1.711,133,0.653,150,1.363,174,0.158,175,0.373,176,0.745,182,0.849,185,0.773,187,1.347,189,1.285,190,0.759,192,0.759,210,0.037,211,0.295,212,1.512,213,0.004,214,0.004,245,0.566,246,0.818,247,1.312,248,0.883,249,0.883,250,0.883,251,0.883,253,1.086,254,1.495,255,0.85,256,2.43,257,1.897,259,1.239,261,1.239,263,1.698,266,0.97,267,1.667,279,1.306,280,1.541,283,0.704,298,1.363,299,1.44,300,1.149,304,0.883,305,1.337,306,1.337,307,0.883,308,1.8,309,0.883,310,0.883,311,0.834,312,2.34,313,0.818,314,0.818,315,0.818,316,0.818,317,1.337,318,0.834,319,0.818,320,1.337,321,0.834,322,0.883,323,1.337,324,0.834,325,0.883,326,1.337,327,0.818,328,0.818,329,1.066,330,1.614,331,0.818,332,1.8,333,0.834,334,1.614,335,0.883,336,0.818,337,0.883,338,0.834,339,0.883,340,0.883,341,0.834,342,0.883,343,0.818,344,0.883,345,0.818,346,0.883,347,0.834,348,0.818,349,1.553,350,0.818,351,0.818,352,1.614,353,0.803,354,0.866,355,0.818,356,0.803,357,1.188,358,1.337,359,0.818,360,1.337,361,0.803,362,1.149,363,0.834,364,0.818,365,0.818,366,1.149,367,0.834,368,0.883,369,0.883,370,0.818,371,1.553,372,0.834,373,1.149,374,0.834,375,1.337,376,0.834,377,0.834,378,1.973,379,0.818,380,0.833,381,1.636,382,0.818,383,0.834,384,0.834,385,0.834,386,1.766,387,0.818,388,0.818,389,0.818,390,0.818,391,0.866,392,0.883,393,0.883,394,0.936,411,2.461,444,0.85,458,2.69,459,3.162,470,2.145,474,0.096,476,1.014,483,1.106,486,1.034,509,0.9,554,2.445,594,1.315,600,1.73,608,3.416,615,2.192,616,1.347,679,1.971,682,1.2,689,2.098,735,1.347,737,2.09,738,2.413,739,1.474,740,1.285,741,1.504,742,1.534,743,1.534,744,2.515,745,1.148,746,1.381,748,1.744,749,1.285,750,2.403,752,1.632,754,1.739,755,1.445,757,1.566,758,1.315,759,1.347,760,1.347,761,1.285,762,1.1,766,1.285,770,2.091,826,1.285,842,1.056,843,1.1,844,0.974,858,3.182,868,3.062,869,3.162,870,3.526,877,2.88,880,1.285,919,3.062,924,2.197,926,3.162,945,2.537,948,1.124,949,1.148,952,1.676,974,1.453,975,1.453,978,2.681,979,2.618,980,1.416,981,1.453,982,1.381,983,1.315,984,1.381,985,1.453,986,1.347,987,1.416,1009,1.416,1018,2.192,1019,1.676,1032,4.479,1040,1.73,1044,1.73,1046,2.091,1057,2.192,1063,3.497,1065,3.497,1067,4.221,1219,4.005,1403,1.381,1448,1.924,1483,1.625,1552,2.31,1807,1.73,1864,5.05,1912,3.166,1930,3.497,1931,3.497,1963,2.002,2214,2.451,2215,2.192,2216,2.451,2217,2.451,2223,2.31,2224,4.005,2225,3.319,2301,3.712,2307,2.629,2671,4.804,2736,2.629,2818,2.629,2819,2.629,2838,2.629,2839,7.373,2840,6.305,2841,2.866,2842,2.866,2843,2.866,2844,2.866,2845,2.866,2846,2.866,2847,2.866,2848,2.629,2849,2.866,2850,2.629,2851,2.866,2852,2.866,2853,4.34,2854,4.886,2855,4.886,2856,3.227,2857,3.227,2858,3.227,2859,3.227,2860,3.227,2861,3.227,2862,3.227,2863,3.227,2864,3.227]],["title/interfaces/StopState.html",[474,0.142,489,2.954]],["body/interfaces/StopState.html",[3,0.077,4,0.067,5,0.077,7,0.282,8,0.574,35,0.007,37,0.319,133,0.767,150,2.237,174,0.121,210,0.104,213,0.006,214,0.006,283,1.454,329,1.454,362,1.299,378,1.538,471,1.29,474,0.239,475,1.299,486,2.137,489,5.336,495,4.528,496,4.528,502,1.86,521,6.2,554,2.478,566,4.771,570,2.535,685,2.326,782,2.981,783,3.197,784,2.981,785,2.478,1493,3.358,1495,3.358,1501,2.926,1502,3.169,1531,5.921,1532,5.064]],["title/interfaces/StopState-1.html",[215,1.093,474,0.119,489,2.478]],["body/interfaces/StopState-1.html",[3,0.077,4,0.067,5,0.077,7,0.282,8,0.574,35,0.007,37,0.319,133,0.767,150,2.237,174,0.121,210,0.104,213,0.006,214,0.006,283,1.454,329,1.454,362,1.299,378,1.538,471,1.29,474,0.239,475,1.299,486,2.137,489,5.336,495,4.528,496,4.528,502,1.86,521,6.2,554,2.478,566,4.771,570,2.535,685,2.326,782,2.981,783,3.197,784,2.981,785,2.478,1493,3.358,1495,3.358,1501,2.926,1502,3.169,1532,5.064,1533,5.921]],["title/components/StopsComponent.html",[245,0.457,379,1.207]],["body/components/StopsComponent.html",[3,0.043,4,0.037,5,0.043,7,0.157,8,0.388,24,0.939,27,0.978,31,1.839,32,1.413,34,1.479,35,0.007,36,0.884,37,0.359,38,1.424,40,0.823,44,1.409,75,0.778,108,1.571,133,0.627,150,1.964,174,0.15,175,0.428,176,0.855,181,2.377,182,0.644,185,0.888,190,0.871,192,0.871,210,0.043,211,0.338,212,1.37,213,0.004,214,0.004,245,0.719,246,0.939,247,1.454,248,1.014,249,1.014,250,1.014,251,1.014,253,1.203,254,1.623,255,0.976,256,2.452,257,2.01,259,1.373,261,1.373,263,1.651,266,1.075,267,1.785,279,1.398,280,1.535,298,1.511,299,1.719,300,1.273,304,1.014,305,1.482,306,1.482,307,1.014,308,1.926,309,1.014,310,1.014,311,0.957,312,2.408,313,0.939,314,0.939,315,0.939,316,0.939,317,1.482,318,0.957,319,0.939,320,1.482,321,0.957,322,1.014,323,1.482,324,0.957,325,1.482,326,1.482,327,0.939,328,0.939,329,1.181,330,1.751,331,0.939,332,1.926,333,0.957,334,1.751,335,1.014,336,0.939,337,1.014,338,0.957,339,1.014,340,1.014,341,0.957,342,1.014,343,0.939,344,1.014,345,0.939,346,1.014,347,0.957,348,0.939,349,1.685,350,0.939,351,0.939,352,1.751,353,0.922,354,0.995,355,0.939,356,0.922,357,0.978,358,1.482,359,0.939,360,1.482,361,0.922,362,0.722,363,0.957,364,0.939,365,0.939,366,1.273,367,0.957,368,1.014,369,1.014,370,0.939,371,0.976,372,0.957,373,0.871,374,0.957,375,1.482,376,0.957,377,0.957,378,1.624,379,1.785,380,1.464,381,0.922,382,0.939,383,0.957,384,0.957,385,0.957,386,1.89,387,0.939,388,0.939,389,0.939,390,0.939,391,0.995,392,1.014,393,1.014,394,1.075,444,0.976,458,2.814,476,1.164,486,2.051,509,1.511,594,1.51,616,1.547,679,1.785,682,1.377,689,2.277,735,1.547,737,2.216,738,2.428,739,1.118,741,1.667,742,1.761,743,1.761,744,2.665,745,1.318,746,1.585,748,1.602,749,1.475,751,1.866,752,1.237,753,1.409,754,1.927,755,1.096,756,1.669,757,2.256,758,2.207,759,2.261,760,2.261,761,2.155,762,1.263,763,1.441,764,1.318,765,1.986,817,1.547,818,1.409,842,1.212,843,1.263,844,1.118,855,3.171,877,2.869,924,2.351,927,4.113,948,1.29,949,1.318,957,3.018,974,1.669,975,1.669,978,2.869,979,2.802,980,1.626,981,1.669,982,1.585,983,1.51,984,1.585,985,1.669,986,1.547,987,1.626,1403,1.585,1461,4.81,1483,1.866,1524,2.439,1777,3.36,2387,2.814,2815,4.81,2865,3.705,2866,6.399,2867,5.415,2868,5.415,2869,3.705,2870,5.415,2871,3.705,2872,3.705,2873,5.415,2874,3.705,2875,3.705,2876,3.705,2877,3.705,2878,3.291,2879,3.705,2880,3.705,2881,3.705]],["title/classes/StopsMap.html",[211,0.435,2017,3.878]],["body/classes/StopsMap.html",[3,0.043,4,0.037,5,0.043,7,0.155,8,0.385,27,0.662,31,0.862,32,1.671,34,1.735,35,0.007,36,0.933,37,0.437,38,1.671,39,2.217,40,1.835,108,1.064,133,0.727,150,2.247,174,0.149,176,0.846,182,1.608,190,0.862,192,0.862,210,0.043,211,0.335,212,1.88,213,0.004,214,0.004,243,2.106,263,1.678,266,1.067,279,1.673,280,1.838,283,1.172,284,2.486,295,2.17,366,0.862,380,0.916,394,1.064,422,2.376,444,0.966,458,3.089,463,3.847,471,0.865,476,1.152,483,1.217,486,2.039,509,2.247,554,1.998,594,1.495,616,1.531,644,2.106,685,1.559,735,1.531,755,1.59,841,3.155,844,1.622,859,2.629,914,3.847,1048,2.625,1068,2.491,1209,4.347,1211,3.087,1454,5.049,1462,2.625,1483,1.847,1627,7.079,1628,4.083,1629,4.083,1630,4.083,1631,4.083,1634,5.322,1638,4.083,1639,4.833,1640,4.083,1641,4.083,1642,4.083,1643,4.083,1644,5.014,1646,6.117,1649,6.117,1650,5.665,1651,4.083,1652,2.786,1653,5.665,1654,4.083,1655,7.224,1656,2.987,1657,2.786,1658,2.987,1659,2.786,1660,2.625,1661,2.987,1662,2.786,1663,2.786,1664,2.987,1665,2.987,1666,2.786,1667,2.987,1668,2.786,1669,2.987,1680,4.083,1682,2.987,1683,2.786,1684,3.65,1685,4.083,1686,2.987,1687,2.491,1688,2.786,1689,2.987,1690,4.083,1691,2.786,1692,4.083,1693,2.987,1694,2.786,1695,2.625,1697,2.987,1699,2.987,1707,2.987,1713,3.257,1714,3.257,1715,2.987,1716,4.378,1725,3.257,1726,3.257,1778,4.774,2017,4.378,2046,3.257,2387,2.786,2882,3.667,2883,6.362,2884,6.362,2885,5.374,2886,5.374,2887,5.374,2888,5.374,2889,5.374,2890,5.374,2891,7.005,2892,4.774,2893,5.374,2894,3.667,2895,3.667,2896,5.374,2897,3.667,2898,3.667,2899,3.667,2900,5.374,2901,3.667,2902,5.374,2903,3.667,2904,3.257,2905,3.667,2906,3.667,2907,3.667,2908,3.667,2909,3.667,2910,3.667,2911,3.667,2912,3.667,2913,3.667,2914,3.667,2915,3.667,2916,3.667,2917,3.667,2918,3.667,2919,3.667,2920,3.667,2921,3.667]],["title/components/StopsMapComponent.html",[245,0.457,382,1.207]],["body/components/StopsMapComponent.html",[3,0.044,4,0.038,5,0.044,7,0.161,8,0.396,24,0.965,27,0.997,31,1.856,32,1.367,34,1.16,35,0.007,36,0.806,37,0.341,38,1.117,39,1.021,40,1.584,44,1.447,75,0.799,118,2.04,133,0.443,150,1.989,174,0.156,175,0.44,176,0.878,182,1.316,185,0.911,190,0.894,192,0.894,210,0.044,211,0.348,212,1.69,213,0.004,214,0.004,245,0.624,246,0.965,247,1.482,248,1.041,249,1.041,250,1.041,251,1.041,253,1.227,254,1.647,255,1.002,256,2.456,257,2.032,259,1.4,261,1.4,263,1.481,266,1.096,267,1.807,279,1.096,280,1.417,296,1.415,298,1.54,299,1.848,300,1.298,304,1.041,305,1.511,306,1.511,307,1.041,308,1.951,309,1.041,310,1.041,311,0.983,312,2.421,313,0.965,314,0.965,315,0.965,316,0.965,317,1.511,318,0.983,319,0.965,320,1.511,321,0.983,322,1.041,323,1.511,324,0.983,325,1.041,326,1.511,327,0.965,328,0.965,329,1.204,330,1.778,331,0.965,332,1.951,333,0.983,334,1.778,335,1.041,336,0.965,337,1.041,338,0.983,339,1.041,340,1.041,341,0.983,342,1.041,343,0.965,344,1.041,345,0.965,346,1.041,347,0.983,348,0.965,349,1.711,350,0.965,351,0.965,352,1.778,353,0.947,354,1.021,355,0.965,356,0.947,357,0.997,358,1.511,359,0.965,360,1.511,361,0.947,362,0.741,363,0.983,364,0.965,365,0.965,366,0.894,367,0.983,368,1.041,369,1.041,370,0.965,371,1.002,372,0.983,373,0.894,374,0.983,375,1.511,376,0.983,377,0.983,378,1.499,379,0.965,380,1.45,381,0.947,382,1.807,383,0.983,384,0.983,385,0.983,386,1.914,387,0.965,388,0.965,389,0.965,390,0.965,391,1.021,392,1.041,393,1.041,411,2.781,476,1.195,486,2.083,679,1.813,682,1.415,689,2.312,737,2.239,738,2.441,739,1.961,740,1.515,741,1.699,744,2.537,745,2.312,746,1.628,748,1.126,767,1.861,768,1.48,769,1.104,842,1.245,843,1.298,844,1.148,877,2.905,880,2.838,924,2.381,948,1.325,949,1.354,970,3.75,974,1.714,975,1.714,978,2.905,979,2.838,980,1.67,981,1.714,982,1.628,983,1.551,984,1.628,985,1.714,986,1.589,987,1.67,1009,1.67,1019,1.976,1032,4.936,1044,2.04,1052,4.651,1057,2.584,1403,1.628,1483,1.916,1715,3.099,1728,2.89,1729,4.936,1730,4.194,1734,3.099,1790,3.379,1864,5.362,2848,3.099,2850,3.099,2878,3.379,2922,7.895,2923,6.431,2924,5.521,2925,5.521,2926,5.521,2927,3.805,2928,3.805,2929,3.805,2930,3.805,2931,3.805,2932,3.805,2933,3.805,2934,3.805]],["title/modules/StopsModule.html",[394,1.381,2935,3.616]],["body/modules/StopsModule.html",[3,0.071,4,0.061,5,0.071,35,0.007,174,0.17,175,0.704,210,0.071,211,0.556,213,0.006,214,0.006,379,2.3,380,1.039,381,2.257,382,2.3,396,2.673,397,4.068,404,5.409,406,4.357,407,3.266,408,3.266,410,4.523,412,3.607,414,3.607,426,4.137,430,5.43,431,4.36,623,5.21,625,4.708,626,3.498,634,3.946,635,3.946,636,4.137,1760,3.946,1761,4.627,2242,4.962,2270,4.137,2840,4.627,2923,4.962,2935,7.341,2936,5.41,2937,5.41,2938,5.41,2939,6.494,2940,6.091,2941,5.41,2942,5.41]],["title/modules/StopsRoutingModule.html",[394,1.381,2939,3.407]],["body/modules/StopsRoutingModule.html",[3,0.077,4,0.066,5,0.077,35,0.007,174,0.167,175,0.765,182,1.151,210,0.077,211,0.605,213,0.006,214,0.006,245,0.854,379,2.025,381,1.987,382,2.174,396,2.906,412,3.148,414,3.797,443,4.586,444,1.744,469,4.498,470,3.118,471,1.065,473,3.671,606,5.424,644,5.113,645,4.498,1524,2.982,1760,4.29,1763,5.824,1764,4.739,1765,5.03,2242,5.394,2270,4.498,2840,5.03,2923,5.394,2939,5.716,2941,5.882,2942,5.882,2943,6.622,2944,6.622]],["title/injectables/StopsStore.html",[0,1.495,1864,3.233]],["body/injectables/StopsStore.html",[0,2.128,2,2.573,3,0.059,4,0.051,5,0.059,7,0.216,8,0.485,27,0.922,28,3.88,29,4.361,31,2.109,32,1.462,34,1.073,35,0.007,36,0.577,37,0.244,38,1.033,39,1.819,40,1.506,44,1.942,73,4.076,94,2.242,150,1.425,174,0.167,175,0.59,176,1.178,181,2.242,185,1.224,186,2.832,190,1.201,192,1.201,210,0.088,211,0.467,212,1.733,213,0.005,214,0.005,263,1.683,266,1.345,279,1.014,290,1.857,378,1.754,380,1.155,424,2.832,437,3.045,471,0.822,474,0.152,507,3.221,509,2.35,673,4.532,674,4.532,675,2.933,677,4.532,679,2.35,685,1.965,688,4.039,708,3.632,926,2.738,1009,3.553,1019,2.652,1035,3.045,1044,2.738,1155,3.656,1159,3.469,1333,3.469,1343,4.601,1350,3.469,1383,3.469,1385,3.469,1802,5.988,1813,5.774,1815,5.774,1817,6.15,1826,5.146,1827,5.146,1828,5.146,1829,5.146,1830,5.146,1831,5.146,1832,5.146,1833,5.146,1842,5.245,1845,3.88,1847,3.88,1848,3.88,1849,3.88,1859,3.88,1860,3.88,1862,3.88,1863,4.536,1864,4.601,2945,5.107,2946,5.107,2947,5.107,2948,5.107]],["title/components/ToasterComponent.html",[245,0.457,383,1.23]],["body/components/ToasterComponent.html",[3,0.042,4,0.036,5,0.042,7,0.295,8,0.383,24,0.922,27,1.144,32,1.488,34,0.764,35,0.007,36,0.715,37,0.356,38,0.736,39,1.7,40,1.187,75,0.764,108,2.39,133,0.596,174,0.097,175,0.42,182,0.632,185,0.871,210,0.042,211,0.332,212,1.355,213,0.004,214,0.004,215,1.909,245,0.713,246,0.922,247,1.434,248,0.995,249,0.995,250,0.995,251,0.995,253,1.187,254,1.605,255,0.958,256,2.449,257,1.995,259,1.354,261,1.354,263,1.604,264,4.102,266,1.061,267,1.769,279,1.257,280,1.695,283,1.165,284,1.682,294,4.351,295,2.159,298,1.015,304,0.995,305,1.462,306,1.462,307,0.995,308,1.909,309,0.995,310,0.995,311,0.94,312,2.399,313,0.922,314,0.922,315,0.922,316,0.922,317,1.462,318,0.94,319,0.922,320,1.462,321,0.94,322,0.995,323,1.462,324,0.94,325,0.995,326,1.462,327,0.922,328,0.922,329,1.165,330,1.733,331,0.922,332,1.909,333,0.94,334,1.462,335,0.995,336,0.922,337,0.995,338,0.94,339,1.733,340,0.995,341,0.94,342,0.995,343,0.922,344,0.995,345,0.922,346,0.995,347,0.94,348,0.922,349,1.667,350,0.922,351,0.922,352,1.733,353,0.905,354,0.976,355,0.922,356,0.905,357,0.965,358,1.462,359,0.922,360,1.462,361,0.905,362,0.709,363,0.94,364,0.922,365,0.922,366,0.855,367,0.94,368,0.995,369,0.995,370,0.922,371,0.958,372,0.94,373,0.855,374,0.94,375,1.462,376,0.94,377,0.94,378,1.232,379,0.922,380,0.911,381,0.905,382,0.922,383,1.803,384,1.636,385,0.94,386,1.873,387,0.922,388,0.922,389,0.922,390,0.922,391,0.976,392,0.995,393,0.995,503,4.102,679,1.015,689,2.645,738,1.015,739,1.612,745,1.294,748,1.58,749,1.448,753,2.031,755,2.199,766,2.126,767,1.779,769,1.55,772,2.929,795,2.54,818,2.031,826,2.52,837,1.518,839,1.482,840,1.482,841,3.711,842,1.19,843,1.24,844,1.612,886,1.638,893,1.596,894,2.089,902,5.596,979,2.126,996,4.508,1039,3.929,1061,4.521,1248,2.962,1428,2.257,1430,2.962,1449,2.603,1453,3.315,1766,4.058,1788,4.532,1978,2.962,1979,2.962,2096,4.3,2155,2.962,2527,5.624,2561,3.23,2568,2.962,2588,3.23,2589,3.23,2591,4.745,2596,2.962,2597,7.318,2606,2.962,2702,3.23,2703,4.351,2711,3.23,2724,6.198,2745,3.23,2750,3.23,2760,3.23,2949,3.637,2950,6.331,2951,5.342,2952,5.342,2953,3.637,2954,3.637,2955,5.342,2956,3.637,2957,3.637,2958,3.637,2959,3.637,2960,3.637,2961,3.637,2962,3.637,2963,3.637,2964,3.637,2965,6.331,2966,3.637,2967,5.342,2968,5.342,2969,3.637,2970,3.637,2971,3.637,2972,3.637,2973,3.637,2974,3.637,2975,6.331,2976,6.977,2977,6.331,2978,5.342,2979,3.637,2980,6.977,2981,6.977]],["title/components/TripComponent.html",[245,0.457,385,1.23]],["body/components/TripComponent.html",[3,0.033,4,0.028,5,0.033,7,0.26,24,0.717,27,0.981,32,1.474,35,0.007,36,0.499,37,0.338,39,1.647,40,1.479,62,1.975,75,0.594,84,2.213,108,1.78,133,0.354,174,0.098,175,0.327,182,0.767,210,0.033,211,0.258,213,0.003,214,0.003,215,1.821,238,3.095,245,0.639,246,0.717,247,1.185,248,0.774,249,0.774,250,0.774,251,0.774,253,0.981,254,1.377,255,0.745,256,2.407,257,1.786,259,1.119,261,1.119,263,1.577,265,2.024,266,0.876,267,1.556,279,1.078,280,1.338,296,2.019,297,1.21,298,2.055,299,2.117,300,1.732,301,2.874,303,1.468,304,0.774,305,1.208,306,1.208,307,0.774,308,1.679,309,0.774,310,0.774,311,0.731,312,2.269,313,0.717,314,0.717,315,0.717,316,1.788,317,1.208,318,0.731,319,1.119,320,1.208,321,0.731,322,0.774,323,1.208,324,0.731,325,0.774,326,1.208,327,0.717,328,0.717,329,0.963,330,1.486,331,0.717,332,1.679,333,0.731,334,1.208,335,0.774,336,0.717,337,0.774,338,0.731,339,1.93,340,0.774,341,0.731,342,0.774,343,0.717,344,1.208,345,0.717,346,0.774,347,0.731,348,0.717,349,1.43,350,0.717,351,0.717,352,1.486,353,0.703,354,0.759,355,0.717,356,0.703,357,1.108,358,1.208,359,0.717,360,1.208,361,0.703,362,0.551,363,0.731,364,0.717,365,0.717,366,0.665,367,0.731,368,0.774,369,0.774,370,0.717,371,0.745,372,0.731,373,0.665,374,0.731,375,1.208,376,0.731,377,0.731,378,1.018,379,0.717,380,0.753,381,0.703,382,0.717,383,0.731,384,0.731,385,1.585,386,1.893,387,0.717,388,0.717,389,0.717,390,0.717,391,0.759,392,0.774,393,0.774,478,2.735,483,1,485,2.82,502,0.789,509,0.789,554,1.051,631,1.921,662,1.571,689,1.932,737,0.837,738,1.857,739,2.008,741,0.87,745,2.368,748,2.486,749,2.649,750,2.501,752,2.355,753,1.678,754,1.006,755,2.369,757,2.726,762,2.092,764,2.85,765,1.516,766,2.442,768,2.112,770,2.848,772,2.042,773,1.344,795,2.099,796,2.447,802,3.689,809,3.01,817,2.267,818,2.681,825,3.159,826,3.034,827,1.832,828,1.344,829,1.344,830,1.832,831,1.755,832,2.042,833,2.223,834,1.755,835,2.739,836,1.755,837,2.562,838,3.118,839,1.799,840,1.799,842,2.007,843,1.852,844,2.128,845,3.596,849,3.524,850,3.688,851,1.832,852,2.632,853,3.401,855,1.274,857,1.755,858,3.639,860,3.886,862,3.353,863,2.024,865,3.886,866,2.367,867,1.516,868,3.826,869,3.95,870,4.375,871,2.303,872,3.159,873,4.391,874,3.596,875,3.596,876,1.832,877,1.152,878,4.423,879,1.832,880,3.034,883,5.745,884,4.52,886,2.763,890,3.159,891,2.159,892,2.303,893,1.937,894,1.624,896,2.303,897,3.118,902,1.921,914,3.159,1363,2.735,1375,1.921,1427,1.755,1428,3.369,1441,1.468,1443,1.686,1449,2.024,1455,2.632,1476,2.303,1479,2.148,1579,2.367,1620,3.975,1777,3.807,1902,3.353,1969,4.998,1974,3.596,2096,4.167,2153,2.512,2155,2.303,2301,3.353,2596,2.303,2646,3.921,2982,2.828,2983,5.429,2984,4.414,2985,5.45,2986,5.429,2987,4.414,2988,2.828,2989,2.828,2990,6.135,2991,2.828,2992,2.828,2993,2.828,2994,2.828,2995,2.828,2996,2.828,2997,2.828,2998,2.828,2999,2.303,3000,2.828,3001,2.828,3002,2.828,3003,4.414,3004,5.45,3005,4.414,3006,4.414,3007,4.414,3008,3.921,3009,4.414,3010,4.414,3011,4.414,3012,2.828,3013,2.828,3014,2.303,3015,2.828,3016,4.414,3017,2.828,3018,6.135,3019,2.828,3020,2.828,3021,2.828,3022,2.512,3023,2.512,3024,2.512,3025,2.512,3026,2.512,3027,2.512,3028,2.512,3029,2.512,3030,2.828,3031,2.828,3032,2.828,3033,2.512]],["title/interfaces/TripData.html",[474,0.142,1511,3.233]],["body/interfaces/TripData.html",[3,0.08,4,0.069,5,0.08,7,0.29,8,0.584,35,0.007,37,0.39,106,2.492,133,0.748,150,2.274,174,0.147,210,0.101,213,0.006,214,0.006,240,4.653,242,3.451,380,1.168,471,1.102,474,0.243,475,1.335,769,2.668,1354,6.246,1508,4.439,1509,6.085,1510,3.986,1511,5.909,1512,5.205]],["title/interfaces/TripData-1.html",[215,1.093,474,0.119,1511,2.712]],["body/interfaces/TripData-1.html",[3,0.08,4,0.069,5,0.08,7,0.29,8,0.584,35,0.007,37,0.39,106,2.492,133,0.748,150,2.274,174,0.147,210,0.101,213,0.006,214,0.006,240,4.653,242,3.451,380,1.168,471,1.102,474,0.243,475,1.335,769,2.668,1354,6.246,1508,4.439,1510,3.986,1511,5.909,1512,5.205,1513,6.085]],["title/components/TripDetailsComponent.html",[245,0.457,387,1.207]],["body/components/TripDetailsComponent.html",[3,0.027,4,0.023,5,0.027,7,0.097,8,0.268,24,0.583,27,0.676,31,1.514,32,1.359,34,0.787,35,0.007,36,0.617,37,0.308,38,0.758,39,1.271,40,1.052,75,0.483,84,0.938,108,1.743,174,0.128,175,0.266,176,0.531,182,0.949,183,3.536,185,0.551,190,0.541,192,0.541,210,0.027,211,0.21,212,1.378,213,0.003,214,0.003,215,1.025,238,2.078,243,1.321,245,0.455,246,0.583,247,1.005,248,0.63,249,0.63,250,0.63,251,0.63,253,0.832,254,1.201,255,0.606,256,2.364,257,1.822,259,0.949,261,0.949,263,1.589,264,3.068,265,2.68,266,0.744,267,1.384,269,2.845,270,3.598,275,1.748,276,3.39,279,1.084,280,1.31,281,1.647,282,2.845,283,0.817,287,1.748,292,1.647,295,1.277,296,1.392,297,0.985,298,1.894,299,2.028,300,1.596,301,2.224,303,1.945,304,0.63,305,1.025,306,1.025,307,0.63,308,1.494,309,0.63,310,0.63,311,0.595,312,2.149,313,0.583,314,0.583,315,0.583,316,0.949,317,1.025,318,0.595,319,1.384,320,1.025,321,0.595,322,0.63,323,1.025,324,0.595,325,0.63,326,1.025,327,0.583,328,0.583,329,0.817,330,1.296,331,0.583,332,1.494,333,0.595,334,1.296,335,0.63,336,0.583,337,0.63,338,0.595,339,0.63,340,0.63,341,0.595,342,0.63,343,0.583,344,1.025,345,0.583,346,0.63,347,0.595,348,0.583,349,1.247,350,0.583,351,0.583,352,1.296,353,0.572,354,0.618,355,0.583,356,0.572,357,1.085,358,1.025,359,0.583,360,1.025,361,0.572,362,0.448,363,0.595,364,0.583,365,0.583,366,0.88,367,0.595,368,0.63,369,0.63,370,0.583,371,0.606,372,0.595,373,1.283,374,0.595,375,1.025,376,0.595,377,0.595,378,0.864,379,0.583,380,1.024,381,0.572,382,0.583,383,0.595,384,0.595,385,0.595,386,2.067,387,1.384,388,0.583,389,0.583,390,0.583,391,0.618,392,0.63,393,0.63,394,0.667,444,0.606,458,2.365,470,0.837,476,0.723,483,1.458,594,0.938,616,0.961,679,1.321,682,0.855,689,1.685,735,0.961,737,0.681,738,1.797,739,2.048,740,0.916,741,1.458,742,1.094,743,2.252,744,0.819,745,2.138,746,1.603,748,2.277,749,3.307,750,2.625,751,1.159,752,2.151,754,1.685,755,2.165,756,1.687,757,2.715,758,0.938,759,0.961,760,0.961,761,0.916,762,2.196,763,0.895,764,2.677,766,0.916,767,1.125,768,1.457,769,1.743,770,2.905,771,1.748,772,1.064,773,1.094,775,1.832,817,2.508,818,2.448,825,3.39,826,2.817,827,1.491,828,1.78,829,1.78,830,1.491,831,1.428,832,1.732,833,1.886,834,1.428,835,2.324,836,1.428,837,1.564,838,2.72,839,1.526,840,1.526,842,1.225,843,1.277,844,1.13,846,1.647,847,3.39,849,3.45,850,3.217,851,1.491,852,2.233,853,3.026,855,1.036,858,3.655,859,1.832,860,2.68,865,3.906,866,1.234,867,1.234,868,3.906,869,4.033,870,4.542,871,1.874,872,4.3,873,4.859,874,3.051,875,3.051,876,3.892,877,2.884,878,4.446,879,1.491,880,2.563,881,2.845,883,5.53,884,4.611,885,1.748,886,3.699,887,2.044,888,1.647,890,1.647,891,1.125,892,1.874,893,1.01,894,1.321,896,1.874,897,2.72,919,2.459,924,1.823,945,1.945,948,0.801,949,0.819,952,1.195,954,1.372,968,1.563,983,0.938,1002,4.446,1038,1.874,1039,1.428,1048,1.647,1049,3.068,1050,3.051,1051,3.858,1382,4.146,1403,0.985,1443,1.372,1479,1.748,1501,1.01,1565,2.459,1574,2.076,1575,2.008,1579,2.008,1580,2.626,1620,1.491,1684,3.707,1687,1.563,1969,4.446,2033,1.748,2096,1.563,2257,6.271,2585,2.044,2612,2.044,2644,3.858,2783,2.044,3008,3.326,3014,3.858,3022,2.044,3023,2.044,3024,2.044,3025,2.044,3026,2.044,3027,2.044,3028,2.044,3029,2.044,3033,2.044,3034,6.271,3035,4.736,3036,3.745,3037,5.458,3038,5.458,3039,2.301,3040,3.745,3041,3.745,3042,2.301,3043,2.301,3044,2.301,3045,3.745,3046,3.745,3047,5.458,3048,5.458,3049,3.745,3050,5.458,3051,3.745,3052,5.458,3053,3.745,3054,5.458,3055,3.745,3056,5.458,3057,3.745,3058,5.458,3059,3.745,3060,7.075,3061,5.458,3062,3.745,3063,5.458,3064,3.745,3065,2.301,3066,5.458,3067,5.458,3068,5.458,3069,5.458,3070,5.458,3071,2.301,3072,2.301,3073,2.301,3074,2.301,3075,2.301,3076,2.301,3077,2.301,3078,2.301,3079,3.745,3080,3.745,3081,6.439,3082,2.301,3083,2.301,3084,4.848,3085,3.745,3086,5.458,3087,3.745,3088,3.745,3089,3.745,3090,3.745,3091,3.745,3092,3.745,3093,3.745,3094,3.326,3095,3.745,3096,3.745,3097,3.745,3098,4.736,3099,3.326,3100,3.745,3101,3.745,3102,3.745,3103,3.745,3104,2.301,3105,2.301,3106,2.301,3107,2.301,3108,2.301,3109,2.301,3110,2.301,3111,2.301,3112,3.745,3113,2.301,3114,2.301,3115,2.301,3116,2.044]],["title/components/TripListComponent.html",[245,0.457,388,1.207]],["body/components/TripListComponent.html",[3,0.043,4,0.037,5,0.043,7,0.157,8,0.389,24,0.944,27,0.981,31,1.842,32,1.415,34,1.348,35,0.007,36,0.848,37,0.359,38,1.298,39,0.999,40,0.827,44,1.415,66,2.385,75,0.782,108,1.576,133,0.298,174,0.153,175,0.43,176,0.859,182,0.945,185,0.892,190,0.875,192,0.875,210,0.043,211,0.34,212,1.51,213,0.004,214,0.004,238,3.096,245,0.616,246,0.944,247,1.459,248,1.019,249,1.019,250,1.019,251,1.019,253,1.208,254,1.627,255,0.98,256,2.453,257,2.014,259,1.378,261,1.378,263,1.653,266,1.079,267,1.789,279,1.274,280,1.539,283,1.185,295,1.853,296,1.384,298,1.516,299,1.832,300,1.277,304,1.019,305,1.487,306,1.487,307,1.019,308,1.931,309,1.019,310,1.019,311,0.962,312,2.41,313,0.944,314,0.944,315,0.944,316,0.944,317,1.487,318,0.962,319,0.944,320,1.487,321,0.962,322,1.019,323,1.487,324,0.962,325,1.019,326,1.487,327,0.944,328,0.944,329,1.185,330,1.756,331,0.944,332,1.931,333,0.962,334,2.053,335,1.019,336,0.944,337,1.019,338,0.962,339,1.019,340,1.019,341,0.962,342,1.019,343,0.944,344,1.019,345,0.944,346,1.019,347,0.962,348,0.944,349,1.69,350,0.944,351,0.944,352,1.756,353,0.926,354,0.999,355,0.944,356,0.926,357,0.981,358,1.487,359,0.944,360,1.487,361,0.926,362,0.725,363,0.962,364,0.944,365,0.944,366,1.277,367,0.962,368,1.019,369,1.019,370,0.944,371,0.98,372,0.962,373,1.659,374,0.962,375,1.487,376,0.962,377,0.962,378,1.254,379,0.944,380,0.927,381,0.926,382,0.944,383,0.962,384,0.962,385,0.962,386,2.338,387,0.944,388,1.789,389,0.944,390,0.944,391,0.999,392,1.019,393,1.019,394,1.08,411,2.737,444,0.98,458,2.818,459,3.44,470,1.354,471,0.599,476,1.169,478,2.737,483,1.774,507,2.583,594,1.517,608,3.664,616,1.554,672,3.372,679,1.79,682,1.384,684,5.321,735,1.554,737,1.101,738,1.79,739,1.936,740,1.482,741,1.673,742,1.77,743,1.77,744,1.325,745,1.934,746,2.325,748,1.607,749,1.482,750,1.517,751,1.875,752,1.243,754,2.284,755,1.101,756,1.676,757,2.057,758,1.517,759,1.554,760,1.554,761,1.482,762,1.269,763,1.448,764,1.325,766,1.482,767,1.821,768,1.448,769,1.08,770,2.325,771,2.828,772,1.722,773,1.77,817,1.554,818,1.415,919,3.332,926,3.44,944,3.306,945,2.822,952,1.933,954,2.219,955,3.032,968,2.528,969,2.828,983,1.517,1046,2.412,1403,1.593,1588,3.012,1620,2.412,1777,3.372,2254,6.59,2309,3.032,2310,5.227,2311,4.426,2765,3.306,2767,4.826,2768,3.306,2985,4.826,2999,3.032,3034,6.59,3117,6.417,3118,3.722,3119,5.433,3120,5.433,3121,3.722,3122,3.722,3123,3.722,3124,3.722,3125,3.722,3126,3.722,3127,3.722,3128,3.722,3129,3.722,3130,5.433]],["title/classes/TripPlannerMap.html",[211,0.435,2029,3.878]],["body/classes/TripPlannerMap.html",[3,0.036,4,0.031,5,0.036,7,0.132,8,0.341,27,0.562,29,1.568,32,1.662,34,1.693,35,0.007,36,0.911,37,0.433,38,1.631,39,2.207,40,1.827,62,1.729,108,2.385,133,0.722,174,0.133,182,1.573,186,1.726,210,0.036,211,0.284,212,1.815,213,0.004,214,0.004,238,2.833,263,1.72,266,0.944,279,1.684,280,1.824,283,1.037,295,2.372,300,1.118,319,0.789,357,0.562,422,2.017,463,3.403,471,1.227,483,1.462,486,1.849,509,0.868,644,2.73,662,1.692,685,1.379,689,2.714,755,2.169,769,2.127,775,2.821,841,3.435,844,1.434,850,2.114,859,2.325,924,2.448,946,4.547,948,1.084,949,1.108,1068,2.114,1209,4.315,1211,3.312,1224,5.734,1248,3.873,1352,2.228,1368,2.364,1370,3.439,1454,4.75,1543,2.114,1626,5.123,1627,6.99,1628,3.611,1629,3.611,1630,3.611,1631,3.611,1634,4.904,1638,3.611,1639,4.381,1640,3.611,1641,3.611,1642,3.611,1643,3.611,1644,4.621,1646,5.974,1647,5.734,1649,5.793,1650,5.283,1651,3.611,1652,2.364,1653,5.283,1654,3.611,1655,6.993,1656,2.536,1657,2.364,1658,2.536,1659,2.364,1660,2.228,1661,2.536,1662,2.364,1663,2.364,1664,2.536,1665,2.536,1666,2.364,1667,2.536,1668,2.364,1669,2.536,1680,2.364,1682,2.536,1683,2.364,1684,3.229,1685,3.611,1686,2.536,1687,2.114,1688,2.364,1689,2.536,1690,3.611,1691,2.364,1692,3.611,1693,2.536,1694,2.364,1695,2.228,1697,2.536,1698,2.765,1699,2.536,1708,2.536,1709,2.765,1710,2.765,1716,4.698,1717,5.123,1724,2.765,2008,2.765,2029,3.873,2043,2.765,2208,2.765,2999,2.536,3004,2.765,3014,3.873,3084,2.765,3094,2.765,3099,2.765,3131,3.112,3132,4.754,3133,4.754,3134,6.456,3135,4.754,3136,4.754,3137,4.754,3138,6.456,3139,4.754,3140,3.112,3141,3.112,3142,4.754,3143,3.112,3144,4.754,3145,3.112,3146,3.112,3147,4.754,3148,3.112,3149,3.112,3150,4.754,3151,3.112,3152,3.112,3153,4.754,3154,3.112,3155,3.112,3156,3.112,3157,3.112,3158,3.112,3159,3.112,3160,3.112,3161,3.112,3162,3.112,3163,3.112,3164,6.954,3165,3.112,3166,3.112,3167,3.112,3168,3.112,3169,3.112,3170,3.112,3171,3.112,3172,3.112,3173,3.112,3174,3.112,3175,4.754,3176,3.112,3177,3.112,3178,4.754,3179,3.112,3180,3.112,3181,3.112,3182,4.754,3183,3.112,3184,3.112,3185,3.112,3186,3.112,3187,3.112,3188,3.112,3189,3.112,3190,3.112,3191,3.112,3192,4.754,3193,3.112,3194,3.112,3195,4.754,3196,3.112,3197,3.112,3198,4.754,3199,3.112,3200,3.112,3201,3.112,3202,3.112,3203,3.112,3204,3.112,3205,3.112,3206,3.112,3207,3.112,3208,3.112,3209,3.112,3210,3.112,3211,4.754,3212,4.754]],["title/components/TripPlannerOptionsComponent.html",[245,0.457,389,1.207]],["body/components/TripPlannerOptionsComponent.html",[3,0.034,4,0.029,5,0.034,7,0.124,8,0.325,24,0.742,27,0.819,32,1.461,34,1.421,35,0.007,36,0.843,37,0.379,38,1.369,40,1.234,44,1.113,66,1.991,75,0.615,108,2.075,133,0.635,174,0.129,175,0.338,182,0.509,183,1.897,185,0.701,210,0.034,211,0.267,212,0.971,213,0.003,214,0.003,245,0.533,246,0.742,247,1.218,248,0.801,249,0.801,250,0.801,251,0.801,253,1.008,254,1.408,255,0.771,256,2.413,257,1.816,259,1.15,261,1.15,263,1.713,266,0.901,267,1.585,276,2.096,279,1.343,280,1.56,296,1.089,298,1.549,299,1.526,300,1.47,301,1.193,303,1.521,304,0.801,305,1.241,306,1.519,307,0.801,308,1.711,309,0.801,310,0.801,311,0.757,312,2.288,313,0.742,314,0.742,315,0.742,316,0.742,317,1.241,318,0.757,319,0.742,320,1.241,321,0.757,322,0.801,323,1.241,324,0.757,325,0.801,326,1.241,327,0.742,328,0.742,329,0.989,330,1.519,331,0.742,332,1.711,333,0.757,334,1.519,335,0.801,336,0.742,337,0.801,338,0.757,339,1.241,340,0.801,341,0.757,342,0.801,343,0.742,344,0.801,345,0.742,346,0.801,347,0.757,348,0.742,349,1.462,350,0.742,351,0.742,352,1.519,353,0.728,354,0.786,355,0.742,356,0.728,357,0.819,358,1.241,359,0.742,360,1.241,361,0.728,362,0.571,363,0.757,364,1.715,365,0.742,366,1.066,367,0.757,368,0.801,369,0.801,370,0.742,371,0.771,372,0.757,373,0.688,374,0.757,375,1.241,376,0.757,377,0.757,378,1.047,379,0.742,380,0.773,381,0.728,382,0.742,383,0.757,384,0.757,385,0.757,386,2.211,387,0.742,388,0.742,389,1.585,390,2.358,391,1.678,392,0.801,393,0.801,394,0.849,419,1.682,444,0.771,458,2.599,470,1.065,507,2.639,594,1.193,616,1.223,631,5.068,662,1.976,679,1.549,689,1.042,708,1.57,724,2.385,725,4.523,726,3.695,732,3.695,733,2.601,734,2.601,735,1.223,737,0.866,738,1.549,739,1.886,740,1.166,741,0.901,742,1.392,743,1.392,744,1.042,745,1.042,746,1.253,748,1.642,749,1.166,751,1.475,752,0.978,753,1.113,754,2.407,755,2.637,756,1.319,757,2.168,758,1.193,759,1.223,760,1.223,761,1.166,762,0.999,763,1.139,764,1.976,765,1.57,768,1.139,769,0.849,775,2.715,817,1.223,818,1.113,826,2.489,828,1.392,829,1.392,841,1.319,842,0.958,844,0.884,852,4.719,855,2.043,857,1.817,858,3.524,866,1.57,867,1.57,868,3.715,869,3.836,870,4.717,879,2.939,880,2.489,884,3.081,893,2.437,894,1.682,922,2.385,923,3.352,926,2.432,946,1.746,960,2.601,968,3.081,1221,2.939,1317,3.695,1322,3.695,1363,3.884,1375,5.237,1382,3.446,1434,1.817,1440,1.989,1441,2.355,1443,1.746,1445,1.817,1455,1.746,1462,2.096,1543,1.989,1552,2.096,1808,3.695,1878,5.093,1880,5.51,1881,2.385,1886,3.695,1897,4.029,1901,5.093,1907,5.828,1909,2.385,1910,2.385,1911,2.385,1912,4.635,1913,3.695,1914,3.695,1915,3.695,1916,4.749,1917,2.385,1918,2.385,1919,4.523,1923,3.695,1935,2.385,2247,2.601,2251,6.708,2578,2.601,2579,2.601,2584,2.601,2715,2.601,3034,6.708,3213,5.551,3214,4.536,3215,4.536,3216,2.928,3217,4.536,3218,6.252,3219,2.928,3220,4.536,3221,2.928,3222,4.536,3223,2.928,3224,2.928,3225,2.928,3226,2.928,3227,2.928,3228,2.928,3229,2.928,3230,2.928,3231,2.928,3232,2.928,3233,2.928,3234,2.928,3235,2.928,3236,2.928,3237,2.928,3238,2.928,3239,4.536,3240,4.536,3241,4.536,3242,4.536,3243,4.536,3244,2.928,3245,2.928,3246,2.928,3247,2.928]],["title/interfaces/TripState.html",[474,0.142,946,2.838]],["body/interfaces/TripState.html",[0,1.733,3,0.044,4,0.038,5,0.044,7,0.161,8,0.395,31,1.675,35,0.008,37,0.413,62,1.382,108,2.289,133,0.766,174,0.151,175,0.439,176,0.877,181,1.668,182,0.661,185,0.911,187,1.587,189,1.513,190,0.894,192,0.894,210,0.075,211,0.347,212,0.814,213,0.004,214,0.004,263,1.729,283,1.416,284,1.758,290,1.382,295,1.881,300,1.999,407,2.038,424,2.107,437,2.266,444,1.001,458,2.262,471,1.045,474,0.113,475,0.741,486,1.218,507,4.381,508,2.721,509,2.611,662,2.311,673,3.289,674,3.289,675,2.183,677,3.289,678,2.721,679,2.111,685,1.103,688,5.273,696,2.721,697,2.721,698,2.721,708,2.038,769,2.505,775,1.859,841,2.485,923,2.038,946,5.651,1211,4.676,1310,3.376,1311,3.376,1312,3.376,1313,3.376,1314,3.376,1315,3.096,1316,3.376,1317,3.096,1318,3.376,1319,3.376,1320,3.376,1321,3.376,1322,3.096,1323,3.376,1324,3.376,1325,3.376,1326,3.376,1333,5.665,1335,3.376,1336,3.096,1337,4.494,1338,3.376,1339,3.376,1340,3.376,1341,4.9,1342,4.9,1343,2.582,1344,3.376,1345,3.376,1346,3.376,1348,4.9,1350,4.411,1352,2.721,1353,3.376,1354,5.665,1355,3.376,1356,7.232,1357,4.9,1358,7.232,1359,4.9,1361,7.409,1363,4.496,1364,3.376,1367,3.376,1368,4.191,1369,3.376,1370,2.266,1372,6.429,1375,5.665,1377,3.376,1378,2.721,1379,4.9,1380,3.376,1381,3.376,1382,2.887,1383,2.582,1384,2.887,1385,2.582,1386,4.9,1387,3.376,1388,3.096,1389,3.376,1390,3.376,1391,3.096,1392,5.768,1393,3.376]],["title/interfaces/Vertex.html",[474,0.142,1572,2.552]],["body/interfaces/Vertex.html",[3,0.063,4,0.055,5,0.063,7,0.23,8,0.506,35,0.007,36,0.937,37,0.444,38,1.678,66,2.386,106,1.978,133,0.79,174,0.098,210,0.1,213,0.005,214,0.005,238,3.098,299,1.327,474,0.257,475,1.06,478,2.739,483,2.196,485,3.666,502,1.517,777,2.585,891,3.452,1363,2.739,1524,3.736,1553,3.892,1554,4.054,1555,4.054,1556,4.054,1557,3.123,1558,4.054,1559,4.054,1560,3.123,1561,3.123,1562,3.123,1563,3.123,1564,3.785,1565,3.666,1566,4.054,1567,3.123,1568,3.123,1569,3.123,1570,4.937,1571,4.937,1572,4.809,1573,4.764,1574,4.599,1575,4.448,1576,4.764,1577,4.764,1578,4.764,1579,2.915,1580,3.015,1581,3.123,1582,3.123,1583,3.123,1584,3.123,1585,3.123,1586,3.123,1587,3.123,1588,3.015]],["title/interfaces/Vertex-1.html",[215,1.093,474,0.119,1572,2.141]],["body/interfaces/Vertex-1.html",[3,0.063,4,0.055,5,0.063,7,0.23,8,0.506,35,0.007,36,0.937,37,0.444,38,1.678,66,2.386,106,1.978,133,0.79,174,0.098,210,0.1,213,0.005,214,0.005,238,3.098,299,1.327,474,0.257,475,1.06,478,2.739,483,2.196,485,3.666,502,1.517,777,2.585,891,3.452,1363,2.739,1524,3.736,1554,4.054,1555,4.054,1556,4.054,1557,3.123,1558,4.054,1559,4.054,1560,3.123,1561,3.123,1562,3.123,1563,3.123,1564,3.785,1565,3.666,1566,4.054,1567,3.123,1568,3.123,1569,3.123,1570,4.937,1571,4.937,1572,4.809,1573,4.764,1574,4.599,1575,4.448,1576,4.764,1577,4.764,1578,4.764,1579,2.915,1580,3.015,1581,3.123,1582,3.123,1583,3.123,1584,3.123,1585,3.123,1586,3.123,1587,3.123,1588,3.015,1589,3.892]],["title/dependencies.html",[397,3.065,3248,3.253]],["body/dependencies.html",[31,1.798,35,0.007,175,0.713,176,1.764,179,3.677,185,1.477,209,3.996,213,0.006,214,0.006,397,3.307,416,6.228,417,6.228,419,3.542,421,5.478,422,4.954,439,5.478,444,1.624,502,1.721,626,3.542,657,6.791,658,5.478,660,5.478,675,3.542,2267,5.478,2268,4.414,2644,5.024,2685,5.024,2686,5.024,2904,5.478,3249,6.167,3250,8.449,3251,6.167,3252,6.167,3253,6.167,3254,6.167,3255,6.167,3256,6.167,3257,6.167,3258,8.31,3259,6.167,3260,6.167,3261,7.646,3262,7.646,3263,6.167,3264,6.167,3265,6.167,3266,6.167,3267,6.167,3268,6.167,3269,6.167,3270,6.167,3271,6.167,3272,6.167,3273,6.167,3274,6.167,3275,6.167,3276,6.167,3277,6.167,3278,6.167,3279,6.167,3280,6.167,3281,6.167,3282,6.167,3283,6.167,3284,6.167,3285,6.167,3286,6.167,3287,6.167,3288,6.167,3289,6.167,3290,6.167,3291,6.167]],["title/miscellaneous/functions.html",[3292,3.547,3293,5.077]],["body/miscellaneous/functions.html",[7,0.313,34,1.552,35,0.007,36,0.835,37,0.354,38,1.495,133,0.683,213,0.006,214,0.006,300,1.737,1612,6.019,3292,6.563,3293,6.563,3294,8.519,3295,7.389,3296,8.519,3297,7.389]],["title/index.html",[7,0.169,3298,3.993,3299,3.993]],["body/index.html",[4,0.064,35,0.006,36,0.722,213,0.006,214,0.006,245,0.81,253,1.419,285,5.673,408,3.424,554,2.374,662,2.273,775,4.489,868,4.827,920,4.338,1916,4.851,2590,5.673,2606,5.202,2653,5.673,3116,5.673,3248,5.202,3250,5.673,3300,7.812,3301,6.386,3302,8.44,3303,8.44,3304,5.673,3305,6.386,3306,7.812,3307,9.02,3308,6.386,3309,6.386,3310,6.386,3311,6.386,3312,6.386,3313,6.386,3314,6.386,3315,6.386,3316,8.44,3317,8.44,3318,6.386,3319,8.793,3320,6.386,3321,6.386,3322,6.386,3323,7.812,3324,7.812,3325,8.793,3326,6.386,3327,7.812,3328,7.812,3329,6.386,3330,6.386,3331,6.386,3332,6.386,3333,7.812,3334,6.386,3335,6.386,3336,6.386,3337,6.386,3338,6.386,3339,8.44,3340,6.386,3341,6.386,3342,5.202,3343,6.386]],["title/modules.html",[396,2.836]],["body/modules.html",[35,0.006,213,0.006,214,0.006,395,5.081,396,2.936,403,4.788,404,3.988,405,4.788,417,7.759,617,4.543,622,4.788,623,3.841,1735,4.543,1740,4.788,2234,5.081,2239,4.788,2453,5.081,2458,4.788,2627,4.788,2935,5.081,2939,4.788,3344,9.524,3345,9.524,3346,9.75,3347,9.382,3348,9.382]],["title/interfaces/msg.html",[474,0.142,689,1.694]],["body/interfaces/msg.html",[0,2.473,3,0.075,4,0.065,5,0.075,7,0.274,8,0.564,31,1.996,35,0.007,37,0.377,40,2.012,62,2.864,174,0.164,175,0.748,176,1.493,190,1.521,192,1.521,210,0.075,211,0.591,212,1.385,213,0.006,214,0.006,243,3.716,258,3.716,272,4.394,274,5.271,290,2.353,437,3.857,474,0.193,475,1.261,483,2.085,612,4.192,689,3.021,2681,5.747,2682,5.747,2683,7.54,2685,5.271,2686,5.271,2687,5.747,2688,8.041,2689,5.747,2690,5.747,2691,5.747,2692,5.747,2693,5.747,2694,5.747,2695,5.747,2696,5.747]],["title/overview.html",[3342,5.264]],["body/overview.html",[2,1.868,29,3.225,35,0.007,213,0.004,214,0.004,246,2.142,247,0.996,272,4.349,311,1.655,313,1.623,315,1.623,318,2.088,321,2.088,324,2.088,327,1.623,328,1.623,331,1.623,333,1.655,336,1.623,338,2.088,341,2.088,343,2.049,345,2.049,347,2.088,348,1.623,350,1.623,351,1.623,353,1.593,355,1.623,356,1.593,359,1.623,361,1.593,363,1.655,365,1.623,367,2.088,370,1.623,372,2.088,374,2.088,376,1.655,377,1.655,379,1.623,381,1.593,382,1.623,383,2.088,385,1.655,387,1.623,388,1.623,389,1.623,395,6.751,396,1.628,397,2.905,398,3.294,399,3.294,400,3.294,401,3.294,402,3.294,403,4.583,404,5.119,405,6.414,406,3.112,407,1.988,408,1.988,470,1.349,475,0.723,603,3.021,608,3.325,617,6.087,618,3.294,619,3.294,620,3.294,621,3.294,622,4.583,623,5.555,899,4.864,900,3.021,915,4.116,923,3.433,924,2.138,1068,2.519,1480,6.138,1735,6.393,1736,3.294,1738,3.294,1739,3.294,1740,4.583,2003,3.021,2097,3.294,2098,3.294,2099,3.294,2234,7.326,2235,3.294,2236,3.294,2237,3.294,2238,3.294,2239,4.583,2453,6.686,2454,3.294,2455,3.294,2456,3.294,2457,3.294,2458,4.583,2496,3.294,2498,3.294,2499,3.294,2622,3.294,2623,3.294,2624,3.294,2625,3.294,2626,3.294,2627,4.583,2703,3.021,2892,3.294,2935,6.807,2936,3.294,2937,3.294,2938,3.294,2939,4.583,3342,3.021,3349,3.708,3350,3.708,3351,3.708]],["title/properties.html",[8,0.41,3248,3.253]],["body/properties.html",[8,0.544,35,0.007,213,0.007,214,0.007,3304,6.74,3352,7.587]],["title/routes.html",[470,2.35]],["body/routes.html",[35,0.007,213,0.007,214,0.007,470,2.776]]],"invertedIndex":[["",{"_index":35,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/msg.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["0",{"_index":108,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["0.0.0",{"_index":3352,"title":{},"body":{"properties.html":{}}}],["0.10",{"_index":2610,"title":{},"body":{"components/SideNavComponent.html":{}}}],["0.11.4",{"_index":3291,"title":{},"body":{"dependencies.html":{}}}],["0.15s",{"_index":2723,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.2",{"_index":836,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["0.2.0",{"_index":3285,"title":{},"body":{"dependencies.html":{}}}],["0.2em",{"_index":3113,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["0.3s",{"_index":2721,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.45s",{"_index":2719,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["0.4em",{"_index":3114,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["0.5",{"_index":2715,"title":{},"body":{"components/SpinnerComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["0.50",{"_index":2586,"title":{},"body":{"components/SideNavComponent.html":{}}}],["0.5s",{"_index":2978,"title":{},"body":{"components/ToasterComponent.html":{}}}],["0000004d",{"_index":1429,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["002d62",{"_index":850,"title":{},"body":{"components/BookingComponent.html":{},"components/DropdownOptionComponent.html":{},"classes/LinesMap.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["0px",{"_index":770,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["1",{"_index":215,"title":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState-1.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop-1.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState-1.html":{},"interfaces/LiveState-1.html":{},"interfaces/Plan-1.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects-1.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/Step-1.html":{},"interfaces/StopState-1.html":{},"interfaces/TripData-1.html":{},"interfaces/Vertex-1.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["1\">mins",{"_index":3092,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["1.2s",{"_index":2712,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["1.5.1",{"_index":3270,"title":{},"body":{"dependencies.html":{}}}],["1.5.3",{"_index":3281,"title":{},"body":{"dependencies.html":{}}}],["1.7.11",{"_index":3268,"title":{},"body":{"dependencies.html":{}}}],["1.8.0",{"_index":3280,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":888,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/MapAreaComponent.html":{},"components/RegisterComponent.html":{},"components/TripDetailsComponent.html":{}}}],["10.0.0",{"_index":3266,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":739,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["100ms",{"_index":2582,"title":{},"body":{"components/SideNavComponent.html":{}}}],["100px",{"_index":2655,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["100vh",{"_index":2094,"title":{},"body":{"components/MapAreaComponent.html":{},"components/SideNavComponent.html":{}}}],["100vw",{"_index":987,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["108px",{"_index":2233,"title":{},"body":{"components/PlacesSliderComponent.html":{},"components/SavedSliderComponent.html":{}}}],["109px",{"_index":976,"title":{},"body":{"components/BookingsComponent.html":{}}}],["10px",{"_index":818,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopsComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["11px",{"_index":1479,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["120px",{"_index":1734,"title":{},"body":{"components/LinesMapComponent.html":{},"components/PlacesMapComponent.html":{},"components/StopsMapComponent.html":{}}}],["12px",{"_index":847,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/TripDetailsComponent.html":{}}}],["13",{"_index":2003,"title":{},"body":{"classes/Map.html":{},"components/MapAreaComponent.html":{},"overview.html":{}}}],["135",{"_index":1922,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["13px",{"_index":1455,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["14.0.0",{"_index":3276,"title":{},"body":{"dependencies.html":{}}}],["14.0.1",{"_index":3255,"title":{},"body":{"dependencies.html":{}}}],["14.0.2",{"_index":3261,"title":{},"body":{"dependencies.html":{}}}],["14.1.0",{"_index":3250,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["14.3.0",{"_index":3262,"title":{},"body":{"dependencies.html":{}}}],["14.3.2",{"_index":3260,"title":{},"body":{"dependencies.html":{}}}],["140px",{"_index":771,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/QrComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["14px",{"_index":853,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/ListItemComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["14px/20px",{"_index":820,"title":{},"body":{"components/BookingComponent.html":{}}}],["15",{"_index":3178,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["150px",{"_index":2106,"title":{},"body":{"components/MiniMapComponent.html":{}}}],["15px",{"_index":754,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["15vw",{"_index":2581,"title":{},"body":{"components/SideNavComponent.html":{}}}],["16",{"_index":2892,"title":{},"body":{"classes/StopsMap.html":{},"overview.html":{}}}],["16px",{"_index":863,"title":{},"body":{"components/BookingComponent.html":{},"components/LinesDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/TripComponent.html":{}}}],["17px",{"_index":854,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/LoginComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/StationEntityComponent.html":{}}}],["18",{"_index":2010,"title":{},"body":{"classes/Map.html":{}}}],["185px",{"_index":2837,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["187",{"_index":3016,"title":{},"body":{"components/TripComponent.html":{}}}],["18px",{"_index":1620,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["190px",{"_index":2472,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["19px",{"_index":1478,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["1f2224",{"_index":2583,"title":{},"body":{"components/SideNavComponent.html":{}}}],["1f63d4",{"_index":2216,"title":{},"body":{"components/PlacesComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{}}}],["1px",{"_index":879,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["2",{"_index":915,"title":{"interfaces/BookingState-2.html":{}},"body":{"components/BusEntityComponent.html":{},"components/SideNavComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":3289,"title":{},"body":{"dependencies.html":{}}}],["2.5s",{"_index":2979,"title":{},"body":{"components/ToasterComponent.html":{}}}],["2.9.2",{"_index":3283,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":914,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{},"components/StationEntityComponent.html":{},"classes/StopsMap.html":{},"components/TripComponent.html":{}}}],["20.854922400637918",{"_index":1660,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["20000).pipe",{"_index":1831,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["200px",{"_index":1623,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/MapAreaComponent.html":{}}}],["20px",{"_index":855,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["20secs",{"_index":1859,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["210",{"_index":3107,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["214",{"_index":2615,"title":{},"body":{"components/SideNavComponent.html":{}}}],["21px",{"_index":765,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["220px",{"_index":2864,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["225",{"_index":3108,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["225px",{"_index":977,"title":{},"body":{"components/BookingsComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{}}}],["22px",{"_index":1973,"title":{},"body":{"components/MainInputComponent.html":{},"components/SideNavComponent.html":{}}}],["230px",{"_index":2120,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["232631",{"_index":2784,"title":{},"body":{"components/StationListComponent.html":{}}}],["235",{"_index":1977,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{}}}],["245",{"_index":3110,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["245px",{"_index":2881,"title":{},"body":{"components/StopsComponent.html":{}}}],["25",{"_index":463,"title":{},"body":{"modules/AppModule.html":{},"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["250px",{"_index":985,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["255",{"_index":2585,"title":{},"body":{"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["25px",{"_index":1453,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{}}}],["25vw",{"_index":974,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["265px",{"_index":3244,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["270px",{"_index":983,"title":{},"body":{"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["27px",{"_index":1908,"title":{},"body":{"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{}}}],["290px",{"_index":747,"title":{},"body":{"components/BookOptionsComponent.html":{}}}],["2b3b4c",{"_index":756,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["2d3b50",{"_index":1446,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["2e3e51",{"_index":860,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["2px",{"_index":837,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["3",{"_index":1902,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TripComponent.html":{}}}],["3.0.0",{"_index":3275,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":3279,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1034,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["300",{"_index":1970,"title":{},"body":{"components/MainInputComponent.html":{}}}],["3000",{"_index":2964,"title":{},"body":{"components/ToasterComponent.html":{}}}],["300ms",{"_index":2611,"title":{},"body":{"components/SideNavComponent.html":{}}}],["30px",{"_index":1619,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{}}}],["30vw",{"_index":2580,"title":{},"body":{"components/SideNavComponent.html":{}}}],["323541",{"_index":1806,"title":{},"body":{"components/ListItemComponent.html":{}}}],["32px",{"_index":882,"title":{},"body":{"components/BookingComponent.html":{}}}],["330px",{"_index":981,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["333",{"_index":2969,"title":{},"body":{"components/ToasterComponent.html":{}}}],["33px",{"_index":1447,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["342px",{"_index":975,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["35px",{"_index":1452,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["35vw",{"_index":2620,"title":{},"body":{"components/SideNavComponent.html":{}}}],["373a50",{"_index":1807,"title":{},"body":{"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{}}}],["38px",{"_index":1451,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["39.667341104708946",{"_index":1659,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["3e3aef",{"_index":1434,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["3px",{"_index":750,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/PlacesComponent.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["4",{"_index":2570,"title":{},"body":{"components/SideNavComponent.html":{}}}],["4.1.0",{"_index":3259,"title":{},"body":{"dependencies.html":{}}}],["4.18.1",{"_index":3278,"title":{},"body":{"dependencies.html":{}}}],["4.5.2",{"_index":3287,"title":{},"body":{"dependencies.html":{}}}],["4.7.2",{"_index":3273,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":819,"title":{},"body":{"components/BookingComponent.html":{},"components/OptionComponent.html":{}}}],["40px",{"_index":2284,"title":{},"body":{"components/QrComponent.html":{},"components/StationListComponent.html":{}}}],["41",{"_index":3349,"title":{},"body":{"overview.html":{}}}],["45",{"_index":1654,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["48",{"_index":2164,"title":{},"body":{"components/OptionComponent.html":{}}}],["4px",{"_index":3018,"title":{},"body":{"components/TripComponent.html":{}}}],["4s",{"_index":892,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["5",{"_index":2703,"title":{},"body":{"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{},"overview.html":{}}}],["5.1.0",{"_index":3256,"title":{},"body":{"dependencies.html":{}}}],["5.5px",{"_index":1810,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationListComponent.html":{}}}],["50",{"_index":1454,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"classes/LinesMap.html":{},"classes/Map.html":{},"components/SpinnerComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["500",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StationListComponent.html":{}}}],["500px",{"_index":986,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["50px",{"_index":2710,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["50vw",{"_index":2621,"title":{},"body":{"components/SideNavComponent.html":{}}}],["54",{"_index":3351,"title":{},"body":{"overview.html":{}}}],["545f6d",{"_index":852,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/LoginComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["545f6d!important",{"_index":1917,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["58",{"_index":3350,"title":{},"body":{"overview.html":{}}}],["5px",{"_index":880,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesMapComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["5s",{"_index":2155,"title":{},"body":{"components/OptionComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{}}}],["600",{"_index":763,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["600px",{"_index":984,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["60vw",{"_index":2618,"title":{},"body":{"components/SideNavComponent.html":{}}}],["64px",{"_index":2707,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["6c757d2b",{"_index":1804,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationListComponent.html":{}}}],["6px",{"_index":1969,"title":{},"body":{"components/MainInputComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["7.5.0",{"_index":3286,"title":{},"body":{"dependencies.html":{}}}],["7.7px",{"_index":1805,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationListComponent.html":{}}}],["700",{"_index":1448,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{}}}],["700px",{"_index":982,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["70vw",{"_index":2619,"title":{},"body":{"components/SideNavComponent.html":{}}}],["727f90",{"_index":3245,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["75",{"_index":2093,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["7px",{"_index":845,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/TripComponent.html":{}}}],["80",{"_index":2893,"title":{},"body":{"classes/StopsMap.html":{}}}],["800px",{"_index":980,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["8190a4",{"_index":848,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/OptionComponent.html":{},"components/StationEntityComponent.html":{}}}],["85",{"_index":1622,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["85px",{"_index":1450,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["868d95",{"_index":1474,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/StationListComponent.html":{}}}],["87",{"_index":1444,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["89",{"_index":2782,"title":{},"body":{"components/StationListComponent.html":{}}}],["8px",{"_index":838,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["900",{"_index":1435,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["90px",{"_index":2708,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["99",{"_index":835,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["9px",{"_index":3019,"title":{},"body":{"components/TripComponent.html":{}}}],["absolute",{"_index":1449,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{}}}],["absolutedirection",{"_index":1569,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["abstract",{"_index":1981,"title":{},"body":{"classes/Map.html":{}}}],["access",{"_index":2832,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["accessors",{"_index":2301,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{}}}],["action",{"_index":508,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/DirectionsStore.html":{},"interfaces/Notification.html":{},"interfaces/TripState.html":{}}}],["action.code",{"_index":50,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.codes",{"_index":556,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.data",{"_index":530,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.data.occupancy",{"_index":531,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.id",{"_index":543,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.index",{"_index":536,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.module",{"_index":546,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.msg.error.error",{"_index":2130,"title":{},"body":{"interfaces/Notification.html":{}}}],["action.routeinfo.code",{"_index":575,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.routeinfo.points",{"_index":576,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.routes.map(route",{"_index":563,"title":{},"body":{"interfaces/AppState.html":{}}}],["action.stops.map(stop",{"_index":565,"title":{},"body":{"interfaces/AppState.html":{}}}],["action.trip_id",{"_index":540,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.trip_ids.includes(+key",{"_index":580,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["action.value",{"_index":582,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["actions",{"_index":30,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/StationEntityComponent.html":{}}}],["actions/api",{"_index":188,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{},"injectables/RouterEffects.html":{}}}],["actions/select.actions",{"_index":497,"title":{},"body":{"interfaces/AppState.html":{},"injectables/RouterEffects.html":{}}}],["activated",{"_index":614,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["activatedroute",{"_index":2174,"title":{},"body":{"components/PlacesComponent.html":{}}}],["active",{"_index":2217,"title":{},"body":{"components/PlacesComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{}}}],["activebooking",{"_index":539,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["activelineid",{"_index":542,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["activeroute",{"_index":518,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["activestopcode",{"_index":521,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["actual_component",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["add",{"_index":2606,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{},"index.html":{}}}],["addclusterstomap",{"_index":2885,"title":{},"body":{"classes/StopsMap.html":{}}}],["addclusterstomap(stops",{"_index":2896,"title":{},"body":{"classes/StopsMap.html":{}}}],["addmarker",{"_index":3132,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["addmarker(data",{"_index":3144,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["addto(map",{"_index":2091,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["afterviewinit",{"_index":942,"title":{},"body":{"components/BookingsComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{}}}],["agencyname",{"_index":1583,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["agencytimezoneoffset",{"_index":1584,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["alight",{"_index":3101,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["align",{"_index":842,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["alt",{"_index":1809,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationEntityComponent.html":{}}}],["angular",{"_index":3302,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":3249,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3251,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":2635,"title":{},"body":{"modules/SidebarModule.html":{}}}],["angular/common",{"_index":626,"title":{},"body":{"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"injectables/RouterEffects.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":424,"title":{},"body":{"modules/AppModule.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["angular/compiler",{"_index":3252,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":175,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"dependencies.html":{},"interfaces/msg.html":{}}}],["angular/forms",{"_index":419,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"components/LoginComponent.html":{},"modules/PlannerModule.html":{},"components/RegisterComponent.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"components/TripPlannerOptionsComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3253,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":638,"title":{},"body":{"modules/AuthModule.html":{},"modules/PlannerModule.html":{}}}],["angular/material/core",{"_index":2249,"title":{},"body":{"modules/PlannerModule.html":{}}}],["angular/material/datepicker",{"_index":2247,"title":{},"body":{"modules/PlannerModule.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["angular/material/expansion",{"_index":2256,"title":{},"body":{"modules/PlannerModule.html":{}}}],["angular/material/form",{"_index":630,"title":{},"body":{"modules/AuthModule.html":{}}}],["angular/material/icon",{"_index":2516,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/input",{"_index":633,"title":{},"body":{"modules/AuthModule.html":{},"modules/PlannerModule.html":{}}}],["angular/material/menu",{"_index":2260,"title":{},"body":{"modules/PlannerModule.html":{},"modules/SharedModule.html":{}}}],["angular/material/select",{"_index":1745,"title":{},"body":{"modules/LinesModule.html":{},"modules/PlannerModule.html":{}}}],["angular/material/snack",{"_index":2514,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/material/tabs",{"_index":431,"title":{},"body":{"modules/AppModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/StopsModule.html":{}}}],["angular/platform",{"_index":416,"title":{},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":444,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"classes/CustomSerializer.html":{},"injectables/DirectionsStore.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"modules/LinesRoutingModule.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"guards/MiniMapService.html":{},"components/PlacesComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"modules/StopsRoutingModule.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"dependencies.html":{}}}],["angularx",{"_index":2267,"title":{},"body":{"modules/PlannerModule.html":{},"dependencies.html":{}}}],["animation",{"_index":1766,"title":{},"body":{"modules/LinesRoutingModule.html":{},"modules/SidebarRoutingModule.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{}}}],["animations",{"_index":1613,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{}}}],["animations.ts",{"_index":3296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api",{"_index":236,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions",{"_index":187,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DirectionsStore.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SelectComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/TripState.html":{}}}],["api_actions.deleteroutesuccess({code",{"_index":49,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.deletestopsuccess({code",{"_index":57,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.fetchbookings",{"_index":2377,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.fetchbookingssuccess({data",{"_index":76,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.fetchplansuccess({data",{"_index":67,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getlineroutes({id",{"_index":2363,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getlineroutessuccess({routes",{"_index":87,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getlines",{"_index":506,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getlinessuccess({lines",{"_index":95,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getroutedetails({code",{"_index":2368,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getroutedetailsuccess({routeinfo",{"_index":111,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getsavedinfo",{"_index":2383,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getsavedinfosuccess(res",{"_index":126,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getsavedroutes",{"_index":2385,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getsavedroutessuccess({codes",{"_index":134,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getsavedstops",{"_index":2388,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getsavedstopssuccess({codes",{"_index":140,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getschedulessuccess({schedules",{"_index":119,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.getstops",{"_index":2373,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.getstopssuccess({stops",{"_index":151,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.loginsuccess({data",{"_index":156,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.registererror",{"_index":2129,"title":{},"body":{"interfaces/Notification.html":{}}}],["api_actions.registersuccess",{"_index":590,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["api_actions.registersuccess({data",{"_index":161,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.saveroutesuccess({code",{"_index":166,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.savestopsuccess({code",{"_index":171,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["api_actions.stoproutes({stopcode",{"_index":2372,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["api_actions.stoproutessuccess",{"_index":523,"title":{},"body":{"interfaces/AppState.html":{}}}],["api_actions.stoproutessuccess({routes",{"_index":145,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["apieffects",{"_index":1,"title":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"modules/AppModule.html":{}}}],["app",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["app.component",{"_index":427,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":262,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":246,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["appearance",{"_index":1910,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["application",{"_index":3311,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":1165,"title":{},"body":{"injectables/DataService.html":{}}}],["appmodule",{"_index":395,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":403,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":190,"title":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["appstatereducer",{"_index":436,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["ar",{"_index":1014,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["area",{"_index":2014,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area'},{'name",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["area.component",{"_index":2102,"title":{},"body":{"modules/MapModule.html":{}}}],["area.component.css",{"_index":2015,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.html",{"_index":2016,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts",{"_index":2013,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:21",{"_index":2028,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:22",{"_index":2027,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:23",{"_index":2030,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:24",{"_index":2021,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:33",{"_index":2026,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:72",{"_index":2025,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:76",{"_index":2022,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area.component.ts:82",{"_index":2024,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["area/map",{"_index":2012,"title":{},"body":{"components/MapAreaComponent.html":{},"modules/MapModule.html":{}}}],["arguments",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["arrival",{"_index":1575,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"components/StationEntityComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripDetailsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["arrival.arrivalmins}}:{{arrival.arrivalseconds",{"_index":2741,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["arrival.departuremins}}:{{arrival.departureseconds",{"_index":2742,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["arrival.routecode",{"_index":1855,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["arrivaldelay",{"_index":1554,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["arrivalmins",{"_index":1489,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}}}],["arrivals",{"_index":1802,"title":{},"body":{"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"injectables/StopsStore.html":{}}}],["arrivals.filter((arrival",{"_index":1854,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["arrivals[0].linecode",{"_index":2743,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["arrivalseconds",{"_index":1490,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}}}],["arrive",{"_index":1808,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["arriveby",{"_index":1361,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["arrow",{"_index":1445,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["arrow_upward",{"_index":3047,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["arrows",{"_index":3035,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["arrows[step.relativedirection",{"_index":3085,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["artifacts",{"_index":3320,"title":{},"body":{"index.html":{}}}],["assets/bus",{"_index":1651,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["assets/dest",{"_index":1662,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["assets/location.png",{"_index":1666,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["assets/pin.ico",{"_index":1668,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["asymmetrik/ngx",{"_index":421,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["async",{"_index":2793,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["asyncsubject",{"_index":1296,"title":{},"body":{"injectables/DataShareService.html":{}}}],["attribution",{"_index":2087,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["auth",{"_index":459,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"interfaces/CurrentRoute.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarRoutingModule.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/TripListComponent.html":{}}}],["auth.service",{"_index":611,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["auth/auth.module",{"_index":2261,"title":{},"body":{"modules/PlannerModule.html":{},"modules/SavedModule.html":{}}}],["auth0/angular",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["autheffects",{"_index":453,"title":{"injectables/AuthEffects.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{}}}],["authenticated",{"_index":1067,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["authguardservice",{"_index":602,"title":{"guards/AuthGuardService.html":{}},"body":{"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SidebarRoutingModule.html":{}}}],["authmodule",{"_index":617,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules.html":{},"overview.html":{}}}],["authmsg",{"_index":1868,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authorization",{"_index":1183,"title":{},"body":{"injectables/DataService.html":{}}}],["authreducer",{"_index":455,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Notification.html":{}}}],["authroutingmodule",{"_index":622,"title":{"modules/AuthRoutingModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":608,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/CurrentRoute.html":{},"components/DropdownOptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/TripListComponent.html":{},"overview.html":{}}}],["authstore",{"_index":2288,"title":{},"body":{"components/RegisterComponent.html":{}}}],["auto",{"_index":743,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["automatically",{"_index":3312,"title":{},"body":{"index.html":{}}}],["autopan",{"_index":2000,"title":{},"body":{"classes/Map.html":{}}}],["available",{"_index":3348,"title":{},"body":{"modules.html":{}}}],["await",{"_index":2821,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["b.end.includes(value",{"_index":911,"title":{},"body":{"pipes/BookingPipe.html":{}}}],["b.route.includes(value",{"_index":912,"title":{},"body":{"pipes/BookingPipe.html":{}}}],["b.start.touppercase().includes(upper",{"_index":910,"title":{},"body":{"pipes/BookingPipe.html":{}}}],["b7cbe4",{"_index":896,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["back",{"_index":1869,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["background",{"_index":826,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StopSliderComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["bar",{"_index":2215,"title":{},"body":{"components/PlacesComponent.html":{},"components/SavedSliderComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{}}}],["bars",{"_index":1971,"title":{},"body":{"components/MainInputComponent.html":{},"components/SidebarOptionsComponent.html":{}}}],["bdbdbd",{"_index":1473,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/MultipleDropdownComponent.html":{}}}],["bearer",{"_index":1184,"title":{},"body":{"injectables/DataService.html":{}}}],["behaviorsubject",{"_index":1282,"title":{},"body":{"injectables/DataShareService.html":{}}}],["behaviorsubject(true",{"_index":1286,"title":{},"body":{"injectables/DataShareService.html":{}}}],["between",{"_index":867,"title":{},"body":{"components/BookingComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["bezier(0.5",{"_index":2714,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["black",{"_index":2596,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{}}}],["block",{"_index":1552,"title":{},"body":{"components/InputComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/StopSliderComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["board",{"_index":3093,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["body",{"_index":3027,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["bold",{"_index":849,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["book",{"_index":316,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["book(data",{"_index":1106,"title":{},"body":{"injectables/DataService.html":{}}}],["booked",{"_index":2649,"title":{},"body":{"components/SidebarOptionsComponent.html":{},"components/StationEntityComponent.html":{}}}],["bookinfo",{"_index":670,"title":{"interfaces/BookInfo.html":{}},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["booking",{"_index":75,"title":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["booking!.trip_id",{"_index":720,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["booking.component.css",{"_index":790,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.component.html",{"_index":791,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.end",{"_index":965,"title":{},"body":{"components/BookingsComponent.html":{}}}],["booking.end}}({{booking.endstop",{"_index":815,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.entity",{"_index":237,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{}}}],["booking.route",{"_index":813,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.start",{"_index":963,"title":{},"body":{"components/BookingsComponent.html":{}}}],["booking.start}}({{booking.startstop",{"_index":814,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.travel",{"_index":816,"title":{},"body":{"components/BookingComponent.html":{}}}],["booking.trip_id",{"_index":786,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"components/BookingsComponent.html":{}}}],["booking/qr/:id",{"_index":2443,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["bookingcompleted",{"_index":694,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["bookingcomponent",{"_index":311,"title":{"components/BookingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["bookingpipe",{"_index":899,"title":{"pipes/BookingPipe.html":{}},"body":{"pipes/BookingPipe.html":{},"modules/PlannerModule.html":{},"overview.html":{}}}],["bookings",{"_index":314,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["bookings.component.css",{"_index":917,"title":{},"body":{"components/BookingsComponent.html":{}}}],["bookings.component.html",{"_index":918,"title":{},"body":{"components/BookingsComponent.html":{}}}],["bookings/delete",{"_index":1189,"title":{},"body":{"injectables/DataService.html":{}}}],["bookings/get",{"_index":1187,"title":{},"body":{"injectables/DataService.html":{}}}],["bookings/getplan",{"_index":1190,"title":{},"body":{"injectables/DataService.html":{}}}],["bookings/new",{"_index":1182,"title":{},"body":{"injectables/DataService.html":{}}}],["bookingscomponent",{"_index":313,"title":{"components/BookingsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["bookingsstore",{"_index":684,"title":{"injectables/BookingsStore.html":{}},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/TripListComponent.html":{}}}],["bookingstate",{"_index":482,"title":{"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{}}}],["bookingstateadapter",{"_index":500,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["bookingstateadapter.getinitialstate",{"_index":787,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["bookingstateadapter.removeone(action.trip_id",{"_index":549,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["bookingstateadapter.setall(action.data",{"_index":533,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["bookoptionscomponent",{"_index":315,"title":{"components/BookOptionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["boolean",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookingComponent.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"guards/MiniMapService.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"classes/StopsMap.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["bootstrap",{"_index":413,"title":{},"body":{"modules/AppModule.html":{},"modules/LinesModule.html":{}}}],["border",{"_index":893,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["borders",{"_index":2972,"title":{},"body":{"components/ToasterComponent.html":{}}}],["bottom",{"_index":753,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["box",{"_index":832,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["browse",{"_index":3346,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":417,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":429,"title":{},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{}}}],["browseranimationsmodule",{"_index":428,"title":{},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{}}}],["browsermodule",{"_index":415,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":1476,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/TripComponent.html":{}}}],["btn>button",{"_index":3031,"title":{},"body":{"components/TripComponent.html":{}}}],["build",{"_index":3319,"title":{},"body":{"index.html":{}}}],["bus",{"_index":319,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DataShareService.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["bus.arrivalmins",{"_index":1031,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["bus.arrivalmins}}:{{bus.arrivalseconds",{"_index":1027,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["bus.departuremins}}:{{bus.departureseconds",{"_index":1029,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["bus.departureseconds",{"_index":1028,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["bus.linecode",{"_index":1026,"title":{},"body":{"components/BusEntityComponent.html":{},"classes/LinesMap.html":{}}}],["bus.longitude",{"_index":1021,"title":{},"body":{"components/BusEntityComponent.html":{},"classes/LinesMap.html":{}}}],["bus.routecode",{"_index":1858,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["bus.routename",{"_index":1025,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["bus_icon",{"_index":1628,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["bus_stop_icon",{"_index":1629,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["busentitycomponent",{"_index":318,"title":{"components/BusEntityComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["buses",{"_index":1004,"title":{},"body":{"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataShareService.html":{},"classes/LinesMap.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{}}}],["buses.filter((bus",{"_index":1857,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["buses.foreach((bus",{"_index":1718,"title":{},"body":{"classes/LinesMap.html":{}}}],["buses.length",{"_index":2052,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["busobserver",{"_index":1200,"title":{},"body":{"injectables/DataShareService.html":{}}}],["button",{"_index":876,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["button.mat",{"_index":872,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["button:hover",{"_index":1975,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{}}}],["calc(100vh",{"_index":746,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["calls.actions",{"_index":189,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DirectionsStore.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/TripState.html":{}}}],["canactivate",{"_index":606,"title":{},"body":{"guards/AuthGuardService.html":{},"modules/LinesRoutingModule.html":{},"guards/MiniMapService.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/StopsRoutingModule.html":{}}}],["cancel",{"_index":797,"title":{},"body":{"components/BookingComponent.html":{}}}],["canceled",{"_index":718,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["capabilities",{"_index":3337,"title":{},"body":{"index.html":{}}}],["caret",{"_index":1909,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["carvepath",{"_index":1632,"title":{},"body":{"classes/LinesMap.html":{}}}],["carvepath(points",{"_index":1670,"title":{},"body":{"classes/LinesMap.html":{}}}],["case",{"_index":2601,"title":{},"body":{"components/SideNavComponent.html":{}}}],["catcherror",{"_index":180,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["catcherror((err",{"_index":96,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["catcherror(err",{"_index":51,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["center",{"_index":844,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["centered",{"_index":2970,"title":{},"body":{"components/ToasterComponent.html":{}}}],["centermap",{"_index":1639,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["change",{"_index":1916,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"index.html":{}}}],["changedelete",{"_index":691,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["changedirection",{"_index":1311,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["changemodule",{"_index":2322,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["changes",{"_index":572,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/StationListComponent.html":{}}}],["changevalue",{"_index":1595,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["changevalue(line",{"_index":1598,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["characters",{"_index":1903,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["check",{"_index":3341,"title":{},"body":{"index.html":{}}}],["checked",{"_index":2680,"title":{},"body":{"components/SliderComponent.html":{}}}],["checkurl",{"_index":1535,"title":{},"body":{"components/InputComponent.html":{}}}],["child(1",{"_index":2718,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(2",{"_index":2720,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["child(3",{"_index":2722,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["children",{"_index":1771,"title":{},"body":{"modules/LinesRoutingModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["choice",{"_index":3332,"title":{},"body":{"index.html":{}}}],["chunkedloading",{"_index":2889,"title":{},"body":{"classes/StopsMap.html":{}}}],["circle",{"_index":2617,"title":{},"body":{"components/SideNavComponent.html":{}}}],["circle_clockwise",{"_index":3052,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["circle_counterclockwise",{"_index":3054,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["city",{"_index":2575,"title":{},"body":{"components/SideNavComponent.html":{}}}],["citybus",{"_index":285,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["class",{"_index":211,"title":{"classes/CustomSerializer.html":{},"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["class=\"fas",{"_index":1967,"title":{},"body":{"components/MainInputComponent.html":{}}}],["classes",{"_index":1068,"title":{},"body":{"classes/CustomSerializer.html":{},"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{},"overview.html":{}}}],["clear",{"_index":1927,"title":{},"body":{"components/MainInputComponent.html":{},"interfaces/Notification.html":{}}}],["clearbuses",{"_index":1633,"title":{},"body":{"classes/LinesMap.html":{}}}],["clearlayergroup",{"_index":1634,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["clearlayers",{"_index":1223,"title":{},"body":{"injectables/DataShareService.html":{}}}],["clearline",{"_index":2323,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["clearmap",{"_index":1201,"title":{},"body":{"injectables/DataShareService.html":{},"components/MapAreaComponent.html":{}}}],["clearmapobserver",{"_index":1202,"title":{},"body":{"injectables/DataShareService.html":{}}}],["clearplan",{"_index":2324,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["clearpoint",{"_index":3133,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["clearpoint(direction",{"_index":3147,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["clearpoints",{"_index":3134,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["clearstate",{"_index":1882,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/RegisterComponent.html":{}}}],["clearstop",{"_index":2325,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["cli",{"_index":3303,"title":{},"body":{"index.html":{}}}],["click",{"_index":2745,"title":{},"body":{"components/StationEntityComponent.html":{},"components/ToasterComponent.html":{}}}],["click)=\"map",{"_index":1968,"title":{},"body":{"components/MainInputComponent.html":{}}}],["clicked",{"_index":1402,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["client",{"_index":2686,"title":{},"body":{"injectables/SocketIOService.html":{},"dependencies.html":{},"interfaces/msg.html":{}}}],["cluster_appmodule",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":402,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":400,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":401,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":399,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":618,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":620,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":621,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":619,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_linesmodule",{"_index":1736,"title":{},"body":{"modules/LinesModule.html":{},"overview.html":{}}}],["cluster_linesmodule_bootstrap",{"_index":1737,"title":{},"body":{"modules/LinesModule.html":{}}}],["cluster_linesmodule_declarations",{"_index":1738,"title":{},"body":{"modules/LinesModule.html":{},"overview.html":{}}}],["cluster_linesmodule_imports",{"_index":1739,"title":{},"body":{"modules/LinesModule.html":{},"overview.html":{}}}],["cluster_mapmodule",{"_index":2097,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_declarations",{"_index":2099,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_mapmodule_exports",{"_index":2098,"title":{},"body":{"modules/MapModule.html":{},"overview.html":{}}}],["cluster_plannermodule",{"_index":2235,"title":{},"body":{"modules/PlannerModule.html":{},"overview.html":{}}}],["cluster_plannermodule_declarations",{"_index":2237,"title":{},"body":{"modules/PlannerModule.html":{},"overview.html":{}}}],["cluster_plannermodule_imports",{"_index":2238,"title":{},"body":{"modules/PlannerModule.html":{},"overview.html":{}}}],["cluster_plannermodule_providers",{"_index":2236,"title":{},"body":{"modules/PlannerModule.html":{},"overview.html":{}}}],["cluster_savedmodule",{"_index":2454,"title":{},"body":{"modules/SavedModule.html":{},"overview.html":{}}}],["cluster_savedmodule_declarations",{"_index":2457,"title":{},"body":{"modules/SavedModule.html":{},"overview.html":{}}}],["cluster_savedmodule_imports",{"_index":2455,"title":{},"body":{"modules/SavedModule.html":{},"overview.html":{}}}],["cluster_savedmodule_providers",{"_index":2456,"title":{},"body":{"modules/SavedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":2496,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2498,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":2499,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_imports",{"_index":2497,"title":{},"body":{"modules/SharedModule.html":{}}}],["cluster_sidebarmodule",{"_index":2622,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_declarations",{"_index":2623,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_exports",{"_index":2624,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_imports",{"_index":2625,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_sidebarmodule_providers",{"_index":2626,"title":{},"body":{"modules/SidebarModule.html":{},"overview.html":{}}}],["cluster_stopsmodule",{"_index":2936,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_declarations",{"_index":2938,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["cluster_stopsmodule_imports",{"_index":2937,"title":{},"body":{"modules/StopsModule.html":{},"overview.html":{}}}],["clusters",{"_index":2883,"title":{},"body":{"classes/StopsMap.html":{}}}],["code",{"_index":554,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"components/SavedSliderComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"classes/StopsMap.html":{},"components/TripComponent.html":{},"index.html":{}}}],["code[0",{"_index":2448,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["code[1",{"_index":2452,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["codes",{"_index":131,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["color",{"_index":755,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["color:#2e3e51",{"_index":3112,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["column",{"_index":741,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["combinelatest",{"_index":945,"title":{},"body":{"components/BookingsComponent.html":{},"interfaces/CurrentRoute.html":{},"components/PlacesComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["command",{"_index":3333,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":625,"title":{},"body":{"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{}}}],["completed",{"_index":1344,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["component",{"_index":245,"title":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"modules/StopsRoutingModule.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"index.html":{}}}],["component'},{'name",{"_index":312,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["component_template",{"_index":309,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["components",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["components/book",{"_index":2262,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/booking/booking.component",{"_index":2264,"title":{},"body":{"modules/PlannerModule.html":{}}}],["components/bookings/bookings.component",{"_index":2263,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/bus",{"_index":2502,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/double",{"_index":2510,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/dropdown",{"_index":2508,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/input/input.component",{"_index":2241,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/lines",{"_index":1746,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{}}}],["components/list",{"_index":1748,"title":{},"body":{"modules/LinesModule.html":{}}}],["components/login/login.component",{"_index":627,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/main",{"_index":2505,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/map",{"_index":2101,"title":{},"body":{"modules/MapModule.html":{}}}],["components/mini",{"_index":2517,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/multiple",{"_index":2507,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/option/option.component",{"_index":2501,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/places",{"_index":2269,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/places/places.component",{"_index":2258,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/qr/qr.component",{"_index":2265,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/register/register.component",{"_index":628,"title":{},"body":{"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{}}}],["components/route",{"_index":1753,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{}}}],["components/saved",{"_index":2460,"title":{},"body":{"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{}}}],["components/select/select.component",{"_index":1743,"title":{},"body":{"modules/LinesModule.html":{}}}],["components/side",{"_index":2629,"title":{},"body":{"modules/SidebarModule.html":{}}}],["components/sidebar",{"_index":2631,"title":{},"body":{"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{}}}],["components/slider/slider.component",{"_index":1757,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{}}}],["components/spinner/spinner.component",{"_index":2511,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/station",{"_index":1758,"title":{},"body":{"modules/LinesModule.html":{},"modules/SharedModule.html":{}}}],["components/stop",{"_index":2242,"title":{},"body":{"modules/PlannerModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["components/stops",{"_index":2942,"title":{},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["components/stops/stops.component",{"_index":2941,"title":{},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["components/trip",{"_index":2250,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["components/trip/trip.component",{"_index":2253,"title":{},"body":{"modules/PlannerModule.html":{}}}],["componentstore",{"_index":673,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["concatlatestfrom",{"_index":177,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["concatlatestfrom((action",{"_index":103,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["confirm(\"can't",{"_index":2831,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["confirm('invalid",{"_index":1896,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log('invalid",{"_index":2298,"title":{},"body":{"components/RegisterComponent.html":{}}}],["console.log(data.msg",{"_index":2692,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["console.log(error",{"_index":1343,"title":{},"body":{"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["const",{"_index":471,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"pipes/FilterPipe.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"classes/LinesMap.html":{},"modules/LinesRoutingModule.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"interfaces/Notification.html":{},"components/RegisterComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SideNavComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"classes/StopsMap.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["constructor",{"_index":27,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["constructor(actions",{"_index":587,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["constructor(auth",{"_index":607,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(data",{"_index":988,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["constructor(dataservice",{"_index":28,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/LiveDataStore.html":{},"injectables/StopsStore.html":{}}}],["constructor(datashare",{"_index":1006,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["constructor(http",{"_index":1103,"title":{},"body":{"injectables/DataService.html":{}}}],["constructor(io",{"_index":271,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(local",{"_index":922,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["constructor(localstore",{"_index":2227,"title":{},"body":{"components/PlacesSliderComponent.html":{},"components/SliderComponent.html":{}}}],["constructor(location",{"_index":2334,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["constructor(map",{"_index":1643,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["constructor(msg",{"_index":2532,"title":{},"body":{"components/SideNavComponent.html":{}}}],["constructor(private",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"interfaces/LiveState-1.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SidebarOptionsComponent.html":{},"injectables/SocketIOService.html":{},"components/StationListComponent.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["constructor(route",{"_index":2173,"title":{},"body":{"components/PlacesComponent.html":{}}}],["constructor(router",{"_index":729,"title":{},"body":{"components/BookOptionsComponent.html":{},"injectables/DirectionsStore.html":{},"components/LinesDropdownComponent.html":{},"components/SidebarOptionsComponent.html":{}}}],["constructor(store",{"_index":1403,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["container",{"_index":851,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["content",{"_index":296,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["context",{"_index":3013,"title":{},"body":{"components/TripComponent.html":{}}}],["continue",{"_index":3060,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["contributors",{"_index":2090,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["coords",{"_index":1997,"title":{},"body":{"classes/Map.html":{},"components/StopDropDownComponent.html":{}}}],["coords.latitude",{"_index":2824,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["coords.longitude",{"_index":2825,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["copy",{"_index":2088,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["cover",{"_index":2593,"title":{},"body":{"components/SideNavComponent.html":{}}}],["createaction",{"_index":2123,"title":{},"body":{"interfaces/Notification.html":{}}}],["createaction('[auth",{"_index":2127,"title":{},"body":{"interfaces/Notification.html":{}}}],["createeffect",{"_index":41,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["createentityadapter",{"_index":784,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["createfeatureselector",{"_index":2124,"title":{},"body":{"interfaces/Notification.html":{}}}],["createfeatureselector('auth",{"_index":2133,"title":{},"body":{"interfaces/Notification.html":{}}}],["createmarker",{"_index":1640,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["createmarker(x",{"_index":1683,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["createpolyline",{"_index":1641,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["createpolyline(path",{"_index":1688,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["createreducer",{"_index":490,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Notification.html":{}}}],["createselector",{"_index":2125,"title":{},"body":{"interfaces/Notification.html":{}}}],["createselector(getnotificationstate",{"_index":2134,"title":{},"body":{"interfaces/Notification.html":{}}}],["credentials",{"_index":1141,"title":{},"body":{"injectables/DataService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cubic",{"_index":2713,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["current",{"_index":1850,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["currentline",{"_index":1043,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SliderComponent.html":{}}}],["currentroute",{"_index":1035,"title":{"interfaces/CurrentRoute.html":{}},"body":{"interfaces/CurrentRoute.html":{},"components/LinesDropdownComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/RouteDetailsComponent.html":{},"components/StationListComponent.html":{},"injectables/StopsStore.html":{}}}],["currentroutestops",{"_index":2751,"title":{},"body":{"components/StationListComponent.html":{}}}],["currentstop",{"_index":2884,"title":{},"body":{"classes/StopsMap.html":{}}}],["cursor",{"_index":839,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["custom",{"_index":2226,"title":{},"body":{"components/PlacesSliderComponent.html":{}}}],["custom(value",{"_index":2229,"title":{},"body":{"components/PlacesSliderComponent.html":{}}}],["custom>button",{"_index":3032,"title":{},"body":{"components/TripComponent.html":{}}}],["customserializer",{"_index":450,"title":{"classes/CustomSerializer.html":{}},"body":{"modules/AppModule.html":{},"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["data",{"_index":62,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"classes/LinesMap.html":{},"modules/LinesRoutingModule.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/QrComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"injectables/SocketIOService.html":{},"components/StopDropDownComponent.html":{},"components/TripComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["data(user",{"_index":2279,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["data.desc",{"_index":2118,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["data.destination.length",{"_index":3179,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["data.destination[0",{"_index":3167,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["data.destination[3",{"_index":3181,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["data.filter((b",{"_index":909,"title":{},"body":{"pipes/BookingPipe.html":{}}}],["data.filter((piece",{"_index":1484,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["data.name",{"_index":2119,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["data.start.length",{"_index":3172,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["data.start[0",{"_index":3165,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["data.start[3",{"_index":3174,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["data.stop",{"_index":2852,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["data.trip_ids",{"_index":2696,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["data.value",{"_index":2695,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["data[0",{"_index":2651,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["data[1",{"_index":2652,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["dataservice",{"_index":29,"title":{"injectables/DataService.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"modules/SavedModule.html":{},"injectables/StopsStore.html":{},"classes/TripPlannerMap.html":{},"overview.html":{}}}],["datashare",{"_index":1008,"title":{},"body":{"components/BusEntityComponent.html":{},"components/ListItemComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{}}}],["datashareservice",{"_index":924,"title":{"injectables/DataShareService.html":{}},"body":{"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataShareService.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{},"overview.html":{}}}],["date",{"_index":1363,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["date().gethours",{"_index":1380,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["date().getminutes",{"_index":1381,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["datepicker",{"_index":1914,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["day",{"_index":1203,"title":{},"body":{"injectables/DataShareService.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"components/ListItemComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{}}}],["dayobserver",{"_index":1204,"title":{},"body":{"injectables/DataShareService.html":{}}}],["dayseng",{"_index":2476,"title":{},"body":{"components/SelectComponent.html":{}}}],["db1de3",{"_index":1436,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["dec",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["dec.email",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{}}}],["dec.name",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["deca\",sans",{"_index":760,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["declarations",{"_index":410,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{}}}],["decode",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["decorators",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/TripDetailsComponent.html":{}}}],["deep",{"_index":869,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["default",{"_index":39,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{}}}],["defaulttrip",{"_index":1512,"title":{},"body":{"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["defined",{"_index":32,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["del",{"_index":1022,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["delay",{"_index":1002,"title":{},"body":{"components/BusEntityComponent.html":{},"components/SpinnerComponent.html":{},"components/TripDetailsComponent.html":{}}}],["delay(ar",{"_index":1011,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["delay(bus.departuremins",{"_index":1030,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["delete_id",{"_index":683,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["deletebooking",{"_index":710,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{}}}],["deletebooking(booking",{"_index":1108,"title":{},"body":{"injectables/DataService.html":{}}}],["deletecomplete",{"_index":687,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["deleteroute",{"_index":9,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["deleteroute(code",{"_index":1110,"title":{},"body":{"injectables/DataService.html":{}}}],["deletestop",{"_index":10,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["deletestop(code",{"_index":1112,"title":{},"body":{"injectables/DataService.html":{}}}],["dep",{"_index":1012,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["depart",{"_index":1382,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["departure",{"_index":1574,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripDetailsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["departure_board",{"_index":2648,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["departuredelay",{"_index":1555,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["departuremins",{"_index":1491,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}}}],["departures",{"_index":1032,"title":{},"body":{"components/BusEntityComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{}}}],["departureseconds",{"_index":1492,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}}}],["dependencies",{"_index":397,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":1501,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/OptionComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"components/SidebarOptionsComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/TripDetailsComponent.html":{}}}],["desc_eng",{"_index":1502,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["description",{"_index":846,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/OptionComponent.html":{},"components/StationEntityComponent.html":{},"components/TripDetailsComponent.html":{}}}],["dest",{"_index":1370,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/PlacesComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules/RoutesRoutingModule.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["dest_marker",{"_index":1630,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["destination",{"_index":1354,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"interfaces/TripState.html":{}}}],["details",{"_index":1049,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StationListComponent.html":{},"components/TripDetailsComponent.html":{}}}],["details'},{'name",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["details.component",{"_index":1754,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["details.component.css",{"_index":1051,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/TripDetailsComponent.html":{}}}],["details.component.html",{"_index":1050,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/TripDetailsComponent.html":{}}}],["details.component.ts",{"_index":1038,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/TripDetailsComponent.html":{}}}],["details.component.ts:17",{"_index":3073,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:18",{"_index":3072,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:20",{"_index":3065,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:27",{"_index":2302,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:28",{"_index":3071,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:34",{"_index":3039,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:36",{"_index":2304,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:42",{"_index":3044,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:50",{"_index":3042,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:52",{"_index":2303,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:54",{"_index":3043,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:56",{"_index":2306,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:60",{"_index":2305,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details.component.ts:61",{"_index":3040,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["details.component.ts:64",{"_index":2308,"title":{},"body":{"components/RouteDetailsComponent.html":{}}}],["details/route",{"_index":1037,"title":{},"body":{"interfaces/CurrentRoute.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/RouteDetailsComponent.html":{}}}],["details/trip",{"_index":2257,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"components/TripDetailsComponent.html":{}}}],["dev",{"_index":3309,"title":{},"body":{"index.html":{}}}],["development",{"_index":3305,"title":{},"body":{"index.html":{}}}],["device",{"_index":2833,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["devtools",{"_index":439,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["dictionary",{"_index":485,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["different",{"_index":2604,"title":{},"body":{"components/SideNavComponent.html":{}}}],["direction",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"miscellaneous/functions.html":{}}}],["directions",{"_index":2644,"title":{},"body":{"components/SidebarOptionsComponent.html":{},"components/TripDetailsComponent.html":{},"dependencies.html":{}}}],["directions[step.relativedirection",{"_index":3087,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["directionsstore",{"_index":923,"title":{"injectables/DirectionsStore.html":{}},"body":{"components/BookingsComponent.html":{},"injectables/DirectionsStore.html":{},"components/InputComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/StopDropDownComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"overview.html":{}}}],["directive",{"_index":307,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["directives",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3318,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3322,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":1399,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/MainInputComponent.html":{}}}],["dispatch",{"_index":595,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["dispatchbooking",{"_index":695,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["display",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["displaybuslocations",{"_index":1635,"title":{},"body":{"classes/LinesMap.html":{}}}],["displaybuslocations(buses",{"_index":1674,"title":{},"body":{"classes/LinesMap.html":{}}}],["displayitinerary",{"_index":3135,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["displayitinerary(it",{"_index":3150,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["displayrouteinfo",{"_index":1636,"title":{},"body":{"classes/LinesMap.html":{}}}],["displayrouteinfo(data",{"_index":1676,"title":{},"body":{"classes/LinesMap.html":{}}}],["displaystops",{"_index":1637,"title":{},"body":{"classes/LinesMap.html":{}}}],["displaystops(stops",{"_index":1678,"title":{},"body":{"classes/LinesMap.html":{}}}],["dist",{"_index":3116,"title":{},"body":{"components/TripDetailsComponent.html":{},"index.html":{}}}],["distance",{"_index":1566,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["distinctuntilchanged",{"_index":1377,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["distx",{"_index":2571,"title":{},"body":{"components/SideNavComponent.html":{}}}],["div",{"_index":2709,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["div:nth",{"_index":2717,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["dom",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["dots",{"_index":1933,"title":{},"body":{"components/MainInputComponent.html":{}}}],["double",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["doubleinputcomponent",{"_index":321,"title":{"components/DoubleInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["down",{"_index":3029,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["down.component",{"_index":2245,"title":{},"body":{"modules/PlannerModule.html":{}}}],["down.component.css",{"_index":2790,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.html",{"_index":2791,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts",{"_index":2789,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:22",{"_index":2809,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:23",{"_index":2808,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:25",{"_index":2796,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:26",{"_index":2795,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:35",{"_index":2799,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:48",{"_index":2806,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:52",{"_index":2805,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:56",{"_index":2800,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:61",{"_index":2802,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:67",{"_index":2807,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:72",{"_index":2804,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down.component.ts:80",{"_index":2797,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["down/stop",{"_index":2244,"title":{},"body":{"modules/PlannerModule.html":{},"components/StopDropDownComponent.html":{}}}],["dragdropmodule",{"_index":2634,"title":{},"body":{"modules/SidebarModule.html":{}}}],["dragend",{"_index":1205,"title":{},"body":{"injectables/DataShareService.html":{},"components/SideNavComponent.html":{}}}],["dragend($e",{"_index":2536,"title":{},"body":{"components/SideNavComponent.html":{}}}],["dragendobserver",{"_index":1206,"title":{},"body":{"injectables/DataShareService.html":{}}}],["draggable",{"_index":1685,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["dragoff",{"_index":1224,"title":{},"body":{"injectables/DataShareService.html":{},"classes/TripPlannerMap.html":{}}}],["dragposition",{"_index":2525,"title":{},"body":{"components/SideNavComponent.html":{}}}],["dragstart",{"_index":1207,"title":{},"body":{"injectables/DataShareService.html":{}}}],["dragstartobserver",{"_index":1208,"title":{},"body":{"injectables/DataShareService.html":{}}}],["drop",{"_index":2243,"title":{},"body":{"modules/PlannerModule.html":{},"modules/SidebarModule.html":{},"components/StopDropDownComponent.html":{}}}],["dropdown",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["dropdown'},{'name",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["dropdown.component",{"_index":1747,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["dropdown.component.css",{"_index":1593,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.html",{"_index":1594,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts",{"_index":1592,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:10",{"_index":2113,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:11",{"_index":2114,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:12",{"_index":2112,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:13",{"_index":2111,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:17",{"_index":2115,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:19",{"_index":1597,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{}}}],["dropdown.component.ts:23",{"_index":1600,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["dropdown.component.ts:27",{"_index":1599,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["dropdown.component.ts:31",{"_index":1602,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["dropdown.component.ts:35",{"_index":1605,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["dropdown/lines",{"_index":1591,"title":{},"body":{"components/LinesDropdownComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{}}}],["dropdown/multiple",{"_index":1752,"title":{},"body":{"modules/LinesModule.html":{},"components/MultipleDropdownComponent.html":{},"modules/SharedModule.html":{}}}],["dropdownoptioncomponent",{"_index":324,"title":{"components/DropdownOptionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["duration",{"_index":891,"title":{},"body":{"components/BookingComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"components/OptionComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"components/SideNavComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["dynamic",{"_index":3254,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1462,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"classes/StopsMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["e2e",{"_index":3330,"title":{},"body":{"index.html":{}}}],["effectsmodule",{"_index":433,"title":{},"body":{"modules/AppModule.html":{}}}],["effectsmodule.forroot([apieffects",{"_index":460,"title":{},"body":{"modules/AppModule.html":{}}}],["el",{"_index":2526,"title":{},"body":{"components/SideNavComponent.html":{},"components/StationListComponent.html":{}}}],["element",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["elements",{"_index":2605,"title":{},"body":{"components/SideNavComponent.html":{}}}],["elevation",{"_index":3024,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["email",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["enabledrag",{"_index":3136,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["enabledrag(data",{"_index":3153,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["end",{"_index":775,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"index.html":{}}}],["end.length",{"_index":3237,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["endplaceholder",{"_index":1400,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["endstop",{"_index":776,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["endtime",{"_index":1556,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["endvalue",{"_index":1358,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["ensure",{"_index":613,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["entire",{"_index":1085,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["entities/booking.entity",{"_index":207,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{}}}],["entities/itinerary",{"_index":206,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{}}}],["entities/line.entity",{"_index":202,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{}}}],["entities/route.entity",{"_index":203,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{}}}],["entities/schedule.entity",{"_index":204,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{}}}],["entities/stop.entity",{"_index":205,"title":{},"body":{"injectables/ApiEffects.html":{},"interfaces/AppState.html":{}}}],["entity",{"_index":825,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["entity'},{'name",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["entity.component",{"_index":2503,"title":{},"body":{"modules/SharedModule.html":{}}}],["entity.component.css",{"_index":1000,"title":{},"body":{"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["entity.component.html",{"_index":1001,"title":{},"body":{"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["entity.component.ts",{"_index":999,"title":{},"body":{"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["entity.component.ts:15",{"_index":1010,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["entity.component.ts:16",{"_index":1007,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["entity.component.ts:20",{"_index":1015,"title":{},"body":{"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["entity.component.ts:22",{"_index":1017,"title":{},"body":{"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["entity.component.ts:23",{"_index":2730,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["entity.component.ts:26",{"_index":1013,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["entity.component.ts:30",{"_index":2733,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["entity.component.ts:34",{"_index":2734,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["entity.component.ts:38",{"_index":2732,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["entity/bus",{"_index":998,"title":{},"body":{"components/BusEntityComponent.html":{},"modules/SharedModule.html":{}}}],["entity/station",{"_index":2504,"title":{},"body":{"modules/SharedModule.html":{},"components/StationEntityComponent.html":{}}}],["entityadapter",{"_index":782,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["entitystate",{"_index":783,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["environment",{"_index":440,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":465,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":441,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":53,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["err.error",{"_index":89,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["err.error.error",{"_index":79,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["error",{"_index":708,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"injectables/StopsStore.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["error(err",{"_index":1172,"title":{},"body":{"injectables/DataService.html":{}}}],["errors",{"_index":1870,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["errors(value",{"_index":1873,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["even",{"_index":1345,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["event",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["eventemitter",{"_index":802,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{}}}],["execute",{"_index":3327,"title":{},"body":{"index.html":{}}}],["expanded",{"_index":3026,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["expansion",{"_index":883,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["export",{"_index":210,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}}}],["exports",{"_index":473,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesRoutingModule.html":{},"modules/MapModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsRoutingModule.html":{}}}],["express",{"_index":3277,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":685,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"classes/LinesMap.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"classes/StopsMap.html":{},"injectables/StopsStore.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["f7f8fe",{"_index":1442,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{}}}],["fa",{"_index":897,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["fab.mat",{"_index":875,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["fadein",{"_index":2977,"title":{},"body":{"components/ToasterComponent.html":{}}}],["fadeout",{"_index":2976,"title":{},"body":{"components/ToasterComponent.html":{}}}],["fails",{"_index":1346,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["false",{"_index":295,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"classes/StopsMap.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["family",{"_index":758,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["fetch",{"_index":1333,"title":{},"body":{"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["fetcharrivals",{"_index":1813,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["fetchbuslocations",{"_index":1814,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["fetchcomplete",{"_index":1312,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["fetched",{"_index":3117,"title":{},"body":{"components/TripListComponent.html":{}}}],["fetchlineroutes",{"_index":2326,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["fetchlines",{"_index":2327,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["fetchplan",{"_index":1313,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["fetchroutedetails",{"_index":2328,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["fetchstoproutes",{"_index":2329,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["fetchstops",{"_index":2330,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["ff726f",{"_index":3196,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["fff",{"_index":2711,"title":{},"body":{"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{}}}],["field",{"_index":631,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["field'},{'name",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["fields",{"_index":1897,"title":{},"body":{"components/LoginComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}}}],["file_present",{"_index":2650,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["files",{"_index":3314,"title":{},"body":{"index.html":{}}}],["fill",{"_index":1920,"title":{},"body":{"components/LoginComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{}}}],["filter",{"_index":181,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"pipes/FilterPipe.html":{},"components/LinesDropdownComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/MapAreaComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/StopsComponent.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["filter(([action",{"_index":105,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["filter((line",{"_index":1837,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["filter((stop",{"_index":1828,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["filter(({data",{"_index":61,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["filter(({params",{"_index":2360,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["filter(booking",{"_index":714,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["filter(buses",{"_index":2051,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["filter(point",{"_index":2063,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["filter(state",{"_index":698,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["filter(stop",{"_index":2058,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["filter(v",{"_index":2069,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["filter(value",{"_index":927,"title":{},"body":{"components/BookingsComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/StopsComponent.html":{}}}],["filterbookings",{"_index":950,"title":{},"body":{"components/BookingsComponent.html":{}}}],["filterlines",{"_index":1610,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["filterpipe",{"_index":1480,"title":{"pipes/FilterPipe.html":{}},"body":{"pipes/FilterPipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["filterstops",{"_index":2875,"title":{},"body":{"components/StopsComponent.html":{}}}],["find",{"_index":2645,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["first",{"_index":3335,"title":{},"body":{"index.html":{}}}],["fixed",{"_index":2588,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["flag",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"injectables/DataShareService.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{}}}],["flat",{"_index":871,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["flex",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["fly",{"_index":1225,"title":{},"body":{"injectables/DataShareService.html":{}}}],["fly(point",{"_index":1238,"title":{},"body":{"injectables/DataShareService.html":{}}}],["flytostop",{"_index":2728,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["flytostop(point",{"_index":2731,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["focus",{"_index":3036,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["focus(x",{"_index":3041,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["focused",{"_index":1915,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["focusonpath",{"_index":1642,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["focusonpath(p1",{"_index":1691,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["focusonpoint",{"_index":1638,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["focusonpoint(point",{"_index":1680,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["font",{"_index":757,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["form",{"_index":1907,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["formcontrol",{"_index":1880,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["formcontrol(state.date",{"_index":3230,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["formcontrol(state.time",{"_index":3231,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["formgroup",{"_index":1878,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["formsmodule",{"_index":418,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{}}}],["friday",{"_index":2488,"title":{},"body":{"components/SelectComponent.html":{}}}],["from'../../../../state/actions/navigation.actions",{"_index":1608,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/StationEntityComponent.html":{}}}],["from'../actions/navigation.actions",{"_index":2409,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["full",{"_index":2592,"title":{},"body":{"components/SideNavComponent.html":{}}}],["functions",{"_index":3293,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":3338,"title":{},"body":{"index.html":{}}}],["gap",{"_index":817,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["generate",{"_index":3316,"title":{},"body":{"index.html":{}}}],["generated",{"_index":3301,"title":{},"body":{"index.html":{}}}],["geocoder",{"_index":3272,"title":{},"body":{"dependencies.html":{}}}],["getactivebooking",{"_index":2274,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["getactiverouteschedules",{"_index":193,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["getactivestop",{"_index":1044,"title":{},"body":{"interfaces/CurrentRoute.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/MapAreaComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{}}}],["getallbookings",{"_index":194,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["getalllines",{"_index":1090,"title":{},"body":{"injectables/DataService.html":{}}}],["getallstops",{"_index":195,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/DataService.html":{},"components/MapAreaComponent.html":{},"components/StopDropDownComponent.html":{}}}],["getarrivalstate",{"_index":1817,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["getauthenticated",{"_index":2307,"title":{},"body":{"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"components/StopSliderComponent.html":{}}}],["getbookingplan",{"_index":1091,"title":{},"body":{"injectables/DataService.html":{}}}],["getbookingplan(payload",{"_index":1116,"title":{},"body":{"injectables/DataService.html":{}}}],["getbookings",{"_index":1092,"title":{},"body":{"injectables/DataService.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["getbuslocations",{"_index":1818,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["getbusstate",{"_index":1819,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["getdailyschedule",{"_index":1791,"title":{},"body":{"components/ListItemComponent.html":{}}}],["getdate",{"_index":2986,"title":{},"body":{"components/TripComponent.html":{}}}],["getendvalue",{"_index":1323,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["getfilteredroutes",{"_index":1093,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteredroutes(payload",{"_index":1120,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteredstops",{"_index":1094,"title":{},"body":{"injectables/DataService.html":{}}}],["getfilteredstops(code",{"_index":1122,"title":{},"body":{"injectables/DataService.html":{}}}],["getgetdate",{"_index":2997,"title":{},"body":{"components/TripComponent.html":{}}}],["getitinerary",{"_index":951,"title":{},"body":{"components/BookingsComponent.html":{}}}],["getlineroutes",{"_index":1095,"title":{},"body":{"injectables/DataService.html":{}}}],["getlineroutes(id",{"_index":1124,"title":{},"body":{"injectables/DataService.html":{}}}],["getliveupdates",{"_index":1096,"title":{},"body":{"injectables/DataService.html":{}}}],["getliveupdates(code",{"_index":1126,"title":{},"body":{"injectables/DataService.html":{}}}],["getmsg",{"_index":1883,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/RegisterComponent.html":{}}}],["getnames",{"_index":1324,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["getnotificationstate",{"_index":2132,"title":{},"body":{"interfaces/Notification.html":{},"components/RegisterComponent.html":{}}}],["getoccupancy",{"_index":3122,"title":{},"body":{"components/TripListComponent.html":{}}}],["getplan",{"_index":1097,"title":{},"body":{"injectables/DataService.html":{}}}],["getplan(payload",{"_index":1128,"title":{},"body":{"injectables/DataService.html":{}}}],["getplanstate",{"_index":3123,"title":{},"body":{"components/TripListComponent.html":{}}}],["getposition",{"_index":2792,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["getroutedetails",{"_index":1098,"title":{},"body":{"injectables/DataService.html":{}}}],["getroutedetails(code",{"_index":1130,"title":{},"body":{"injectables/DataService.html":{}}}],["getroutelist",{"_index":2842,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["getroutepathandstops",{"_index":2031,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["getroutesbystop",{"_index":1099,"title":{},"body":{"injectables/DataService.html":{}}}],["getroutesbystop(code",{"_index":1132,"title":{},"body":{"injectables/DataService.html":{}}}],["getrouteschedules",{"_index":1100,"title":{},"body":{"injectables/DataService.html":{}}}],["getrouteschedules(code",{"_index":1134,"title":{},"body":{"injectables/DataService.html":{}}}],["getroutestops",{"_index":2770,"title":{},"body":{"components/StationListComponent.html":{}}}],["getsavedinfo",{"_index":196,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["getsavedroutecodes",{"_index":197,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["getsavedroutes",{"_index":1101,"title":{},"body":{"injectables/DataService.html":{}}}],["getsavedstopcodes",{"_index":198,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["getsavedstops",{"_index":1102,"title":{},"body":{"injectables/DataService.html":{},"components/StopDropDownComponent.html":{}}}],["getstartvalue",{"_index":1325,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["getstate",{"_index":2410,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["getstoparrivals",{"_index":1820,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["getstoplines",{"_index":2843,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["getstopsmodule",{"_index":2032,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["gettext",{"_index":1326,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["getting",{"_index":3298,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":2553,"title":{},"body":{"components/SideNavComponent.html":{}}}],["getuserinfo",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["gl",{"_index":3258,"title":{},"body":{"dependencies.html":{}}}],["go",{"_index":2653,"title":{},"body":{"components/SidebarOptionsComponent.html":{},"index.html":{}}}],["goback",{"_index":1928,"title":{},"body":{"components/MainInputComponent.html":{}}}],["grad",{"_index":2162,"title":{},"body":{"components/OptionComponent.html":{}}}],["gradient(90deg",{"_index":829,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["graph",{"_index":3347,"title":{},"body":{"modules.html":{}}}],["grey",{"_index":3247,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["grid",{"_index":1978,"title":{},"body":{"components/MainInputComponent.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{}}}],["group",{"_index":2863,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["guard",{"_index":601,"title":{"guards/AuthGuardService.html":{},"guards/MiniMapService.html":{}},"body":{}}],["guard.service",{"_index":642,"title":{},"body":{"modules/AuthModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SidebarRoutingModule.html":{}}}],["guard.service.ts",{"_index":605,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:13",{"_index":610,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guard.service.ts:8",{"_index":609,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":603,"title":{},"body":{"guards/AuthGuardService.html":{},"guards/MiniMapService.html":{},"overview.html":{}}}],["h1",{"_index":751,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["hard_left",{"_index":3061,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["hard_right",{"_index":3063,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["header",{"_index":865,"title":{},"body":{"components/BookingComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["header.mat",{"_index":3025,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["header:hover",{"_index":2613,"title":{},"body":{"components/SideNavComponent.html":{}}}],["headers",{"_index":1163,"title":{},"body":{"injectables/DataService.html":{}}}],["headers.append('content",{"_index":1164,"title":{},"body":{"injectables/DataService.html":{}}}],["heading",{"_index":3089,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["height",{"_index":745,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["help",{"_index":3339,"title":{},"body":{"index.html":{}}}],["helvetica",{"_index":822,"title":{},"body":{"components/BookingComponent.html":{},"components/SideNavComponent.html":{}}}],["hh/mm/am",{"_index":3241,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["hidden",{"_index":2591,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["hide",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["hint",{"_index":1913,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["home",{"_index":2528,"title":{},"body":{"components/SideNavComponent.html":{}}}],["host",{"_index":737,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["host:hover",{"_index":2153,"title":{},"body":{"components/OptionComponent.html":{},"components/TripComponent.html":{}}}],["hostlistener",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["hostlistener('window:resize",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["hostlisteners",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["hover",{"_index":2607,"title":{},"body":{"components/SideNavComponent.html":{}}}],["html",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["http",{"_index":1105,"title":{},"body":{"injectables/DataService.html":{}}}],["http://localhost:3000",{"_index":1151,"title":{},"body":{"injectables/DataService.html":{}}}],["http://localhost:3000/live",{"_index":1149,"title":{},"body":{"injectables/DataService.html":{}}}],["http://localhost:4200",{"_index":3310,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":434,"title":{},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{}}}],["httpclientmodule",{"_index":423,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":677,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["httpheaders",{"_index":1153,"title":{},"body":{"injectables/DataService.html":{}}}],["iarrival",{"_index":1009,"title":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}},"body":{"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/RouteDetailsComponent.html":{},"components/StationEntityComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{}}}],["icon",{"_index":859,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StationEntityComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["icon.png",{"_index":1652,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["icons",{"_index":1972,"title":{},"body":{"components/MainInputComponent.html":{},"components/StationEntityComponent.html":{}}}],["iconsize",{"_index":1653,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["id",{"_index":570,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/DataService.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["if(!data",{"_index":906,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{},"classes/LinesMap.html":{}}}],["if(!it",{"_index":3191,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["if(!piece",{"_index":1485,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["if(!point",{"_index":2916,"title":{},"body":{"classes/StopsMap.html":{}}}],["if(!this.credentials.valid",{"_index":1895,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["if(!this.disabled",{"_index":1421,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["if(!this.el",{"_index":2771,"title":{},"body":{"components/StationListComponent.html":{}}}],["if($e.type",{"_index":2565,"title":{},"body":{"components/SideNavComponent.html":{}}}],["if(data.direction",{"_index":3164,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["if(date",{"_index":1364,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["if(del",{"_index":1023,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["if(direction",{"_index":2208,"title":{},"body":{"components/PlacesComponent.html":{},"classes/TripPlannerMap.html":{}}}],["if(distx",{"_index":2573,"title":{},"body":{"components/SideNavComponent.html":{}}}],["if(leg.from.vertextype",{"_index":3197,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["if(leg.mode",{"_index":3195,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["if(leg.to.vertextype",{"_index":3201,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["if(navigator",{"_index":2828,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["if(p1",{"_index":2005,"title":{},"body":{"classes/Map.html":{}}}],["if(points.length",{"_index":1704,"title":{},"body":{"classes/LinesMap.html":{}}}],["if(query!['module",{"_index":2396,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["if(route",{"_index":1853,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["if(state.destination.length",{"_index":1389,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["if(state.direction",{"_index":1367,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["if(state.start.length",{"_index":1348,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["if(stop",{"_index":2878,"title":{},"body":{"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["if(stops.length",{"_index":2906,"title":{},"body":{"classes/StopsMap.html":{}}}],["if(this.currentstop",{"_index":2914,"title":{},"body":{"classes/StopsMap.html":{}}}],["if(this.direction",{"_index":2211,"title":{},"body":{"components/PlacesComponent.html":{}}}],["if(this.maplink.length",{"_index":1961,"title":{},"body":{"components/MainInputComponent.html":{}}}],["if(this.saved",{"_index":2814,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["if(this.tripoptions.valid",{"_index":3235,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["if(this.value",{"_index":2204,"title":{},"body":{"components/PlacesComponent.html":{}}}],["if(url.includes('dest",{"_index":2392,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["if(url.includes('module=trip_details",{"_index":1550,"title":{},"body":{"components/InputComponent.html":{}}}],["if(url.includes('module=trip_map",{"_index":1551,"title":{},"body":{"components/InputComponent.html":{}}}],["if(url.includes('module=trips",{"_index":1548,"title":{},"body":{"components/InputComponent.html":{}}}],["if(url.startswith('/(sidebar:lines",{"_index":2342,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["if(url.startswith('/(sidebar:routes",{"_index":2343,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["if(url.startswith('/(sidebar:stops",{"_index":2341,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["if(window.innerwidth",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"guards/MiniMapService.html":{},"components/StopDropDownComponent.html":{},"components/TripDetailsComponent.html":{}}}],["iline",{"_index":94,"title":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/RouteListComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"injectables/StopsStore.html":{}}}],["imapdata",{"_index":1508,"title":{"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{}},"body":{"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"classes/LinesMap.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["img",{"_index":889,"title":{},"body":{"components/BookingComponent.html":{}}}],["img:hover",{"_index":895,"title":{},"body":{"components/BookingComponent.html":{}}}],["implements",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"index.html":{}}}],["import",{"_index":174,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}}}],["import('../auth/auth.module').then(m",{"_index":2666,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["import('../lines/lines.module').then(m",{"_index":2662,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["import('../planner/planner.module').then(m",{"_index":2664,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["import('../saved/saved.module').then(m",{"_index":2668,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["import('../stops/stops.module').then(m",{"_index":2659,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["important",{"_index":858,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["imports",{"_index":412,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["including",{"_index":1082,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["incoming",{"_index":861,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"miscellaneous/functions.html":{},"interfaces/msg.html":{}}}],["infinite",{"_index":2716,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}}}],["info!.it)).pipe",{"_index":703,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["information",{"_index":2641,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["inherit",{"_index":1438,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["inherited",{"_index":1655,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["init",{"_index":2924,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["init(stop",{"_index":2926,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["initbooking",{"_index":693,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["initfetch",{"_index":1314,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["initialappstate",{"_index":504,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["initialbookingstate",{"_index":501,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["initialnotification",{"_index":2126,"title":{},"body":{"interfaces/Notification.html":{}}}],["initialstate",{"_index":1350,"title":{},"body":{"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["inititiallinestate",{"_index":491,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["inititialroutestate",{"_index":493,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["inititialschdedulestate",{"_index":498,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["inititialstopstate",{"_index":495,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["initmap",{"_index":2020,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["initmap(map",{"_index":2023,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["initstore",{"_index":2170,"title":{},"body":{"components/PlacesComponent.html":{}}}],["initstore(direction",{"_index":2176,"title":{},"body":{"components/PlacesComponent.html":{}}}],["initvalue",{"_index":2168,"title":{},"body":{"components/PlacesComponent.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"injectables/SocketIOService.html":{},"injectables/StopsStore.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"guards/MiniMapService.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"injectables/SocketIOService.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"injectables/SocketIOService.html":{},"injectables/StopsStore.html":{},"overview.html":{}}}],["ink",{"_index":2214,"title":{},"body":{"components/PlacesComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{}}}],["inline",{"_index":2706,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["inner",{"_index":1974,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/TripComponent.html":{}}}],["inotification",{"_index":1514,"title":{"interfaces/INotification.html":{},"interfaces/INotification-1.html":{}},"body":{"interfaces/INotification.html":{},"interfaces/INotification-1.html":{}}}],["input",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["input'},{'name",{"_index":323,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["input.component",{"_index":2506,"title":{},"body":{"modules/SharedModule.html":{}}}],["input.component.css",{"_index":1397,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.html",{"_index":1398,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts",{"_index":1396,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts:13",{"_index":1409,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["input.component.ts:14",{"_index":1406,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["input.component.ts:15",{"_index":1405,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts:16",{"_index":1410,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["input.component.ts:17",{"_index":1408,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts:18",{"_index":1944,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:19",{"_index":1411,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts:20",{"_index":1404,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts:21",{"_index":1940,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:22",{"_index":1942,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:23",{"_index":1941,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:24",{"_index":1413,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["input.component.ts:25",{"_index":1939,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:26",{"_index":1943,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:27",{"_index":1412,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["input.component.ts:28",{"_index":1945,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:29",{"_index":1946,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:30",{"_index":1938,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:31",{"_index":1416,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["input.component.ts:35",{"_index":1415,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["input.component.ts:38",{"_index":1951,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:42",{"_index":1954,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:46",{"_index":1948,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:51",{"_index":1949,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:55",{"_index":1955,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:59",{"_index":1953,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:63",{"_index":1952,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:67",{"_index":1950,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input.component.ts:76",{"_index":1947,"title":{},"body":{"components/MainInputComponent.html":{}}}],["input/double",{"_index":1395,"title":{},"body":{"components/DoubleInputComponent.html":{},"modules/SharedModule.html":{}}}],["input/main",{"_index":1925,"title":{},"body":{"components/MainInputComponent.html":{},"modules/SharedModule.html":{}}}],["inputcomponent",{"_index":327,"title":{"components/InputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["inputs",{"_index":795,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{}}}],["instead",{"_index":1084,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["interactive",{"_index":1999,"title":{},"body":{"classes/Map.html":{}}}],["interface",{"_index":474,"title":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"interfaces/CurrentRoute.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"interfaces/Notification.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/StopInfo.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DirectionsStore.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"interfaces/Notification.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"injectables/SocketIOService.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}}}],["interfaces",{"_index":475,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"interfaces/CurrentRoute.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"interfaces/Notification.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/StopInfo.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{},"overview.html":{}}}],["intermediatestops",{"_index":1587,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["invalid",{"_index":3243,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["io",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["io('http://localhost:3000",{"_index":2690,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["io.service",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["io.service.ts",{"_index":2682,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["io.service.ts:17",{"_index":2684,"title":{},"body":{"injectables/SocketIOService.html":{}}}],["ipoint",{"_index":1510,"title":{"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{}},"body":{"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"classes/LinesMap.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["iroute",{"_index":86,"title":{"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"pipes/FilterPipe.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"components/LinesDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/StationListComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["irouteinfo",{"_index":110,"title":{"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["isauthenticated",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["ischedule",{"_index":1522,"title":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{}},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"components/ListItemComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["ischeduledetails",{"_index":118,"title":{"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/StopsMapComponent.html":{}}}],["islast",{"_index":1779,"title":{},"body":{"components/ListItemComponent.html":{}}}],["isleft",{"_index":1767,"title":{},"body":{"modules/LinesRoutingModule.html":{}}}],["isright",{"_index":2661,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["isroutesaved",{"_index":1045,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["isstopsaved",{"_index":2844,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["istop",{"_index":150,"title":{"interfaces/IStop.html":{},"interfaces/IStop-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"pipes/FilterPipe.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["it.endtime",{"_index":3005,"title":{},"body":{"components/TripComponent.html":{}}}],["it.legs.foreach(leg",{"_index":3193,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["it.starttime",{"_index":3003,"title":{},"body":{"components/TripComponent.html":{}}}],["italic",{"_index":3115,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["item",{"_index":1774,"title":{},"body":{"components/ListItemComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{}}}],["item'},{'name",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["item.component",{"_index":1750,"title":{},"body":{"modules/LinesModule.html":{}}}],["item.component.css",{"_index":1775,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.html",{"_index":1776,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts",{"_index":1773,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:18",{"_index":1782,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:19",{"_index":1781,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:20",{"_index":1783,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:22",{"_index":1789,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:23",{"_index":1780,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:27",{"_index":1785,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:31",{"_index":1784,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:35",{"_index":1786,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item.component.ts:39",{"_index":1787,"title":{},"body":{"components/ListItemComponent.html":{}}}],["item/list",{"_index":1749,"title":{},"body":{"modules/LinesModule.html":{},"components/ListItemComponent.html":{}}}],["item:hover",{"_index":2616,"title":{},"body":{"components/SideNavComponent.html":{}}}],["items",{"_index":843,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["itineraries",{"_index":1588,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripListComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["itinerary",{"_index":238,"title":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{}},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["json.parse(localstorage.getitem('token",{"_index":1198,"title":{},"body":{"injectables/DataService.html":{}}}],["json.stringify(action.data.access_token",{"_index":593,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["justify",{"_index":768,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["jwt",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt_decode(token",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelper",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwthelperservice",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["karma",{"_index":3329,"title":{},"body":{"index.html":{}}}],["key",{"_index":579,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["keyboard_backspace",{"_index":1423,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{}}}],["keyframes",{"_index":2724,"title":{},"body":{"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{}}}],["keyup",{"_index":2171,"title":{},"body":{"components/PlacesComponent.html":{}}}],["keyup(value",{"_index":2178,"title":{},"body":{"components/PlacesComponent.html":{}}}],["l",{"_index":1695,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["l.icon",{"_index":1649,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["l.icon({iconurl",{"_index":1650,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["l.layergroup",{"_index":1647,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["l.map",{"_index":1644,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["l.map('map",{"_index":2037,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["l.marker",{"_index":1646,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["l.marker(coords",{"_index":1998,"title":{},"body":{"classes/Map.html":{}}}],["l.markerclustergroup",{"_index":2888,"title":{},"body":{"classes/StopsMap.html":{}}}],["l.polyline([p1.getlatlng",{"_index":2006,"title":{},"body":{"classes/Map.html":{}}}],["l.polyline(path",{"_index":2004,"title":{},"body":{"classes/Map.html":{}}}],["l.tilelayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png",{"_index":2086,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["label",{"_index":1912,"title":{},"body":{"components/LoginComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["last",{"_index":1811,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationListComponent.html":{}}}],["lat",{"_index":1571,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["latitude",{"_index":1493,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["latlngexpression",{"_index":1995,"title":{},"body":{"classes/Map.html":{}}}],["layergroup",{"_index":1626,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["lds",{"_index":2704,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["leaflet",{"_index":422,"title":{},"body":{"modules/AppModule.html":{},"classes/LinesMap.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{},"dependencies.html":{}}}],["leaflet.markercluster",{"_index":2904,"title":{},"body":{"classes/StopsMap.html":{},"dependencies.html":{}}}],["leafletmodule",{"_index":420,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":886,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["leg",{"_index":1564,"title":{"interfaces/Leg.html":{},"interfaces/Leg-1.html":{}},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["leg.arrivaldelay",{"_index":3096,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.departuredelay",{"_index":3095,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.distance}}m",{"_index":3080,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.duration",{"_index":3081,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.endtime",{"_index":3010,"title":{},"body":{"components/TripComponent.html":{}}}],["leg.from.lon",{"_index":3200,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["leg.from.name",{"_index":3094,"title":{},"body":{"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["leg.from.name}}({{leg.from.stopcode",{"_index":3007,"title":{},"body":{"components/TripComponent.html":{}}}],["leg.intermediatestops.foreach(stop",{"_index":3205,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["leg.intermediatestops.length",{"_index":3097,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.points.map(point",{"_index":3194,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["leg.routeid",{"_index":3004,"title":{},"body":{"components/TripComponent.html":{},"classes/TripPlannerMap.html":{}}}],["leg.routeshortname",{"_index":3091,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.starttime",{"_index":3008,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["leg.to.arrival",{"_index":3102,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["leg.to.lon",{"_index":3203,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["leg.to.name",{"_index":3084,"title":{},"body":{"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["leg.to.name}}({{leg.to.stopcode",{"_index":3009,"title":{},"body":{"components/TripComponent.html":{}}}],["legacy",{"_index":1911,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["legend",{"_index":304,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["legs",{"_index":1557,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["lexend",{"_index":759,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["line",{"_index":84,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/BookingComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/RouteListComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SidebarOptionsComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["line$.pipe",{"_index":1836,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["line.entity",{"_index":239,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{}}}],["line.id",{"_index":1505,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{}}}],["line_data",{"_index":1616,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["line_module",{"_index":1768,"title":{},"body":{"modules/LinesRoutingModule.html":{}}}],["linear",{"_index":828,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["linecode",{"_index":1494,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"modules/LinesRoutingModule.html":{}}}],["linecode/route/:routecode",{"_index":1769,"title":{},"body":{"modules/LinesRoutingModule.html":{}}}],["lineid",{"_index":1519,"title":{},"body":{"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["lines",{"_index":329,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["lines_load",{"_index":2348,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SidebarOptionsComponent.html":{}}}],["linesdropdowncomponent",{"_index":328,"title":{"components/LinesDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["linesmap",{"_index":1624,"title":{"classes/LinesMap.html":{}},"body":{"classes/LinesMap.html":{},"components/MapAreaComponent.html":{}}}],["linesmap(map",{"_index":2040,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["linesmapcomponent",{"_index":331,"title":{"components/LinesMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["linesmodule",{"_index":1735,"title":{"modules/LinesModule.html":{}},"body":{"modules/LinesModule.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules.html":{},"overview.html":{}}}],["linesroutingmodule",{"_index":1740,"title":{"modules/LinesRoutingModule.html":{}},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["linestate",{"_index":484,"title":{"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["linestateadapter",{"_index":492,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["linestateadapter.addmany(action.lines",{"_index":514,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["linestateadapter.getinitialstate",{"_index":1506,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["link",{"_index":931,"title":{},"body":{"components/BookingsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SidebarOptionsComponent.html":{}}}],["link[0",{"_index":2412,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["link[1",{"_index":2413,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["link[2",{"_index":2393,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["list",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["list'},{'name",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["list.component",{"_index":1756,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["list.component.css",{"_index":2310,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{},"components/TripListComponent.html":{}}}],["list.component.html",{"_index":2311,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{},"components/TripListComponent.html":{}}}],["list.component.ts",{"_index":2309,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{},"components/TripListComponent.html":{}}}],["list.component.ts:16",{"_index":2766,"title":{},"body":{"components/StationListComponent.html":{}}}],["list.component.ts:17",{"_index":2316,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{}}}],["list.component.ts:18",{"_index":2312,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{}}}],["list.component.ts:19",{"_index":2768,"title":{},"body":{"components/StationListComponent.html":{},"components/TripListComponent.html":{}}}],["list.component.ts:20",{"_index":2767,"title":{},"body":{"components/StationListComponent.html":{},"components/TripListComponent.html":{}}}],["list.component.ts:22",{"_index":2313,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{}}}],["list.component.ts:23",{"_index":2757,"title":{},"body":{"components/StationListComponent.html":{}}}],["list.component.ts:27",{"_index":2315,"title":{},"body":{"components/RouteListComponent.html":{},"components/StationListComponent.html":{}}}],["list.component.ts:29",{"_index":3118,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:32",{"_index":2758,"title":{},"body":{"components/StationListComponent.html":{}}}],["list.component.ts:36",{"_index":2761,"title":{},"body":{"components/StationListComponent.html":{}}}],["list.component.ts:39",{"_index":3121,"title":{},"body":{"components/TripListComponent.html":{}}}],["list.component.ts:41",{"_index":2763,"title":{},"body":{"components/StationListComponent.html":{}}}],["list.component.ts:45",{"_index":2765,"title":{},"body":{"components/StationListComponent.html":{},"components/TripListComponent.html":{}}}],["list/route",{"_index":1755,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/RouteListComponent.html":{}}}],["list/station",{"_index":1759,"title":{},"body":{"modules/LinesModule.html":{},"components/StationListComponent.html":{}}}],["list/trip",{"_index":2254,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"components/TripListComponent.html":{}}}],["listitemcomponent",{"_index":333,"title":{"components/ListItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["livedatastore",{"_index":1041,"title":{"injectables/LiveDataStore.html":{}},"body":{"interfaces/CurrentRoute.html":{},"components/LinesMapComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{}}}],["livestate",{"_index":1842,"title":{"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{}},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/SliderComponent.html":{},"injectables/StopsStore.html":{}}}],["liveuri",{"_index":1089,"title":{},"body":{"injectables/DataService.html":{}}}],["loadbookingplan",{"_index":11,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadbookings",{"_index":12,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadchildren",{"_index":2658,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["loadlineroutes",{"_index":13,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadlines",{"_index":14,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadplans",{"_index":15,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadrouteinfo",{"_index":16,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadrouteschedules",{"_index":17,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadsavedinfo",{"_index":18,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["loadsavedroutes",{"_index":19,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["loadsavedstops",{"_index":20,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["loadstoproutes",{"_index":21,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["loadstops",{"_index":22,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["local",{"_index":926,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/PlacesComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"injectables/StopsStore.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["localstorage.clear",{"_index":598,"title":{},"body":{"injectables/AuthEffects.html":{},"injectables/AuthService.html":{}}}],["localstorage.getitem('token",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":592,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["localstore",{"_index":1052,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/PlacesSliderComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{},"components/StopsMapComponent.html":{}}}],["location",{"_index":2335,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/StopDropDownComponent.html":{}}}],["location_on",{"_index":1425,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["locations",{"_index":1861,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["log",{"_index":1905,"title":{},"body":{"components/LoginComponent.html":{},"components/SideNavComponent.html":{}}}],["login",{"_index":23,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"guards/AuthGuardService.html":{},"modules/AuthRoutingModule.html":{},"injectables/DataService.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{}}}],["login'},{'name",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["login(credentials",{"_index":1139,"title":{},"body":{"injectables/DataService.html":{}}}],["login.component.css",{"_index":1866,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1867,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":336,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["loginout",{"_index":2529,"title":{},"body":{"components/SideNavComponent.html":{}}}],["loginout(type",{"_index":2538,"title":{},"body":{"components/SideNavComponent.html":{}}}],["loginsuccess",{"_index":585,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["logo",{"_index":2654,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["logonly",{"_index":464,"title":{},"body":{"modules/AppModule.html":{}}}],["logout",{"_index":586,"title":{},"body":{"injectables/AuthEffects.html":{},"components/SideNavComponent.html":{}}}],["lon",{"_index":1570,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["long",{"_index":1904,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["longitude",{"_index":1495,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["m.authmodule",{"_index":2667,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["m.linesmodule",{"_index":2663,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["m.plannermodule",{"_index":2665,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["m.savedmodule",{"_index":2669,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["m.stopsmodule",{"_index":2660,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["main",{"_index":767,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/LinesMapComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["maininputcomponent",{"_index":338,"title":{"components/MainInputComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["malakas",{"_index":862,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{}}}],["malakas>i",{"_index":3030,"title":{},"body":{"components/TripComponent.html":{}}}],["map",{"_index":182,"title":{"classes/Map.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsRoutingModule.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["map'},{'name",{"_index":332,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["map(([action",{"_index":2340,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["map(([buses",{"_index":2677,"title":{},"body":{"components/SliderComponent.html":{}}}],["map(([data",{"_index":2194,"title":{},"body":{"components/PlacesComponent.html":{}}}],["map(([saved",{"_index":1058,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["map((data",{"_index":1339,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["map((event",{"_index":2365,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["map((index",{"_index":2406,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["map((module",{"_index":2344,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["map((res",{"_index":48,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["map((response",{"_index":65,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["map(action",{"_index":2354,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["map(res",{"_index":125,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["map.component",{"_index":1760,"title":{},"body":{"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SharedModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["map.component.css",{"_index":1729,"title":{},"body":{"components/LinesMapComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesMapComponent.html":{},"components/StopsMapComponent.html":{}}}],["map.component.html",{"_index":1730,"title":{},"body":{"components/LinesMapComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesMapComponent.html":{},"components/StopsMapComponent.html":{}}}],["map.component.ts",{"_index":1728,"title":{},"body":{"components/LinesMapComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesMapComponent.html":{},"components/StopsMapComponent.html":{}}}],["map.component.ts:10",{"_index":2220,"title":{},"body":{"components/PlacesMapComponent.html":{}}}],["map.component.ts:12",{"_index":1731,"title":{},"body":{"components/LinesMapComponent.html":{},"components/MiniMapComponent.html":{}}}],["map.component.ts:14",{"_index":2221,"title":{},"body":{"components/PlacesMapComponent.html":{}}}],["map.component.ts:16",{"_index":1732,"title":{},"body":{"components/LinesMapComponent.html":{}}}],["map.component.ts:20",{"_index":2929,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["map.component.ts:21",{"_index":2925,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["map.component.ts:29",{"_index":2928,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["map.component.ts:41",{"_index":2927,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["map.component.ts:8",{"_index":2105,"title":{},"body":{"components/MiniMapComponent.html":{}}}],["map.service",{"_index":1765,"title":{},"body":{"modules/LinesRoutingModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopsRoutingModule.html":{}}}],["map.service.ts",{"_index":2107,"title":{},"body":{"guards/MiniMapService.html":{}}}],["map.service.ts:11",{"_index":2109,"title":{},"body":{"guards/MiniMapService.html":{}}}],["map.service.ts:7",{"_index":2108,"title":{},"body":{"guards/MiniMapService.html":{}}}],["map.setview([39.667341104708946",{"_index":2092,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["map/lines",{"_index":1727,"title":{},"body":{"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{}}}],["map/map.module",{"_index":1761,"title":{},"body":{"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SharedModule.html":{},"modules/StopsModule.html":{}}}],["map/mini",{"_index":2104,"title":{},"body":{"components/MiniMapComponent.html":{},"modules/RoutesRoutingModule.html":{},"modules/SharedModule.html":{}}}],["map/places",{"_index":2219,"title":{},"body":{"components/PlacesMapComponent.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["map/stops",{"_index":2923,"title":{},"body":{"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["map:10",{"_index":1658,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:11",{"_index":1656,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:12",{"_index":1664,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:13",{"_index":1669,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:146",{"_index":3146,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["map:21",{"_index":1686,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:28",{"_index":1682,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:32",{"_index":1689,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:37",{"_index":1693,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:44",{"_index":3155,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["map:48",{"_index":2898,"title":{},"body":{"classes/StopsMap.html":{}}}],["map:62",{"_index":1673,"title":{},"body":{"classes/LinesMap.html":{}}}],["map:66",{"_index":1681,"title":{},"body":{"classes/LinesMap.html":{}}}],["map:68",{"_index":2899,"title":{},"body":{"classes/StopsMap.html":{}}}],["map:7",{"_index":1665,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:8",{"_index":1661,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:9",{"_index":1667,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["map:hover",{"_index":3033,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["mapareacomponent",{"_index":341,"title":{"components/MapAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["mapbox",{"_index":3282,"title":{},"body":{"dependencies.html":{}}}],["mapbox/mapbox",{"_index":3257,"title":{},"body":{"dependencies.html":{}}}],["mapbtn",{"_index":1926,"title":{},"body":{"components/MainInputComponent.html":{}}}],["mapbutton",{"_index":1929,"title":{},"body":{"components/MainInputComponent.html":{}}}],["mapcontrollers/linesmapcontrollers",{"_index":2034,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["mapcontrollers/stopmapcontroller",{"_index":2036,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["mapcontrollers/tripplannermapcontrollers",{"_index":2035,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["maplink",{"_index":1934,"title":{},"body":{"components/MainInputComponent.html":{}}}],["mapmodule",{"_index":404,"title":{"modules/MapModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SharedModule.html":{},"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["mapquest",{"_index":3284,"title":{},"body":{"dependencies.html":{}}}],["mapzoom",{"_index":2891,"title":{},"body":{"classes/StopsMap.html":{}}}],["margin",{"_index":752,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["marker",{"_index":1209,"title":{},"body":{"injectables/DataShareService.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"classes/Map.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["marker.addeventlistener(\"click",{"_index":2909,"title":{},"body":{"classes/StopsMap.html":{}}}],["marker.bindpopup(`${text",{"_index":2001,"title":{},"body":{"classes/Map.html":{}}}],["marker.png",{"_index":1663,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["markerobserver",{"_index":1210,"title":{},"body":{"injectables/DataShareService.html":{}}}],["markers",{"_index":2907,"title":{},"body":{"classes/StopsMap.html":{}}}],["mat",{"_index":870,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["matbuttonmodule",{"_index":637,"title":{},"body":{"modules/AuthModule.html":{},"modules/PlannerModule.html":{}}}],["matching",{"_index":214,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/msg.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["matdatepickerinputevent",{"_index":3218,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["matdatepickermodule",{"_index":2246,"title":{},"body":{"modules/PlannerModule.html":{}}}],["material",{"_index":2156,"title":{},"body":{"components/OptionComponent.html":{}}}],["matexpansionmodule",{"_index":2255,"title":{},"body":{"modules/PlannerModule.html":{}}}],["matformfieldmodule",{"_index":629,"title":{},"body":{"modules/AuthModule.html":{}}}],["math.abs($e.distance.x",{"_index":2572,"title":{},"body":{"components/SideNavComponent.html":{}}}],["math.floor(this.el.offsetwidth",{"_index":2569,"title":{},"body":{"components/SideNavComponent.html":{}}}],["maticonmodule",{"_index":2515,"title":{},"body":{"modules/SharedModule.html":{}}}],["matinputmodule",{"_index":632,"title":{},"body":{"modules/AuthModule.html":{},"modules/PlannerModule.html":{}}}],["matmenumodule",{"_index":2259,"title":{},"body":{"modules/PlannerModule.html":{},"modules/SharedModule.html":{}}}],["matnativedatemodule",{"_index":2248,"title":{},"body":{"modules/PlannerModule.html":{}}}],["matselectmodule",{"_index":1744,"title":{},"body":{"modules/LinesModule.html":{},"modules/PlannerModule.html":{}}}],["matsnackbarmodule",{"_index":2513,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabsmodule",{"_index":430,"title":{},"body":{"modules/AppModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/StopsModule.html":{}}}],["max",{"_index":744,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["maxage",{"_index":462,"title":{},"body":{"modules/AppModule.html":{}}}],["maxclusterradius",{"_index":2890,"title":{},"body":{"classes/StopsMap.html":{}}}],["mdc",{"_index":3246,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["media",{"_index":978,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{}}}],["mentos",{"_index":1461,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/StopsComponent.html":{}}}],["mentos(stop",{"_index":2870,"title":{},"body":{"components/StopsComponent.html":{}}}],["mentos>span",{"_index":1477,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["menu",{"_index":885,"title":{},"body":{"components/BookingComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/TripDetailsComponent.html":{}}}],["message",{"_index":1516,"title":{},"body":{"interfaces/INotification.html":{},"interfaces/INotification-1.html":{}}}],["metadata",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["methods",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["middle",{"_index":2966,"title":{},"body":{"components/ToasterComponent.html":{}}}],["min",{"_index":877,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/LoginComponent.html":{},"components/MiniMapComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["min&nbsp",{"_index":3083,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["mini",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["minimap",{"_index":3037,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["minimapcomponent",{"_index":343,"title":{"components/MiniMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["minimapservice",{"_index":1763,"title":{"guards/MiniMapService.html":{}},"body":{"modules/LinesRoutingModule.html":{},"guards/MiniMapService.html":{},"modules/RoutesRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopsRoutingModule.html":{}}}],["mins",{"_index":3098,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["mins&nbsp",{"_index":3082,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["miscellaneous",{"_index":3292,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mm/dd/yyyy",{"_index":3240,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["mode",{"_index":1579,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["module",{"_index":394,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["module.module",{"_index":636,"title":{},"body":{"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{}}}],["module.module.ts",{"_index":2500,"title":{},"body":{"modules/SharedModule.html":{}}}],["module/components/bus",{"_index":997,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["module/components/double",{"_index":1394,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["module/components/dropdown",{"_index":1456,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["module/components/main",{"_index":1924,"title":{},"body":{"components/MainInputComponent.html":{}}}],["module/components/mini",{"_index":2103,"title":{},"body":{"components/MiniMapComponent.html":{},"modules/RoutesRoutingModule.html":{}}}],["module/components/multiple",{"_index":1751,"title":{},"body":{"modules/LinesModule.html":{},"components/MultipleDropdownComponent.html":{}}}],["module/components/option/option.component.ts",{"_index":2136,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:11",{"_index":2143,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:12",{"_index":2145,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:13",{"_index":2144,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:15",{"_index":2140,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:16",{"_index":2139,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:17",{"_index":2142,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:18",{"_index":2138,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:19",{"_index":2141,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:20",{"_index":2137,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:24",{"_index":2146,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:26",{"_index":2147,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:30",{"_index":2149,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/option/option.component.ts:34",{"_index":2148,"title":{},"body":{"components/OptionComponent.html":{}}}],["module/components/spinner/spinner.component.ts",{"_index":2697,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["module/components/spinner/spinner.component.ts:12",{"_index":2701,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["module/components/spinner/spinner.component.ts:8",{"_index":2700,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["module/components/station",{"_index":2727,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["module/components/toaster/toaster.component",{"_index":2512,"title":{},"body":{"modules/SharedModule.html":{}}}],["module/components/toaster/toaster.component.ts",{"_index":2949,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:11",{"_index":2957,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:12",{"_index":2959,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:13",{"_index":2958,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:15",{"_index":2952,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:19",{"_index":2954,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:23",{"_index":2953,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/components/toaster/toaster.component.ts:27",{"_index":2956,"title":{},"body":{"components/ToasterComponent.html":{}}}],["module/shared",{"_index":635,"title":{},"body":{"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{}}}],["modules",{"_index":396,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/state/auth.effects",{"_index":454,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/state/message.reducer",{"_index":456,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/map/map.module",{"_index":442,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/planner/state/directions.store",{"_index":1160,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataShareService.html":{}}}],["modules/sidebar/sidebar.module",{"_index":432,"title":{},"body":{"modules/AppModule.html":{}}}],["monday",{"_index":2484,"title":{},"body":{"components/SelectComponent.html":{}}}],["more",{"_index":3340,"title":{},"body":{"index.html":{}}}],["more_vert",{"_index":1965,"title":{},"body":{"components/MainInputComponent.html":{}}}],["msg",{"_index":689,"title":{"interfaces/msg.html":{}},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"interfaces/Notification.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/msg.html":{}}}],["multiple",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["multipledropdowncomponent",{"_index":345,"title":{"components/MultipleDropdownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["mybookings",{"_index":727,"title":{},"body":{"components/BookOptionsComponent.html":{}}}],["mybookings(data",{"_index":731,"title":{},"body":{"components/BookOptionsComponent.html":{}}}],["name",{"_index":36,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["names",{"_index":1386,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["names.end",{"_index":1390,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["names.start",{"_index":1387,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["nav",{"_index":2522,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav'},{'name",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["nav.component",{"_index":2630,"title":{},"body":{"modules/SidebarModule.html":{}}}],["nav.component.css",{"_index":2523,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.html",{"_index":2524,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts",{"_index":2521,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:102",{"_index":2547,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:18",{"_index":2552,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:20",{"_index":2550,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:21",{"_index":2548,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:22",{"_index":2549,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:23",{"_index":2533,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:31",{"_index":2543,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:35",{"_index":2541,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:39",{"_index":2542,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:43",{"_index":2546,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:47",{"_index":2539,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:52",{"_index":2540,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:57",{"_index":2537,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:62",{"_index":2554,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:66",{"_index":2555,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:71",{"_index":2535,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav.component.ts:96",{"_index":2545,"title":{},"body":{"components/SideNavComponent.html":{}}}],["nav/side",{"_index":2520,"title":{},"body":{"components/SideNavComponent.html":{},"modules/SidebarModule.html":{}}}],["nav_actions",{"_index":1417,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/StopDropDownComponent.html":{}}}],["navigate",{"_index":920,"title":{},"body":{"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"index.html":{}}}],["navigate(link",{"_index":929,"title":{},"body":{"components/BookingsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["navigation",{"_index":1607,"title":{},"body":{"components/LinesDropdownComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/StationEntityComponent.html":{}}}],["navigation.actions",{"_index":2436,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["navigation.linesmodule({params",{"_index":2380,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["navigator.geolocation",{"_index":2829,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["navigator.geolocation.getcurrentposition(resolve",{"_index":2830,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["need",{"_index":3334,"title":{},"body":{"index.html":{}}}],["needed",{"_index":2973,"title":{},"body":{"components/ToasterComponent.html":{}}}],["neue",{"_index":823,"title":{},"body":{"components/BookingComponent.html":{},"components/SideNavComponent.html":{}}}],["new",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookingComponent.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/TripComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"index.html":{}}}],["newbooking",{"_index":680,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["next",{"_index":1033,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["ng",{"_index":868,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StopSliderComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":2530,"title":{},"body":{"components/SideNavComponent.html":{},"components/StationListComponent.html":{}}}],["ngmodule",{"_index":414,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["ngonchanges",{"_index":2755,"title":{},"body":{"components/StationListComponent.html":{}}}],["ngonchanges(changes",{"_index":2759,"title":{},"body":{"components/StationListComponent.html":{}}}],["ngondestroy",{"_index":1061,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/ListItemComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["ngoninit",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["ngrx/component",{"_index":675,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":179,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"injectables/DataService.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":502,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/TripComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"dependencies.html":{}}}],["ngrx/router",{"_index":209,"title":{},"body":{"injectables/ApiEffects.html":{},"modules/AppModule.html":{},"classes/CustomSerializer.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":176,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"interfaces/Notification.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"dependencies.html":{},"interfaces/msg.html":{}}}],["ngx",{"_index":3263,"title":{},"body":{"dependencies.html":{}}}],["nobookings",{"_index":973,"title":{},"body":{"components/BookingsComponent.html":{}}}],["nobus",{"_index":2740,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["noincoming",{"_index":1024,"title":{},"body":{"components/BusEntityComponent.html":{},"components/ListItemComponent.html":{}}}],["noitineraries",{"_index":3130,"title":{},"body":{"components/TripListComponent.html":{}}}],["none",{"_index":303,"title":{},"body":{"components/AppComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["nosavedroutes",{"_index":2471,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["nosavedstops",{"_index":2470,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["nostops",{"_index":2836,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["notification",{"_index":2121,"title":{"interfaces/Notification.html":{}},"body":{"interfaces/Notification.html":{}}}],["now",{"_index":1379,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["nowrap",{"_index":3022,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["null",{"_index":2990,"title":{},"body":{"components/TripComponent.html":{}}}],["number",{"_index":483,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataShareService.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"classes/Map.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"classes/StopsMap.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{}}}],["object",{"_index":1081,"title":{},"body":{"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"interfaces/RouterStateUrl.html":{}}}],["obs",{"_index":1252,"title":{},"body":{"injectables/DataShareService.html":{},"components/InputComponent.html":{},"components/MapAreaComponent.html":{}}}],["observable",{"_index":679,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["occupancy",{"_index":478,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripComponent.html":{},"components/TripListComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["occupancy[key",{"_index":581,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["occupancy[leg.tripid",{"_index":3011,"title":{},"body":{"components/TripComponent.html":{}}}],["occupancystatus",{"_index":1585,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["of(api_actions.deleterouteerror({msg",{"_index":52,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.deletestoperror({msg",{"_index":58,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.fetchbookingserror({msg",{"_index":78,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.fetchplanerror({msg",{"_index":69,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getlinerouteserror({msg",{"_index":88,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getlineserror({msg",{"_index":97,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getroutedetailserror({msg",{"_index":112,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getsavedinfoerror({msg",{"_index":127,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getsavedrouteserror({msg",{"_index":135,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getsavedstopserror({msg",{"_index":141,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getscheduleserror({msg",{"_index":120,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.getstopserror({msg",{"_index":152,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.loginerror({msg",{"_index":157,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.registererror({msg",{"_index":162,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.saverouteerror({msg",{"_index":167,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.savestoperror({msg",{"_index":172,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["of(api_actions.stoprouteserror({msg",{"_index":146,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype",{"_index":178,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"injectables/DataService.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["oftype(api_actions.deleteroute",{"_index":43,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.deletestop",{"_index":55,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.fetchbookings",{"_index":71,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.fetchplan",{"_index":99,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getitinerary",{"_index":60,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getlineroutes",{"_index":81,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getlines",{"_index":91,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getroutedetails",{"_index":102,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getsavedinfo",{"_index":122,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getsavedroutes",{"_index":129,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getsavedstops",{"_index":137,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getschedules",{"_index":114,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.getstops",{"_index":148,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.login",{"_index":154,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.loginsuccess",{"_index":589,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(api_actions.logout",{"_index":597,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["oftype(api_actions.register",{"_index":159,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.saveroute",{"_index":164,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.savestop",{"_index":169,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(api_actions.stoproutes",{"_index":143,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["oftype(navigation.arrownavigation",{"_index":2395,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["oftype(navigation.linesmodule",{"_index":2359,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["oftype(navigation.placesmap",{"_index":2390,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["oftype(router_navigated",{"_index":2338,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["on(api_actions.deletebooking",{"_index":548,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.deleteroutesuccess",{"_index":560,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.deletestopsuccess",{"_index":552,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.fetchbookingssuccess",{"_index":532,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.fetchplansuccess",{"_index":529,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getfilteredstopssuccess",{"_index":510,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getlineroutes",{"_index":505,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getlineroutessuccess",{"_index":522,"title":{},"body":{"interfaces/AppState.html":{}}}],["on(api_actions.getlinessuccess",{"_index":513,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getroutedetailsuccess",{"_index":573,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getsavedinfosuccess",{"_index":562,"title":{},"body":{"interfaces/AppState.html":{}}}],["on(api_actions.getsavedroutessuccess",{"_index":555,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getsavedstopssuccess",{"_index":557,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getschedulessuccess",{"_index":525,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.getstopssuccess",{"_index":528,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.loginerror",{"_index":2128,"title":{},"body":{"interfaces/Notification.html":{}}}],["on(api_actions.saveroutesuccess",{"_index":558,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.savestopsuccess",{"_index":550,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(api_actions.showspinner",{"_index":547,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(clearstate",{"_index":2131,"title":{},"body":{"interfaces/Notification.html":{}}}],["on(select_actions.emptypath",{"_index":568,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.emptyplan",{"_index":537,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.module",{"_index":545,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.selectbooking",{"_index":538,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.selectitinerary",{"_index":535,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.selectline",{"_index":541,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.selectroute",{"_index":516,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.selectstop",{"_index":519,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["on(select_actions.updateoccupancy",{"_index":577,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["onbook",{"_index":2985,"title":{},"body":{"components/TripComponent.html":{},"components/TripListComponent.html":{}}}],["onbook(itinerary",{"_index":3119,"title":{},"body":{"components/TripListComponent.html":{}}}],["oncancel",{"_index":792,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{}}}],["oncancel(trip_id",{"_index":933,"title":{},"body":{"components/BookingsComponent.html":{}}}],["onchanges",{"_index":2750,"title":{},"body":{"components/StationListComponent.html":{},"components/ToasterComponent.html":{}}}],["onclick",{"_index":1005,"title":{},"body":{"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/OptionComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{}}}],["onclick($e",{"_index":1470,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["onclick(data",{"_index":1414,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/StopDropDownComponent.html":{}}}],["ondayselect",{"_index":1226,"title":{},"body":{"injectables/DataShareService.html":{},"components/ListItemComponent.html":{}}}],["ondayselect(day",{"_index":1240,"title":{},"body":{"injectables/DataShareService.html":{},"components/ListItemComponent.html":{}}}],["ondestroy",{"_index":1039,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/ListItemComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{}}}],["ondrag",{"_index":2172,"title":{},"body":{"components/PlacesComponent.html":{}}}],["ondrag(point",{"_index":2182,"title":{},"body":{"components/PlacesComponent.html":{}}}],["ondragend",{"_index":1227,"title":{},"body":{"injectables/DataShareService.html":{}}}],["ondragend(value",{"_index":1242,"title":{},"body":{"injectables/DataShareService.html":{}}}],["ondragstart",{"_index":1228,"title":{},"body":{"injectables/DataShareService.html":{}}}],["ondragstart(value",{"_index":1244,"title":{},"body":{"injectables/DataShareService.html":{}}}],["onfocusout",{"_index":2531,"title":{},"body":{"components/SideNavComponent.html":{}}}],["onfocusout($e",{"_index":2544,"title":{},"body":{"components/SideNavComponent.html":{}}}],["oninit",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["onkeyup",{"_index":1229,"title":{},"body":{"injectables/DataShareService.html":{},"components/LinesDropdownComponent.html":{}}}],["onkeyup(v",{"_index":1246,"title":{},"body":{"injectables/DataShareService.html":{}}}],["onkeyup(value",{"_index":1601,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["onlocation",{"_index":2794,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["onlocation(data",{"_index":2801,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["onmap",{"_index":793,"title":{},"body":{"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/StopDropDownComponent.html":{}}}],["onmap(booking",{"_index":935,"title":{},"body":{"components/BookingsComponent.html":{}}}],["onmap(data",{"_index":2803,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["onnavigate",{"_index":2854,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["onnavigate(route",{"_index":2853,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["onqr",{"_index":794,"title":{},"body":{"components/BookingComponent.html":{}}}],["onremove",{"_index":1930,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{}}}],["onremove(code",{"_index":1065,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["onresize",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["onrouteselect",{"_index":2462,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["onrouteselect(code",{"_index":2450,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["onsave",{"_index":1931,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{}}}],["onsave(code",{"_index":1063,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["onscroll",{"_index":2756,"title":{},"body":{"components/StationListComponent.html":{}}}],["onscroll($e",{"_index":2762,"title":{},"body":{"components/StationListComponent.html":{}}}],["onselect",{"_index":1777,"title":{},"body":{"components/ListItemComponent.html":{},"components/OptionComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StationListComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripListComponent.html":{}}}],["onselect(data",{"_index":2638,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["onselect(itinerary",{"_index":3120,"title":{},"body":{"components/TripListComponent.html":{}}}],["onselect(slug",{"_index":2314,"title":{},"body":{"components/RouteListComponent.html":{}}}],["onselect(stopcode",{"_index":2873,"title":{},"body":{"components/StopsComponent.html":{}}}],["onselect(tab",{"_index":2764,"title":{},"body":{"components/StationListComponent.html":{}}}],["onstopselect",{"_index":2463,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["onstopselect(code",{"_index":2447,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["ontoggle",{"_index":1230,"title":{},"body":{"injectables/DataShareService.html":{}}}],["ontype",{"_index":1936,"title":{},"body":{"components/MainInputComponent.html":{}}}],["opacity",{"_index":2597,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["openstreetmap",{"_index":2089,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["opsz",{"_index":2163,"title":{},"body":{"components/OptionComponent.html":{}}}],["option",{"_index":740,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesMapComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesMapComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["option'},{'name",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["option.component",{"_index":2509,"title":{},"body":{"modules/SharedModule.html":{}}}],["option.component.css",{"_index":1459,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/OptionComponent.html":{}}}],["option.component.html",{"_index":1460,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/OptionComponent.html":{}}}],["option.component.ts",{"_index":1458,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:11",{"_index":1468,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:12",{"_index":1465,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:13",{"_index":1467,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:14",{"_index":1464,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:15",{"_index":1466,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:17",{"_index":1463,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:21",{"_index":1469,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option.component.ts:24",{"_index":1471,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["option/dropdown",{"_index":1457,"title":{},"body":{"components/DropdownOptionComponent.html":{},"modules/SharedModule.html":{}}}],["optional",{"_index":38,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"miscellaneous/functions.html":{}}}],["optioncomponent",{"_index":347,"title":{"components/OptionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["options",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options'},{'name",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component",{"_index":2252,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{}}}],["options.component.css",{"_index":725,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component.html",{"_index":726,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts",{"_index":724,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:12",{"_index":730,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/SidebarOptionsComponent.html":{}}}],["options.component.ts:15",{"_index":3225,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:16",{"_index":733,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:17",{"_index":3224,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:18",{"_index":732,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:22",{"_index":2637,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["options.component.ts:25",{"_index":734,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:26",{"_index":2639,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["options.component.ts:30",{"_index":2640,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["options.component.ts:38",{"_index":3219,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:42",{"_index":3223,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:46",{"_index":3221,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["options.component.ts:50",{"_index":3216,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["options/book",{"_index":723,"title":{},"body":{"components/BookOptionsComponent.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["options/sidebar",{"_index":2632,"title":{},"body":{"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{}}}],["options/trip",{"_index":2251,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["order",{"_index":2600,"title":{},"body":{"components/SideNavComponent.html":{}}}],["out",{"_index":408,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{},"index.html":{},"overview.html":{}}}],["outer",{"_index":2785,"title":{},"body":{"components/StationListComponent.html":{}}}],["outlet",{"_index":1606,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarRoutingModule.html":{}}}],["outlet.activatedroutedata",{"_index":1618,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{}}}],["outlets",{"_index":616,"title":{},"body":{"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["outline",{"_index":1440,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SelectComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["outlined",{"_index":2158,"title":{},"body":{"components/OptionComponent.html":{}}}],["output",{"_index":809,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{}}}],["outputs",{"_index":796,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{}}}],["overflow",{"_index":742,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["overlay",{"_index":2587,"title":{},"body":{"components/SideNavComponent.html":{}}}],["override",{"_index":1725,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{}}}],["overview",{"_index":3342,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p1",{"_index":1694,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["p2",{"_index":1692,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["p2.getlatlng",{"_index":2007,"title":{},"body":{"classes/Map.html":{}}}],["package",{"_index":3248,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":748,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["page",{"_index":2590,"title":{},"body":{"components/SideNavComponent.html":{},"index.html":{}}}],["panel",{"_index":884,"title":{},"body":{"components/BookingComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["panel:not([class*=mat",{"_index":3023,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["parameters",{"_index":34,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1077,"title":{},"body":{"classes/CustomSerializer.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{}}}],["params!['id",{"_index":2402,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["params!['index",{"_index":2405,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["params!['linecode",{"_index":2361,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["params!['routecode",{"_index":2367,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["params!['stopcode",{"_index":2371,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["password",{"_index":1889,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["path",{"_index":644,"title":{},"body":{"modules/AuthRoutingModule.html":{},"classes/LinesMap.html":{},"modules/LinesRoutingModule.html":{},"classes/Map.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SidebarRoutingModule.html":{},"classes/StopsMap.html":{},"modules/StopsRoutingModule.html":{},"classes/TripPlannerMap.html":{}}}],["payload",{"_index":1118,"title":{},"body":{"injectables/DataService.html":{},"components/SelectComponent.html":{}}}],["picker",{"_index":3265,"title":{},"body":{"dependencies.html":{}}}],["piece.code.includes(value",{"_index":1487,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["piece.desc.touppercase().includes(upper",{"_index":1486,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["pin",{"_index":1631,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["pipe",{"_index":898,"title":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{}},"body":{"pipes/BookingPipe.html":{},"interfaces/CurrentRoute.html":{},"pipes/FilterPipe.html":{},"components/PlacesComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{}}}],["pipe(map(([bookings",{"_index":956,"title":{},"body":{"components/BookingsComponent.html":{}}}],["pipe(map(([itinerary",{"_index":3076,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["pipe(map(([plan",{"_index":3126,"title":{},"body":{"components/TripListComponent.html":{}}}],["pipe(map(([saved",{"_index":2847,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["pipe(map(([spinner",{"_index":2278,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["pipe(map((res",{"_index":1186,"title":{},"body":{"injectables/DataService.html":{}}}],["pipes",{"_index":900,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{},"overview.html":{}}}],["pipes/bookings.pipe",{"_index":2271,"title":{},"body":{"modules/PlannerModule.html":{}}}],["pipetransform",{"_index":905,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{}}}],["place",{"_index":1979,"title":{},"body":{"components/MainInputComponent.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{}}}],["placeholder",{"_index":1935,"title":{},"body":{"components/MainInputComponent.html":{},"components/SelectComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["places",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["places(dest",{"_index":1539,"title":{},"body":{"components/InputComponent.html":{}}}],["places.component.css",{"_index":2166,"title":{},"body":{"components/PlacesComponent.html":{}}}],["places.component.html",{"_index":2167,"title":{},"body":{"components/PlacesComponent.html":{}}}],["places/dest",{"_index":2442,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["places/start",{"_index":2441,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["placescomponent",{"_index":348,"title":{"components/PlacesComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["placesmap",{"_index":2331,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["placesmapcomponent",{"_index":350,"title":{"components/PlacesMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["placesslidercomponent",{"_index":351,"title":{"components/PlacesSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["plan",{"_index":66,"title":{"interfaces/Plan.html":{},"interfaces/Plan-1.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/DataService.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["plan(start",{"_index":3215,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["planner",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["plannermodule",{"_index":2234,"title":{"modules/PlannerModule.html":{}},"body":{"modules/PlannerModule.html":{},"modules.html":{},"overview.html":{}}}],["platform",{"_index":3331,"title":{},"body":{"index.html":{}}}],["pm",{"_index":3242,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["point",{"_index":1211,"title":{},"body":{"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"classes/LinesMap.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/StationEntityComponent.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["point.desc",{"_index":2919,"title":{},"body":{"classes/StopsMap.html":{}}}],["point.latitude",{"_index":1706,"title":{},"body":{"classes/LinesMap.html":{}}}],["point.length",{"_index":2064,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["point.longitude",{"_index":1707,"title":{},"body":{"classes/LinesMap.html":{},"components/StationEntityComponent.html":{},"classes/StopsMap.html":{}}}],["point[0",{"_index":2008,"title":{},"body":{"classes/Map.html":{},"classes/TripPlannerMap.html":{}}}],["point[1",{"_index":1368,"title":{},"body":{"injectables/DirectionsStore.html":{},"classes/Map.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["pointer",{"_index":840,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["pointobserver",{"_index":1212,"title":{},"body":{"injectables/DataShareService.html":{}}}],["points",{"_index":106,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"classes/LinesMap.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["points.length",{"_index":107,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["points.map(point",{"_index":1705,"title":{},"body":{"classes/LinesMap.html":{}}}],["polyline",{"_index":1708,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/TripPlannerMap.html":{}}}],["polyline.bindpopup(text",{"_index":3209,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["position",{"_index":772,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["preferences",{"_index":3239,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["prepareoutlet",{"_index":1596,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{}}}],["prepareoutlet(outlet",{"_index":1603,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{}}}],["previousview",{"_index":2332,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["primary",{"_index":873,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["private",{"_index":212,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["project",{"_index":3300,"title":{},"body":{"index.html":{}}}],["promise",{"_index":2798,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["promise((resolve",{"_index":2826,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"interfaces/Notification.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"interfaces/msg.html":{},"properties.html":{}}}],["protected",{"_index":1627,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["providedin",{"_index":612,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"guards/MiniMapService.html":{},"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["providers",{"_index":411,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"components/BookingsComponent.html":{},"interfaces/CurrentRoute.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"components/RouteDetailsComponent.html":{},"modules/SavedModule.html":{},"modules/SidebarModule.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"components/TripListComponent.html":{}}}],["public",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["purple",{"_index":1437,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["qr",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["qr.component.css",{"_index":2276,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["qr.component.html",{"_index":2275,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["qr_module",{"_index":972,"title":{},"body":{"components/BookingsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["qrcode",{"_index":2268,"title":{},"body":{"modules/PlannerModule.html":{},"components/QrComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"dependencies.html":{}}}],["qrcodemodule",{"_index":2266,"title":{},"body":{"modules/PlannerModule.html":{}}}],["qrcomponent",{"_index":353,"title":{"components/QrComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["qrdata",{"_index":2333,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["qrlocal",{"_index":2272,"title":{"interfaces/QRLocal.html":{}},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["query",{"_index":1083,"title":{},"body":{"classes/CustomSerializer.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{}}}],["query!['module",{"_index":2347,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["queryparams",{"_index":735,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"classes/CustomSerializer.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["radius",{"_index":894,"title":{},"body":{"components/BookingComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/ListItemComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["raised",{"_index":874,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["reactiveformsmodule",{"_index":639,"title":{},"body":{"modules/AuthModule.html":{},"modules/PlannerModule.html":{}}}],["readonly",{"_index":1088,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataShareService.html":{}}}],["red",{"_index":1923,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["reducer",{"_index":192,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"interfaces/Notification.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["reducer.ts",{"_index":477,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["reducers/api",{"_index":191,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/RouterEffects.html":{}}}],["reference",{"_index":3343,"title":{},"body":{"index.html":{}}}],["register",{"_index":24,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AuthRoutingModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["register(credentials",{"_index":1142,"title":{},"body":{"injectables/DataService.html":{}}}],["register.component.css",{"_index":2286,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":2287,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":355,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["reject",{"_index":2827,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["reject('geolocation",{"_index":2834,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["relative",{"_index":773,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["relativedirection",{"_index":1567,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["reload",{"_index":3313,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1937,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{}}}],["removedrag",{"_index":1213,"title":{},"body":{"injectables/DataShareService.html":{}}}],["removedragobserver",{"_index":1214,"title":{},"body":{"injectables/DataShareService.html":{}}}],["removeuserinfo",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["replaysubject",{"_index":1297,"title":{},"body":{"injectables/DataShareService.html":{}}}],["required",{"_index":1901,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["res",{"_index":77,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataService.html":{}}}],["reset",{"_index":407,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/DirectionsStore.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{},"interfaces/TripState.html":{},"overview.html":{}}}],["resize",{"_index":2566,"title":{},"body":{"components/SideNavComponent.html":{}}}],["response",{"_index":68,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["results",{"_index":213,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"interfaces/msg.html":{},"overview.html":{},"properties.html":{},"routes.html":{}}}],["return",{"_index":509,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DirectionsStore.html":{},"pipes/FilterPipe.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"classes/Map.html":{},"interfaces/Notification.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"injectables/StopsStore.html":{},"components/TripComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["returns",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["rgb(0",{"_index":887,"title":{},"body":{"components/BookingComponent.html":{},"components/TripDetailsComponent.html":{}}}],["rgb(135",{"_index":1921,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["rgb(187",{"_index":3015,"title":{},"body":{"components/TripComponent.html":{}}}],["rgb(195,197,213",{"_index":2577,"title":{},"body":{"components/SideNavComponent.html":{}}}],["rgb(20",{"_index":3020,"title":{},"body":{"components/TripComponent.html":{}}}],["rgb(210",{"_index":3106,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["rgb(214",{"_index":2614,"title":{},"body":{"components/SideNavComponent.html":{}}}],["rgb(221,220,229",{"_index":1431,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["rgb(227,227,236",{"_index":827,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["rgb(235",{"_index":1976,"title":{},"body":{"components/MainInputComponent.html":{},"components/OptionComponent.html":{}}}],["rgb(245",{"_index":3109,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["rgb(89",{"_index":2781,"title":{},"body":{"components/StationListComponent.html":{}}}],["rgba(0,0,0,0.23",{"_index":2702,"title":{},"body":{"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{}}}],["rgba(0,0,0,0.5",{"_index":2595,"title":{},"body":{"components/SideNavComponent.html":{}}}],["rgba(195,197,213,1",{"_index":2578,"title":{},"body":{"components/SideNavComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["rgba(221,220,229,1",{"_index":1432,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["rgba(227,227,236,1",{"_index":830,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["rgba(239,243,248,1",{"_index":2579,"title":{},"body":{"components/SideNavComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["rgba(254,254,254,1",{"_index":1433,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["rgba(255",{"_index":2584,"title":{},"body":{"components/SideNavComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["rgba(255,255,255,1",{"_index":831,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["rgba(99",{"_index":834,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/OptionComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["right",{"_index":749,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SpinnerComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["ring",{"_index":2705,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["ripple",{"_index":1918,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["roboto",{"_index":821,"title":{},"body":{"components/BookingComponent.html":{},"components/SideNavComponent.html":{}}}],["root",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"guards/MiniMapService.html":{},"interfaces/RouterStateUrl.html":{},"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["root'},{'name",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["rotate(0deg",{"_index":2725,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["rotate(360deg",{"_index":2726,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["round",{"_index":2609,"title":{},"body":{"components/SideNavComponent.html":{}}}],["roundabout",{"_index":3067,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["roundabout_left",{"_index":3055,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["roundabout_right",{"_index":3053,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["rounded",{"_index":2971,"title":{},"body":{"components/ToasterComponent.html":{}}}],["route",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["route.code",{"_index":564,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["route.entity",{"_index":240,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["route.firstchild",{"_index":1080,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["route_data",{"_index":1963,"title":{},"body":{"components/MainInputComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["routecode",{"_index":1496,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["routecodes",{"_index":1503,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["routedetailscomponent",{"_index":356,"title":{"components/RouteDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["routeid",{"_index":1581,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["routelistcomponent",{"_index":359,"title":{"components/RouteListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["routename",{"_index":1497,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}}}],["router",{"_index":458,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["router_navigated",{"_index":208,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["routereffects",{"_index":448,"title":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}},"body":{"modules/AppModule.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["routermodule",{"_index":443,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesRoutingModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":645,"title":{},"body":{"modules/AuthRoutingModule.html":{},"modules/LinesRoutingModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SidebarRoutingModule.html":{},"modules/StopsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":472,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":1604,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{}}}],["routerreducer",{"_index":446,"title":{},"body":{"modules/AppModule.html":{}}}],["routerstate",{"_index":447,"title":{},"body":{"modules/AppModule.html":{},"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["routerstate.root",{"_index":1079,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["routerstateserializer",{"_index":1071,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["routerstatesnapshot",{"_index":1074,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["routerstateurl",{"_index":1076,"title":{"interfaces/RouterStateUrl.html":{}},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["routes",{"_index":470,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"modules/AuthRoutingModule.html":{},"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/InputComponent.html":{},"modules/LinesRoutingModule.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"modules/StopsRoutingModule.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{},"routes.html":{}}}],["routeshortname",{"_index":1586,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["routeslider",{"_index":1770,"title":{},"body":{"modules/LinesRoutingModule.html":{}}}],["routesnumber",{"_index":1504,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{}}}],["routesroutingmodule",{"_index":2239,"title":{"modules/RoutesRoutingModule.html":{}},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["routestate",{"_index":487,"title":{"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["routestateadapter",{"_index":494,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["routestateadapter.getinitialstate",{"_index":1520,"title":{},"body":{"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["routestateadapter.setall(action.routes",{"_index":524,"title":{},"body":{"interfaces/AppState.html":{}}}],["routestateadapter.updateone",{"_index":569,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["routing.module",{"_index":426,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/StopsModule.html":{}}}],["routing.module.ts",{"_index":469,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthRoutingModule.html":{},"modules/LinesRoutingModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/StopsRoutingModule.html":{}}}],["routing.mudule",{"_index":2633,"title":{},"body":{"modules/SidebarModule.html":{}}}],["routing.mudule.ts",{"_index":2657,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["row",{"_index":301,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["run",{"_index":3307,"title":{},"body":{"index.html":{}}}],["running",{"_index":3323,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":185,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"injectables/AuthEffects.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"dependencies.html":{}}}],["rxjs/internal/subscription",{"_index":2556,"title":{},"body":{"components/SideNavComponent.html":{}}}],["s.unsubscribe",{"_index":2202,"title":{},"body":{"components/PlacesComponent.html":{}}}],["sans",{"_index":824,"title":{},"body":{"components/BookingComponent.html":{},"components/SideNavComponent.html":{}}}],["saturday",{"_index":2489,"title":{},"body":{"components/SelectComponent.html":{}}}],["save",{"_index":1475,"title":{},"body":{"components/DropdownOptionComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{}}}],["saved",{"_index":362,"title":{"interfaces/Saved.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["saved/deleteroute",{"_index":1196,"title":{},"body":{"injectables/DataService.html":{}}}],["saved/deletestop",{"_index":1192,"title":{},"body":{"injectables/DataService.html":{}}}],["saved/getroutes",{"_index":1194,"title":{},"body":{"injectables/DataService.html":{}}}],["saved/getsavedinfo",{"_index":1197,"title":{},"body":{"injectables/DataService.html":{}}}],["saved/getstops",{"_index":1193,"title":{},"body":{"injectables/DataService.html":{}}}],["saved/saveroute",{"_index":1195,"title":{},"body":{"injectables/DataService.html":{}}}],["saved/savestop",{"_index":1191,"title":{},"body":{"injectables/DataService.html":{}}}],["saved_info",{"_index":2382,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SidebarOptionsComponent.html":{}}}],["savedmodule",{"_index":2453,"title":{"modules/SavedModule.html":{}},"body":{"modules/SavedModule.html":{},"modules.html":{},"overview.html":{}}}],["savedroutes",{"_index":479,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["savedroutingmodule",{"_index":2458,"title":{"modules/SavedRoutingModule.html":{}},"body":{"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["savedslidercomponent",{"_index":361,"title":{"components/SavedSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["savedstops",{"_index":480,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["saveroute",{"_index":25,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["saveroute(code",{"_index":1144,"title":{},"body":{"injectables/DataService.html":{}}}],["savestop",{"_index":26,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataService.html":{}}}],["savestop(code",{"_index":1146,"title":{},"body":{"injectables/DataService.html":{}}}],["scaffolding",{"_index":3315,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":481,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/StationEntityComponent.html":{}}}],["schedule.entity",{"_index":241,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{}}}],["schedule.routecode",{"_index":1528,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["schedule.triptime",{"_index":1803,"title":{},"body":{"components/ListItemComponent.html":{}}}],["schedules",{"_index":116,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"components/ListItemComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["schedulestate",{"_index":488,"title":{"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["schedulestateadapter",{"_index":499,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["schedulestateadapter.getinitialstate",{"_index":1529,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["schedulestateadapter.removeall(state.schedule",{"_index":544,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["schedulestateadapter.setone(action.schedules",{"_index":526,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["screen",{"_index":979,"title":{},"body":{"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{}}}],["scrollposition",{"_index":2752,"title":{},"body":{"components/StationListComponent.html":{}}}],["search",{"_index":1407,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["searchtext",{"_index":1372,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/StopDropDownComponent.html":{},"interfaces/TripState.html":{}}}],["searchvalue",{"_index":1215,"title":{},"body":{"injectables/DataShareService.html":{}}}],["searchvaluemsg",{"_index":1216,"title":{},"body":{"injectables/DataShareService.html":{}}}],["seat",{"_index":2643,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["seats",{"_index":2646,"title":{},"body":{"components/SidebarOptionsComponent.html":{},"components/TripComponent.html":{}}}],["section",{"_index":1427,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/TripComponent.html":{}}}],["see",{"_index":2747,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["select",{"_index":364,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"classes/CustomSerializer.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouterStateUrl.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["select(data",{"_index":2116,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["select(day",{"_index":2481,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.actions",{"_index":244,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{},"injectables/RouterEffects-1.html":{}}}],["select.component.css",{"_index":2474,"title":{},"body":{"components/SelectComponent.html":{}}}],["select.component.html",{"_index":2475,"title":{},"body":{"components/SelectComponent.html":{}}}],["select>option",{"_index":2495,"title":{},"body":{"components/SelectComponent.html":{}}}],["select>select",{"_index":2494,"title":{},"body":{"components/SelectComponent.html":{}}}],["select_action",{"_index":1047,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["select_actions",{"_index":243,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/ListItemComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"injectables/SocketIOService.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"interfaces/msg.html":{}}}],["select_actions.emptyplan",{"_index":2355,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.emptyroutes",{"_index":2352,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.module({module",{"_index":2345,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.selectbooking({trip_id",{"_index":2401,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.selectitinerary({index",{"_index":2407,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.selectline({id",{"_index":2349,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.selectroute({code",{"_index":2350,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["select_actions.selectstop({code",{"_index":2351,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["selectbooking",{"_index":681,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["selectbus",{"_index":1003,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["selectbus(bus",{"_index":1016,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["selectcomponent",{"_index":363,"title":{"components/SelectComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["selectcurrentlineroutes",{"_index":199,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/RouteListComponent.html":{}}}],["selected",{"_index":2744,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["selectedday",{"_index":2753,"title":{},"body":{"components/StationListComponent.html":{}}}],["selectedtab",{"_index":2671,"title":{},"body":{"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["selectedvalue",{"_index":2110,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["selectendpoint",{"_index":1231,"title":{},"body":{"injectables/DataShareService.html":{}}}],["selectendpoint(obs",{"_index":1250,"title":{},"body":{"injectables/DataShareService.html":{}}}],["selectid",{"_index":785,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["selectitinerary",{"_index":2033,"title":{},"body":{"components/MapAreaComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/TripDetailsComponent.html":{}}}],["selector",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["selectors",{"_index":1384,"title":{},"body":{"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/TripState.html":{}}}],["selectors/appstate.selectors",{"_index":201,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["selectors/router.selectors",{"_index":2411,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["selectroutepoints",{"_index":200,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["selectstop",{"_index":1778,"title":{},"body":{"components/ListItemComponent.html":{},"classes/StopsMap.html":{}}}],["selectstop(code",{"_index":2900,"title":{},"body":{"classes/StopsMap.html":{}}}],["self",{"_index":857,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["send",{"_index":1932,"title":{},"body":{"components/MainInputComponent.html":{}}}],["sendbusstatus",{"_index":1232,"title":{},"body":{"injectables/DataShareService.html":{}}}],["sendbusstatus(buses",{"_index":1253,"title":{},"body":{"injectables/DataShareService.html":{}}}],["serialize",{"_index":1072,"title":{},"body":{"classes/CustomSerializer.html":{}}}],["serialize(routerstate",{"_index":1073,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["serializer",{"_index":452,"title":{},"body":{"modules/AppModule.html":{}}}],["serializer.ts",{"_index":1070,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["serializer.ts:13",{"_index":1075,"title":{},"body":{"classes/CustomSerializer.html":{}}}],["serif",{"_index":761,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["serve",{"_index":3308,"title":{},"body":{"index.html":{}}}],["server",{"_index":3306,"title":{},"body":{"index.html":{}}}],["servicedate",{"_index":1558,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["services/auth",{"_index":641,"title":{},"body":{"modules/AuthModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedRoutingModule.html":{},"modules/SidebarRoutingModule.html":{}}}],["services/auth.service",{"_index":640,"title":{},"body":{"modules/AuthModule.html":{},"components/RegisterComponent.html":{}}}],["services/socket",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["setcurrentstop",{"_index":2886,"title":{},"body":{"classes/StopsMap.html":{}}}],["setcurrentstop(point",{"_index":2902,"title":{},"body":{"classes/StopsMap.html":{}}}],["settimeout",{"_index":2568,"title":{},"body":{"components/SideNavComponent.html":{},"components/StationListComponent.html":{},"components/ToasterComponent.html":{}}}],["settings",{"_index":2160,"title":{},"body":{"components/OptionComponent.html":{},"components/SideNavComponent.html":{}}}],["shadow",{"_index":833,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["shape",{"_index":3192,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["shape.concat(path",{"_index":3208,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["share.service",{"_index":949,"title":{},"body":{"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["share.service.ts",{"_index":1199,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:12",{"_index":1290,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:13",{"_index":1259,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:14",{"_index":1277,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:15",{"_index":1274,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:16",{"_index":1265,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:17",{"_index":1287,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:18",{"_index":1283,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:19",{"_index":1271,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:20",{"_index":1268,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:21",{"_index":1262,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:22",{"_index":1293,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:23",{"_index":1280,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:25",{"_index":1292,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:26",{"_index":1261,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:27",{"_index":1279,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:28",{"_index":1276,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:29",{"_index":1267,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:30",{"_index":1289,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:31",{"_index":1285,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:32",{"_index":1273,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:33",{"_index":1270,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:34",{"_index":1264,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:35",{"_index":1295,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:36",{"_index":1235,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:40",{"_index":1258,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:44",{"_index":1254,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:48",{"_index":1241,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:52",{"_index":1239,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:56",{"_index":1251,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:60",{"_index":1256,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:64",{"_index":1247,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:68",{"_index":1245,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:72",{"_index":1243,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:76",{"_index":1236,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:80",{"_index":1249,"title":{},"body":{"injectables/DataShareService.html":{}}}],["share.service.ts:84",{"_index":1237,"title":{},"body":{"injectables/DataShareService.html":{}}}],["shared",{"_index":634,"title":{},"body":{"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{}}}],["sharedmodule",{"_index":623,"title":{"modules/SharedModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["sharp",{"_index":3070,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["show",{"_index":1430,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{},"components/ToasterComponent.html":{}}}],["showdefault",{"_index":1233,"title":{},"body":{"injectables/DataShareService.html":{}}}],["showdefault(flag",{"_index":1255,"title":{},"body":{"injectables/DataShareService.html":{}}}],["showmapicon",{"_index":3038,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["showqr",{"_index":921,"title":{},"body":{"components/BookingsComponent.html":{}}}],["showqr(booking",{"_index":937,"title":{},"body":{"components/BookingsComponent.html":{}}}],["side",{"_index":368,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["sidebar",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["sidebarmodule",{"_index":405,"title":{"modules/SidebarModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["sidebaroptionscomponent",{"_index":365,"title":{"components/SidebarOptionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["sidebarroutingmodule",{"_index":2627,"title":{"modules/SidebarRoutingModule.html":{}},"body":{"modules/SidebarModule.html":{},"modules/SidebarRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["sidenavcomponent",{"_index":367,"title":{"components/SideNavComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["simple",{"_index":1906,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["simplechanges",{"_index":2760,"title":{},"body":{"components/StationListComponent.html":{},"components/ToasterComponent.html":{}}}],["sit",{"_index":2589,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["size",{"_index":764,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["sizing",{"_index":2095,"title":{},"body":{"components/MapAreaComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{}}}],["slice(0",{"_index":913,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{}}}],["slide",{"_index":1234,"title":{},"body":{"injectables/DataShareService.html":{},"components/SliderComponent.html":{}}}],["slide(tab",{"_index":1257,"title":{},"body":{"injectables/DataShareService.html":{},"components/SliderComponent.html":{}}}],["slideanimation",{"_index":1611,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{}}}],["slider",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["slider'},{'name",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["slider.component",{"_index":2270,"title":{},"body":{"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["slider.component.css",{"_index":2224,"title":{},"body":{"components/PlacesSliderComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["slider.component.html",{"_index":2225,"title":{},"body":{"components/PlacesSliderComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["slider.component.ts",{"_index":2223,"title":{},"body":{"components/PlacesSliderComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["slider.component.ts:15",{"_index":2232,"title":{},"body":{"components/PlacesSliderComponent.html":{}}}],["slider.component.ts:16",{"_index":2228,"title":{},"body":{"components/PlacesSliderComponent.html":{}}}],["slider.component.ts:20",{"_index":2231,"title":{},"body":{"components/PlacesSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":2469,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["slider.component.ts:24",{"_index":2230,"title":{},"body":{"components/PlacesSliderComponent.html":{},"components/SavedSliderComponent.html":{}}}],["slider.component.ts:28",{"_index":2466,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["slider.component.ts:30",{"_index":2861,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:31",{"_index":2860,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:32",{"_index":2855,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:35",{"_index":2464,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":2468,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["slider.component.ts:42",{"_index":2856,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:43",{"_index":2467,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["slider.component.ts:47",{"_index":2465,"title":{},"body":{"components/SavedSliderComponent.html":{}}}],["slider.component.ts:58",{"_index":2859,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:62",{"_index":2858,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:66",{"_index":2857,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider.component.ts:70",{"_index":2862,"title":{},"body":{"components/StopSliderComponent.html":{}}}],["slider/places",{"_index":2222,"title":{},"body":{"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"modules/RoutesRoutingModule.html":{}}}],["slider/saved",{"_index":2445,"title":{},"body":{"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{}}}],["slider/stop",{"_index":2840,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{}}}],["slidercomponent",{"_index":370,"title":{"components/SliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["slideto",{"_index":3294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["slideto(direction",{"_index":3297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["slightly",{"_index":3066,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["slightly_left",{"_index":3048,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["slightly_right",{"_index":3050,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["slug",{"_index":777,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"injectables/DataService.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"components/RouteListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["small",{"_index":864,"title":{},"body":{"components/BookingComponent.html":{}}}],["snackbar",{"_index":2965,"title":{},"body":{"components/ToasterComponent.html":{}}}],["snackbar.show",{"_index":2974,"title":{},"body":{"components/ToasterComponent.html":{}}}],["snapshot",{"_index":1086,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["socket",{"_index":2683,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["socket.io",{"_index":2685,"title":{},"body":{"injectables/SocketIOService.html":{},"dependencies.html":{},"interfaces/msg.html":{}}}],["socketioservice",{"_index":272,"title":{"injectables/SocketIOService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/SocketIOService.html":{},"interfaces/msg.html":{},"overview.html":{}}}],["solid",{"_index":1441,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["sort",{"_index":3028,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"modules/AuthModule.html":{},"modules/AuthRoutingModule.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/MiniMapComponent.html":{},"guards/MiniMapService.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"modules/PlannerModule.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"modules/SavedModule.html":{},"modules/SavedRoutingModule.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"index.html":{},"interfaces/msg.html":{}}}],["space",{"_index":866,"title":{},"body":{"components/BookingComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LoginComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["span",{"_index":2612,"title":{},"body":{"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["specify",{"_index":2598,"title":{},"body":{"components/SideNavComponent.html":{}}}],["spinner",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["spinner.component.css",{"_index":2698,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinner.component.html",{"_index":2699,"title":{},"body":{"components/SpinnerComponent.html":{}}}],["spinnercomponent",{"_index":372,"title":{"components/SpinnerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["src/.../route",{"_index":3295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":468,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component",{"_index":1742,"title":{},"body":{"modules/LinesModule.html":{}}}],["src/app/app.component.ts",{"_index":252,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:12",{"_index":273,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":278,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":409,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/modules/auth/auth",{"_index":643,"title":{},"body":{"modules/AuthRoutingModule.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":624,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/components/login/login.component.ts",{"_index":1865,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:19",{"_index":1879,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:20",{"_index":1871,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:28",{"_index":1876,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:38",{"_index":1877,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:42",{"_index":1872,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:46",{"_index":1874,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/login/login.component.ts:50",{"_index":1875,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts",{"_index":2285,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:19",{"_index":2295,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:20",{"_index":2289,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:28",{"_index":2292,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:39",{"_index":2294,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:43",{"_index":2290,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:47",{"_index":2291,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/components/register/register.component.ts:51",{"_index":2293,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/modules/auth/state/auth.effects.ts",{"_index":584,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/modules/auth/state/auth.effects.ts:13",{"_index":596,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/modules/auth/state/auth.effects.ts:23",{"_index":599,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/modules/auth/state/auth.effects.ts:9",{"_index":588,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["src/app/modules/auth/state/message.reducer.ts",{"_index":2122,"title":{},"body":{"interfaces/Notification.html":{}}}],["src/app/modules/lines/components/lines",{"_index":1590,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{}}}],["src/app/modules/lines/components/list",{"_index":1772,"title":{},"body":{"components/ListItemComponent.html":{}}}],["src/app/modules/lines/components/route",{"_index":1036,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts",{"_index":2473,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts:15",{"_index":2490,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts:20",{"_index":2479,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts:21",{"_index":2478,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts:22",{"_index":2477,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts:26",{"_index":2480,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/select/select.component.ts:28",{"_index":2482,"title":{},"body":{"components/SelectComponent.html":{}}}],["src/app/modules/lines/components/slider/slider.component.ts",{"_index":2670,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/modules/lines/components/slider/slider.component.ts:18",{"_index":2675,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/modules/lines/components/slider/slider.component.ts:19",{"_index":2672,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/modules/lines/components/slider/slider.component.ts:26",{"_index":2673,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/modules/lines/components/slider/slider.component.ts:38",{"_index":2674,"title":{},"body":{"components/SliderComponent.html":{}}}],["src/app/modules/lines/components/station",{"_index":2749,"title":{},"body":{"components/StationListComponent.html":{}}}],["src/app/modules/lines/lines",{"_index":1762,"title":{},"body":{"modules/LinesRoutingModule.html":{}}}],["src/app/modules/lines/lines.module.ts",{"_index":1741,"title":{},"body":{"modules/LinesModule.html":{}}}],["src/app/modules/lines/state/live.data.store",{"_index":1042,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/StationEntityComponent.html":{}}}],["src/app/modules/lines/state/live.data.store.ts",{"_index":1812,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:102",{"_index":1824,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:25",{"_index":1821,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:35",{"_index":1825,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:48",{"_index":1823,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:61",{"_index":1834,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:75",{"_index":1841,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:89",{"_index":1844,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:93",{"_index":1846,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/lines/state/live.data.store.ts:98",{"_index":1822,"title":{},"body":{"injectables/LiveDataStore.html":{}}}],["src/app/modules/map/components/map",{"_index":2011,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["src/app/modules/map/map.module.ts",{"_index":2100,"title":{},"body":{"modules/MapModule.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts",{"_index":1625,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:10",{"_index":1648,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:11",{"_index":1645,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:18",{"_index":1677,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:30",{"_index":1671,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:42",{"_index":1679,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:49",{"_index":1675,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/linesmapcontrollers.ts:58",{"_index":1672,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts",{"_index":1980,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:10",{"_index":1984,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:11",{"_index":1983,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:12",{"_index":1986,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:13",{"_index":1989,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:15",{"_index":1982,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:21",{"_index":1991,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:28",{"_index":1990,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:32",{"_index":1992,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:37",{"_index":1993,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:44",{"_index":1994,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:7",{"_index":1987,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:8",{"_index":1985,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/map.ts:9",{"_index":1988,"title":{},"body":{"classes/Map.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts",{"_index":2882,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts:12",{"_index":2894,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts:23",{"_index":2895,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts:24",{"_index":2887,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts:32",{"_index":2897,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts:53",{"_index":2903,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/stopmapcontroller.ts:72",{"_index":2901,"title":{},"body":{"classes/StopsMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts",{"_index":3131,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:10",{"_index":3141,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:11",{"_index":3143,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:12",{"_index":3140,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:13",{"_index":3137,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:133",{"_index":3148,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:141",{"_index":3149,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:44",{"_index":3154,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:54",{"_index":3152,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:59",{"_index":3145,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/map/mapcontrollers/tripplannermapcontrollers.ts:84",{"_index":3151,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["src/app/modules/planner/components/book",{"_index":722,"title":{},"body":{"components/BookOptionsComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts",{"_index":789,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:11",{"_index":799,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:12",{"_index":801,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:13",{"_index":800,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:15",{"_index":803,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:16",{"_index":804,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:17",{"_index":798,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:21",{"_index":805,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:23",{"_index":807,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:27",{"_index":806,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/booking/booking.component.ts:31",{"_index":808,"title":{},"body":{"components/BookingComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts",{"_index":916,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:21",{"_index":941,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:22",{"_index":940,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:23",{"_index":925,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:33",{"_index":932,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:48",{"_index":934,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:52",{"_index":936,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:59",{"_index":928,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:63",{"_index":938,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:67",{"_index":939,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/bookings/bookings.component.ts:71",{"_index":930,"title":{},"body":{"components/BookingsComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts",{"_index":1534,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts:13",{"_index":1542,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts:14",{"_index":1536,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts:21",{"_index":1538,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts:25",{"_index":1541,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts:29",{"_index":1540,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/input/input.component.ts:36",{"_index":1537,"title":{},"body":{"components/InputComponent.html":{}}}],["src/app/modules/planner/components/places",{"_index":2218,"title":{},"body":{"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts",{"_index":2165,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:17",{"_index":2187,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:18",{"_index":2185,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:19",{"_index":2184,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:20",{"_index":2188,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:21",{"_index":2186,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:22",{"_index":2175,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:31",{"_index":2181,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:50",{"_index":2180,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:56",{"_index":2179,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:64",{"_index":2177,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/places/places.component.ts:79",{"_index":2183,"title":{},"body":{"components/PlacesComponent.html":{}}}],["src/app/modules/planner/components/qr/qr.component.ts",{"_index":2273,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["src/app/modules/planner/components/qr/qr.component.ts:20",{"_index":2281,"title":{},"body":{"components/QrComponent.html":{}}}],["src/app/modules/planner/components/qr/qr.component.ts:24",{"_index":2283,"title":{},"body":{"components/QrComponent.html":{}}}],["src/app/modules/planner/components/qr/qr.component.ts:31",{"_index":2282,"title":{},"body":{"components/QrComponent.html":{}}}],["src/app/modules/planner/components/stop",{"_index":2788,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["src/app/modules/planner/components/trip",{"_index":3034,"title":{},"body":{"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts",{"_index":2982,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:12",{"_index":2988,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:13",{"_index":2991,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:14",{"_index":2989,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:15",{"_index":2992,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:17",{"_index":2993,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:18",{"_index":2987,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:22",{"_index":2994,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:24",{"_index":2996,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:28",{"_index":2998,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/components/trip/trip.component.ts:32",{"_index":2995,"title":{},"body":{"components/TripComponent.html":{}}}],["src/app/modules/planner/pipes/bookings.pipe.ts",{"_index":901,"title":{},"body":{"pipes/BookingPipe.html":{}}}],["src/app/modules/planner/pipes/bookings.pipe.ts:7",{"_index":904,"title":{},"body":{"pipes/BookingPipe.html":{}}}],["src/app/modules/planner/planner",{"_index":2437,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["src/app/modules/planner/planner.module.ts",{"_index":2240,"title":{},"body":{"modules/PlannerModule.html":{}}}],["src/app/modules/planner/state/bookings.store.ts",{"_index":671,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:33",{"_index":989,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:39",{"_index":993,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:44",{"_index":991,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:48",{"_index":995,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:52",{"_index":990,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:57",{"_index":994,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/bookings.store.ts:70",{"_index":992,"title":{},"body":{"injectables/BookingsStore.html":{}}}],["src/app/modules/planner/state/directions.store",{"_index":1543,"title":{},"body":{"components/InputComponent.html":{},"components/PlacesComponent.html":{},"modules/PlannerModule.html":{},"components/StopDropDownComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["src/app/modules/planner/state/directions.store.ts",{"_index":1310,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["src/app/modules/planner/state/directions.store.ts:107",{"_index":1349,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:116",{"_index":1329,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:125",{"_index":1330,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:129",{"_index":1328,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:133",{"_index":1331,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:137",{"_index":1347,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:39",{"_index":1327,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:45",{"_index":1351,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:49",{"_index":1334,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:53",{"_index":1373,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:57",{"_index":1360,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:67",{"_index":1332,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:71",{"_index":1371,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:81",{"_index":1374,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:85",{"_index":1366,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:89",{"_index":1376,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:93",{"_index":1362,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/planner/state/directions.store.ts:97",{"_index":1365,"title":{},"body":{"injectables/DirectionsStore.html":{}}}],["src/app/modules/saved/components/saved",{"_index":2444,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["src/app/modules/saved/saved",{"_index":2461,"title":{},"body":{"modules/SavedRoutingModule.html":{}}}],["src/app/modules/saved/saved.module.ts",{"_index":2459,"title":{},"body":{"modules/SavedModule.html":{}}}],["src/app/modules/shared",{"_index":996,"title":{},"body":{"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"modules/LinesModule.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"modules/SharedModule.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/ToasterComponent.html":{}}}],["src/app/modules/sidebar/components/side",{"_index":2519,"title":{},"body":{"components/SideNavComponent.html":{}}}],["src/app/modules/sidebar/components/sidebar",{"_index":2636,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["src/app/modules/sidebar/sidebar",{"_index":2656,"title":{},"body":{"modules/SidebarRoutingModule.html":{}}}],["src/app/modules/sidebar/sidebar.module.ts",{"_index":2628,"title":{},"body":{"modules/SidebarModule.html":{}}}],["src/app/modules/stops/components/stop",{"_index":2839,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["src/app/modules/stops/components/stops",{"_index":2922,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["src/app/modules/stops/components/stops/stops.component.ts",{"_index":2865,"title":{},"body":{"components/StopsComponent.html":{}}}],["src/app/modules/stops/components/stops/stops.component.ts:17",{"_index":2868,"title":{},"body":{"components/StopsComponent.html":{}}}],["src/app/modules/stops/components/stops/stops.component.ts:25",{"_index":2872,"title":{},"body":{"components/StopsComponent.html":{}}}],["src/app/modules/stops/components/stops/stops.component.ts:30",{"_index":2874,"title":{},"body":{"components/StopsComponent.html":{}}}],["src/app/modules/stops/components/stops/stops.component.ts:34",{"_index":2869,"title":{},"body":{"components/StopsComponent.html":{}}}],["src/app/modules/stops/components/stops/stops.component.ts:38",{"_index":2871,"title":{},"body":{"components/StopsComponent.html":{}}}],["src/app/modules/stops/state/stop.store",{"_index":2841,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["src/app/modules/stops/state/stop.store.ts",{"_index":1863,"title":{},"body":{"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["src/app/modules/stops/state/stop.store.ts:22",{"_index":2945,"title":{},"body":{"injectables/StopsStore.html":{}}}],["src/app/modules/stops/state/stop.store.ts:28",{"_index":2946,"title":{},"body":{"injectables/StopsStore.html":{}}}],["src/app/modules/stops/state/stop.store.ts:33",{"_index":2947,"title":{},"body":{"injectables/StopsStore.html":{}}}],["src/app/modules/stops/state/stop.store.ts:47",{"_index":2948,"title":{},"body":{"injectables/StopsStore.html":{}}}],["src/app/modules/stops/stops",{"_index":2943,"title":{},"body":{"modules/StopsRoutingModule.html":{}}}],["src/app/modules/stops/stops.module.ts",{"_index":2940,"title":{},"body":{"modules/StopsModule.html":{}}}],["src/app/pipes/filterpipe",{"_index":2518,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/pipes/filterpipe.ts",{"_index":1481,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/pipes/filterpipe.ts:8",{"_index":1482,"title":{},"body":{"pipes/FilterPipe.html":{}}}],["src/app/route",{"_index":1612,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/SideNavComponent.html":{},"miscellaneous/functions.html":{}}}],["src/app/services/auth",{"_index":604,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["src/app/services/auth.service",{"_index":1046,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/DropdownOptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/TripListComponent.html":{}}}],["src/app/services/auth.service.ts",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:10",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:16",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:26",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:32",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/data",{"_index":948,"title":{},"body":{"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataShareService.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"modules/MapModule.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"modules/SidebarModule.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["src/app/services/data.service",{"_index":186,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"modules/SavedModule.html":{},"injectables/StopsStore.html":{},"classes/TripPlannerMap.html":{}}}],["src/app/services/data.service.ts",{"_index":1087,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:103",{"_index":1143,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:107",{"_index":1107,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:113",{"_index":1119,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:120",{"_index":1109,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:127",{"_index":1117,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:134",{"_index":1147,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:141",{"_index":1113,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:148",{"_index":1138,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:155",{"_index":1137,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:162",{"_index":1145,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:169",{"_index":1111,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:176",{"_index":1136,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:183",{"_index":1148,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:19",{"_index":1152,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:20",{"_index":1150,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:21",{"_index":1104,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:29",{"_index":1114,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:36",{"_index":1115,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:43",{"_index":1125,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:50",{"_index":1131,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:57",{"_index":1135,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:64",{"_index":1127,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:71",{"_index":1121,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:78",{"_index":1123,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:85",{"_index":1133,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:92",{"_index":1129,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/data.service.ts:99",{"_index":1140,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/services/mini",{"_index":1764,"title":{},"body":{"modules/LinesRoutingModule.html":{},"guards/MiniMapService.html":{},"modules/RoutesRoutingModule.html":{},"modules/SidebarModule.html":{},"modules/StopsRoutingModule.html":{}}}],["src/app/services/socket",{"_index":2681,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["src/app/state/actions/api",{"_index":600,"title":{},"body":{"injectables/AuthEffects.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"components/LoginComponent.html":{},"interfaces/Notification.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["src/app/state/actions/navigation.actions",{"_index":1418,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{}}}],["src/app/state/actions/select.actions",{"_index":1048,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/ListItemComponent.html":{},"components/RouteDetailsComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{}}}],["src/app/state/effects/api.effects.ts",{"_index":6,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:105",{"_index":80,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:117",{"_index":153,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:128",{"_index":173,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:139",{"_index":59,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:150",{"_index":54,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:161",{"_index":168,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:172",{"_index":136,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:18",{"_index":33,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:185",{"_index":142,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:198",{"_index":128,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:211",{"_index":158,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:221",{"_index":163,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:26",{"_index":98,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:36",{"_index":90,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:47",{"_index":113,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:59",{"_index":121,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:71",{"_index":147,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:81",{"_index":101,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/api.effects.ts:93",{"_index":70,"title":{},"body":{"injectables/ApiEffects.html":{}}}],["src/app/state/effects/router.effects.ts",{"_index":2321,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:109",{"_index":2408,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:119",{"_index":2378,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:128",{"_index":2403,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:137",{"_index":2404,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:146",{"_index":2386,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:15",{"_index":2336,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:155",{"_index":2389,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:164",{"_index":2384,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:173",{"_index":2356,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:182",{"_index":2394,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:199",{"_index":2346,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:218",{"_index":2400,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:233",{"_index":2337,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:24",{"_index":2381,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:33",{"_index":2366,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:40",{"_index":2364,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:53",{"_index":2369,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:64",{"_index":2353,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:78",{"_index":2375,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:87",{"_index":2358,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/effects/router.effects.ts:96",{"_index":2374,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["src/app/state/entities/booking.entity",{"_index":676,"title":{},"body":{"interfaces/BookInfo.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["src/app/state/entities/booking.entity.ts",{"_index":774,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/BookingState.html":{}}}],["src/app/state/entities/itinerary",{"_index":2999,"title":{},"body":{"components/TripComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{}}}],["src/app/state/entities/itinerary.ts",{"_index":1553,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Leg.html":{},"interfaces/Plan.html":{},"interfaces/Step.html":{},"interfaces/Vertex.html":{}}}],["src/app/state/entities/line.entity",{"_index":1018,"title":{},"body":{"components/BusEntityComponent.html":{},"components/LinesDropdownComponent.html":{},"components/RouteListComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["src/app/state/entities/line.entity.ts",{"_index":1500,"title":{},"body":{"interfaces/ILine.html":{},"interfaces/LineState.html":{}}}],["src/app/state/entities/live.data",{"_index":1019,"title":{},"body":{"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/RouteDetailsComponent.html":{},"components/StationEntityComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{}}}],["src/app/state/entities/live.data.ts",{"_index":1488,"title":{},"body":{"interfaces/IArrival.html":{}}}],["src/app/state/entities/map.data.entity",{"_index":1696,"title":{},"body":{"classes/LinesMap.html":{}}}],["src/app/state/entities/map.data.entity.ts",{"_index":1509,"title":{},"body":{"interfaces/IMapData.html":{},"interfaces/TripData.html":{}}}],["src/app/state/entities/notification.ts",{"_index":1515,"title":{},"body":{"interfaces/INotification.html":{}}}],["src/app/state/entities/route.entity",{"_index":1040,"title":{},"body":{"interfaces/CurrentRoute.html":{},"pipes/FilterPipe.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/StationListComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["src/app/state/entities/route.entity.ts",{"_index":1518,"title":{},"body":{"interfaces/IPoint.html":{},"interfaces/IRoute.html":{},"interfaces/IRouteInfo.html":{},"interfaces/RouteState.html":{}}}],["src/app/state/entities/schedule.entity",{"_index":1790,"title":{},"body":{"components/ListItemComponent.html":{},"components/StopsMapComponent.html":{}}}],["src/app/state/entities/schedule.entity.ts",{"_index":1523,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/ScheduleState.html":{}}}],["src/app/state/entities/stop.entity",{"_index":1483,"title":{},"body":{"pipes/FilterPipe.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{}}}],["src/app/state/entities/stop.entity.ts",{"_index":1531,"title":{},"body":{"interfaces/IStop.html":{},"interfaces/StopState.html":{}}}],["src/app/state/reducers/api",{"_index":476,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["src/app/state/selectors/appstate.selectors",{"_index":682,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["src/app/state/selectors/custom",{"_index":1069,"title":{},"body":{"classes/CustomSerializer.html":{},"interfaces/RouterStateUrl.html":{}}}],["src/app/state/store/api",{"_index":583,"title":{},"body":{"interfaces/AppState-1.html":{}}}],["src/app/state/store/api.effects.ts",{"_index":216,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:106",{"_index":221,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:118",{"_index":231,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:129",{"_index":235,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:140",{"_index":219,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:151",{"_index":218,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:162",{"_index":234,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:173",{"_index":228,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:186",{"_index":229,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:19",{"_index":217,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:199",{"_index":227,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:212",{"_index":232,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:222",{"_index":233,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:27",{"_index":223,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:37",{"_index":222,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:48",{"_index":225,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:60",{"_index":226,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:72",{"_index":230,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:82",{"_index":224,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/api.effects.ts:94",{"_index":220,"title":{},"body":{"injectables/ApiEffects-1.html":{}}}],["src/app/state/store/booking.entity.ts",{"_index":788,"title":{},"body":{"interfaces/Booking-1.html":{},"interfaces/BookingState-1.html":{}}}],["src/app/state/store/itinerary.ts",{"_index":1589,"title":{},"body":{"interfaces/Itinerary-1.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan-1.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex-1.html":{}}}],["src/app/state/store/line.entity.ts",{"_index":1507,"title":{},"body":{"interfaces/ILine-1.html":{},"interfaces/LineState-1.html":{}}}],["src/app/state/store/live.data.ts",{"_index":1499,"title":{},"body":{"interfaces/IArrival-1.html":{}}}],["src/app/state/store/map.data.entity.ts",{"_index":1513,"title":{},"body":{"interfaces/IMapData-1.html":{},"interfaces/TripData-1.html":{}}}],["src/app/state/store/notification.ts",{"_index":1517,"title":{},"body":{"interfaces/INotification-1.html":{}}}],["src/app/state/store/route.entity.ts",{"_index":1521,"title":{},"body":{"interfaces/IPoint-1.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState-1.html":{}}}],["src/app/state/store/router.effects.ts",{"_index":2414,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:108",{"_index":2435,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:118",{"_index":2426,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:127",{"_index":2433,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:136",{"_index":2434,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:14",{"_index":2415,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:145",{"_index":2429,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:154",{"_index":2430,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:163",{"_index":2428,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:172",{"_index":2419,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:181",{"_index":2431,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:198",{"_index":2417,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:217",{"_index":2432,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:23",{"_index":2427,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:230",{"_index":2416,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:32",{"_index":2422,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:39",{"_index":2421,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:52",{"_index":2423,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:63",{"_index":2418,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:77",{"_index":2425,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:86",{"_index":2420,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/router.effects.ts:95",{"_index":2424,"title":{},"body":{"injectables/RouterEffects-1.html":{}}}],["src/app/state/store/schedule.entity.ts",{"_index":1530,"title":{},"body":{"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState-1.html":{}}}],["src/app/state/store/stop.entity.ts",{"_index":1533,"title":{},"body":{"interfaces/IStop-1.html":{},"interfaces/StopState-1.html":{}}}],["stack",{"_index":2599,"title":{},"body":{"components/SideNavComponent.html":{}}}],["stairs",{"_index":2739,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["start",{"_index":769,"title":{},"body":{"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/MiniMapComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["start(msg",{"_index":2955,"title":{},"body":{"components/ToasterComponent.html":{}}}],["start.length",{"_index":3236,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["started",{"_index":3299,"title":{"index.html":{}},"body":{}}],["startplaceholder",{"_index":1401,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["startstop",{"_index":778,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["starttime",{"_index":1559,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["startvalue",{"_index":1356,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["startwith",{"_index":1609,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["state",{"_index":507,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"interfaces/Notification.html":{},"components/PlacesComponent.html":{},"injectables/StopsStore.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["state.arrivals",{"_index":1845,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["state.book",{"_index":699,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["state.bookings",{"_index":534,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.buses",{"_index":1843,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["state.delete_id",{"_index":711,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["state.destination",{"_index":1353,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.destination.length",{"_index":1337,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/PlacesComponent.html":{},"interfaces/TripState.html":{}}}],["state.destination[1",{"_index":1391,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/PlacesComponent.html":{},"interfaces/TripState.html":{}}}],["state.direction",{"_index":1369,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.endvalue",{"_index":1357,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.fetch",{"_index":1335,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.info",{"_index":700,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["state.lines",{"_index":515,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.msg",{"_index":2135,"title":{},"body":{"interfaces/Notification.html":{}}}],["state.occupancy",{"_index":578,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.routes",{"_index":517,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.routes.activeroute",{"_index":571,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.savedroutes",{"_index":559,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.savedroutes!.filter(code",{"_index":561,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.savedstops",{"_index":551,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.savedstops!.filter(code",{"_index":553,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.schedule",{"_index":527,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.searchtext",{"_index":1393,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.start",{"_index":1355,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.start.length",{"_index":1336,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/PlacesComponent.html":{},"interfaces/TripState.html":{}}}],["state.start[1",{"_index":1388,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/PlacesComponent.html":{},"interfaces/TripState.html":{}}}],["state.startvalue",{"_index":1359,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["state.stops",{"_index":512,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["state.toaster.next(msg",{"_index":690,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["state/actions/api",{"_index":1378,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/SelectComponent.html":{},"components/StationEntityComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/TripState.html":{}}}],["state/actions/navigation.actions",{"_index":2810,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["state/actions/select.actions",{"_index":2687,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["state/bookings.store",{"_index":944,"title":{},"body":{"components/BookingsComponent.html":{},"components/TripListComponent.html":{}}}],["state/directions.store",{"_index":947,"title":{},"body":{"components/BookingsComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{}}}],["state/effects/api.effects",{"_index":435,"title":{},"body":{"modules/AppModule.html":{}}}],["state/effects/router.effects",{"_index":449,"title":{},"body":{"modules/AppModule.html":{}}}],["state/entities/booking.entity",{"_index":1162,"title":{},"body":{"injectables/DataService.html":{}}}],["state/entities/itinerary",{"_index":1161,"title":{},"body":{"injectables/DataService.html":{}}}],["state/entities/line.entity",{"_index":1155,"title":{},"body":{"injectables/DataService.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["state/entities/live.data",{"_index":1157,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataShareService.html":{}}}],["state/entities/route.entity",{"_index":1156,"title":{},"body":{"injectables/DataService.html":{}}}],["state/entities/schedule.entity",{"_index":1158,"title":{},"body":{"injectables/DataService.html":{}}}],["state/entities/stop.entity",{"_index":1159,"title":{},"body":{"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["state/live.data.store",{"_index":1733,"title":{},"body":{"components/LinesMapComponent.html":{},"components/SliderComponent.html":{}}}],["state/message.reducer",{"_index":1884,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["state/reducers/api",{"_index":437,"title":{},"body":{"modules/AppModule.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/SocketIOService.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{},"interfaces/msg.html":{}}}],["state/selectors/appstate.selectors",{"_index":1849,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["state/selectors/custom",{"_index":451,"title":{},"body":{"modules/AppModule.html":{}}}],["state/stop.store",{"_index":2930,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["statekey",{"_index":467,"title":{},"body":{"modules/AppModule.html":{}}}],["station",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["station>div",{"_index":2786,"title":{},"body":{"components/StationListComponent.html":{}}}],["stationentitycomponent",{"_index":374,"title":{"components/StationEntityComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["stationlist",{"_index":2754,"title":{},"body":{"components/StationListComponent.html":{}}}],["stationlistcomponent",{"_index":376,"title":{"components/StationListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"modules/LinesModule.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["stations",{"_index":2780,"title":{},"body":{"components/StationListComponent.html":{}}}],["step",{"_index":1565,"title":{"interfaces/Step.html":{},"interfaces/Step-1.html":{}},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripDetailsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["step.absolutedirection",{"_index":3086,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["step.distance}}m",{"_index":3090,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["step.streetname",{"_index":3088,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["step>i",{"_index":3111,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["steps",{"_index":1580,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/TripDetailsComponent.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["stop",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["stop!?.longitude",{"_index":2061,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["stop$.pipe",{"_index":1827,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["stop.arrival",{"_index":3100,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["stop.code",{"_index":566,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["stop.desc",{"_index":1715,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{}}}],["stop.desc}}({{stop.code",{"_index":1801,"title":{},"body":{"components/ListItemComponent.html":{},"components/StationEntityComponent.html":{}}}],["stop.entity",{"_index":242,"title":{},"body":{"injectables/ApiEffects-1.html":{},"interfaces/AppState-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["stop.lines",{"_index":2879,"title":{},"body":{"components/StopsComponent.html":{}}}],["stop.lines.split",{"_index":2880,"title":{},"body":{"components/StopsComponent.html":{}}}],["stop.lon",{"_index":3207,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["stop.longitude",{"_index":1714,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{}}}],["stop.name",{"_index":3099,"title":{},"body":{"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["stop.png",{"_index":1657,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["stop_data",{"_index":2387,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{}}}],["stop_data_saved",{"_index":2449,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["stopcode",{"_index":1524,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopsComponent.html":{},"modules/StopsRoutingModule.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["stopcode/map",{"_index":2944,"title":{},"body":{"modules/StopsRoutingModule.html":{}}}],["stopcodes",{"_index":779,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{}}}],["stopdefaultlist",{"_index":1217,"title":{},"body":{"injectables/DataShareService.html":{}}}],["stopdropdowncomponent",{"_index":377,"title":{"components/StopDropDownComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["stopid",{"_index":1576,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["stopindex",{"_index":1577,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["stopinfo",{"_index":2838,"title":{"interfaces/StopInfo.html":{}},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["stoplistobserver",{"_index":1218,"title":{},"body":{"injectables/DataShareService.html":{}}}],["stops",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"modules/SidebarRoutingModule.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["stops.component.css",{"_index":2866,"title":{},"body":{"components/StopsComponent.html":{}}}],["stops.component.html",{"_index":2867,"title":{},"body":{"components/StopsComponent.html":{}}}],["stops.foreach(stop",{"_index":1712,"title":{},"body":{"classes/LinesMap.html":{}}}],["stops.map((stop",{"_index":2908,"title":{},"body":{"classes/StopsMap.html":{}}}],["stops:{...state.stops",{"_index":520,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["stops_module",{"_index":2357,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SidebarOptionsComponent.html":{}}}],["stopscomponent",{"_index":379,"title":{"components/StopsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["stopsequence",{"_index":1578,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["stopslidercomponent",{"_index":381,"title":{"components/StopSliderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["stopsmap",{"_index":2017,"title":{"classes/StopsMap.html":{}},"body":{"components/MapAreaComponent.html":{},"classes/StopsMap.html":{}}}],["stopsmap(map",{"_index":2045,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["stopsmapcomponent",{"_index":382,"title":{"components/StopsMapComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["stopsmodule",{"_index":2935,"title":{"modules/StopsModule.html":{}},"body":{"modules/StopsModule.html":{},"modules.html":{},"overview.html":{}}}],["stopsroutingmodule",{"_index":2939,"title":{"modules/StopsRoutingModule.html":{}},"body":{"modules/StopsModule.html":{},"modules/StopsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["stopsstore",{"_index":1864,"title":{"injectables/StopsStore.html":{}},"body":{"interfaces/LiveState-1.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{}}}],["stopstate",{"_index":489,"title":{"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["stopstateadapter",{"_index":496,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["stopstateadapter.addmany(action.routeinfo.stops",{"_index":574,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["stopstateadapter.addmany(action.stops",{"_index":567,"title":{},"body":{"interfaces/AppState.html":{}}}],["stopstateadapter.getinitialstate",{"_index":1532,"title":{},"body":{"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{}}}],["stopstateadapter.setall(action.stops",{"_index":511,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{}}}],["store",{"_index":31,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"modules/AppModule.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"interfaces/TripState.html":{},"dependencies.html":{},"interfaces/msg.html":{}}}],["stored",{"_index":3321,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":438,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":461,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":425,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule.forroot({api",{"_index":457,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule",{"_index":445,"title":{},"body":{"modules/AppModule.html":{}}}],["storerouterconnectingmodule.forroot({serializer",{"_index":466,"title":{},"body":{"modules/AppModule.html":{}}}],["streetname",{"_index":1568,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["string",{"_index":133,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthService.html":{},"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"miscellaneous/functions.html":{}}}],["stroked",{"_index":881,"title":{},"body":{"components/BookingComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripDetailsComponent.html":{}}}],["style",{"_index":2783,"title":{},"body":{"components/StationListComponent.html":{},"components/TripDetailsComponent.html":{}}}],["styles",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["styleurls",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["sub",{"_index":2527,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["subject",{"_index":503,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DataShareService.html":{},"components/PlacesComponent.html":{},"components/ToasterComponent.html":{}}}],["subs",{"_index":2169,"title":{},"body":{"components/PlacesComponent.html":{}}}],["subscribe(buses",{"_index":2053,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["subscribe(data",{"_index":2071,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["subscribe(point",{"_index":2065,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["subscribe(stop",{"_index":2059,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["subscriber.unsubscribe",{"_index":2082,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["subscribers",{"_index":2018,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["subscription",{"_index":1788,"title":{},"body":{"components/ListItemComponent.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["success",{"_index":707,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["sumary",{"_index":3021,"title":{},"body":{"components/TripComponent.html":{}}}],["summary",{"_index":3006,"title":{},"body":{"components/TripComponent.html":{}}}],["sunday",{"_index":2483,"title":{},"body":{"components/SelectComponent.html":{}}}],["super(initialbookingstate",{"_index":686,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["super(initialstate",{"_index":1383,"title":{},"body":{"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["super(map",{"_index":1697,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["super.focusonpoint(point",{"_index":1726,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{}}}],["support",{"_index":3344,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":2835,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["svg",{"_index":3345,"title":{},"body":{"modules.html":{}}}],["swap",{"_index":1352,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/InputComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["swap_vert",{"_index":1426,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["swappoints",{"_index":1315,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"interfaces/TripState.html":{}}}],["swaptab",{"_index":2729,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["switchmap",{"_index":73,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/MapAreaComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"injectables/StopsStore.html":{}}}],["switchmap(([action",{"_index":83,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["switchmap((action",{"_index":46,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["switchmap((booking",{"_index":715,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["switchmap((bookings",{"_index":704,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["switchmap((line",{"_index":1838,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["switchmap((stop",{"_index":1829,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["switchmap(({data",{"_index":63,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["switchmap(({info",{"_index":701,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["switchmap(({params",{"_index":2362,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["switchmap(obs",{"_index":2068,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["switchmap(state",{"_index":712,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["symbols",{"_index":2157,"title":{},"body":{"components/OptionComponent.html":{}}}],["tab",{"_index":1219,"title":{},"body":{"injectables/DataShareService.html":{},"components/PlacesComponent.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"components/StationListComponent.html":{},"components/StopSliderComponent.html":{}}}],["tabobserver",{"_index":1220,"title":{},"body":{"injectables/DataShareService.html":{}}}],["take",{"_index":183,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/DataShareService.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["take(1",{"_index":92,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/PlacesComponent.html":{}}}],["takeuntil",{"_index":1847,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["tap",{"_index":44,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataService.html":{},"components/LinesMapComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/MapAreaComponent.html":{},"components/PlacesComponent.html":{},"components/RouteDetailsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["tap(([action",{"_index":2391,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["tap(([saved",{"_index":1056,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["tap((action",{"_index":591,"title":{},"body":{"injectables/AuthEffects.html":{}}}],["tap(({buses",{"_index":2678,"title":{},"body":{"components/SliderComponent.html":{}}}],["tap(buses",{"_index":2850,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{}}}],["tap(state",{"_index":3228,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["tap(stop",{"_index":2056,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["tap(v",{"_index":2195,"title":{},"body":{"components/PlacesComponent.html":{}}}],["tapresponse",{"_index":674,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["temp",{"_index":3185,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["template",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["templateurl",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["test",{"_index":3326,"title":{},"body":{"index.html":{}}}],["testing",{"_index":3336,"title":{},"body":{"index.html":{}}}],["tests",{"_index":3325,"title":{},"body":{"index.html":{}}}],["text",{"_index":841,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"injectables/DirectionsStore.html":{},"components/DropdownOptionComponent.html":{},"classes/LinesMap.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"classes/StopsMap.html":{},"components/ToasterComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["this.actions$.pipe",{"_index":42,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/AuthEffects.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["this.auth.dispatch(clearstate",{"_index":1890,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.getuserinfo",{"_index":2564,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.auth.getuserinfo().email",{"_index":3128,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.auth.isauthenticated",{"_index":615,"title":{},"body":{"guards/AuthGuardService.html":{},"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/SideNavComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.auth.removeuserinfo",{"_index":2562,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.auth.select(getmsg",{"_index":1892,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authmsg",{"_index":1891,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.authstore.dispatch(clearstate",{"_index":2296,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.authstore.select(getmsg",{"_index":2297,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.book.next(this.data",{"_index":3002,"title":{},"body":{"components/TripComponent.html":{}}}],["this.bookingcompleted('booking",{"_index":706,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.bookingcompleted(error.error.error",{"_index":709,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.bus.asobservable",{"_index":1260,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.bus.next(buses",{"_index":1299,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.bus_icon",{"_index":1720,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.bus_stop_icon",{"_index":1716,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.buses.foreach(bus",{"_index":1722,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.buses.push(marker",{"_index":1721,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.cancel.emit(this.booking.trip_id",{"_index":811,"title":{},"body":{"components/BookingComponent.html":{}}}],["this.carvepath(data.points",{"_index":1702,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.centermap",{"_index":1701,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.changedirection",{"_index":1342,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["this.clearbuses",{"_index":1700,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.clearlayergroup",{"_index":1699,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.clearmap",{"_index":2076,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.clearmap.asobservable",{"_index":1263,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.clearmap.next(0",{"_index":1307,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.clearpoint(data.direction",{"_index":3189,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.clicked.next(data",{"_index":1422,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["this.clusters.addlayers(markers",{"_index":2911,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.clusters.addto(this.map",{"_index":2905,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.clusters.clearlayers",{"_index":2912,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.createmarker('0",{"_index":3138,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.createmarker(bus.latitude",{"_index":1719,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.createmarker(leg.from.lat",{"_index":3199,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.createmarker(leg.to.lat",{"_index":3202,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.createmarker(point.latitude",{"_index":2918,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.createmarker(stop.lat",{"_index":3206,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.createmarker(stop.latitude",{"_index":1713,"title":{},"body":{"classes/LinesMap.html":{},"classes/StopsMap.html":{}}}],["this.createpolyline(path",{"_index":1709,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.credentials",{"_index":1885,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.credentials.controls[value].haserror(type",{"_index":1894,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.credentials.value['email",{"_index":1898,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.credentials.value['name",{"_index":2299,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.credentials.value['password",{"_index":1899,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.currentroute",{"_index":2777,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.currentroutestops",{"_index":2775,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.currentstop",{"_index":2917,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.currentstop.addto(this.map",{"_index":2920,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.currentstop.openpopup",{"_index":2921,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.data.book(bookings",{"_index":705,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.data.deletebooking(booking!).pipe",{"_index":716,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.dataservice.deleteroute(action.code).pipe",{"_index":47,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.deletestop(action.code).pipe",{"_index":56,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getalllines().pipe",{"_index":93,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getallstops().pipe",{"_index":149,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getbookingplan(data).pipe",{"_index":64,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getbookings().pipe",{"_index":74,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getlineroutes(action.id).pipe",{"_index":85,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getliveupdates(line!.name",{"_index":1839,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["this.dataservice.getliveupdates(stop!.code",{"_index":1832,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["this.dataservice.getplan(data).pipe",{"_index":100,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getroutedetails(action.code).pipe",{"_index":109,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getroutesbystop(action.stopcode).pipe",{"_index":144,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getrouteschedules(action.code).pipe",{"_index":117,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getsavedinfo().pipe",{"_index":124,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getsavedroutes().pipe",{"_index":132,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.getsavedstops().pipe",{"_index":139,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.login(action.data).pipe",{"_index":155,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.register(action.credentials).pipe",{"_index":160,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.saveroute(action.code).pipe",{"_index":165,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.dataservice.savestop(action.code).pipe",{"_index":170,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.datashare.dayobserver.subscribe(day",{"_index":1793,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.datashare.fly([bus.latitude",{"_index":1020,"title":{},"body":{"components/BusEntityComponent.html":{}}}],["this.datashare.fly([point.latitude",{"_index":2738,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["this.datashare.ondayselect(day",{"_index":2493,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.date.split(',')[0",{"_index":3001,"title":{},"body":{"components/TripComponent.html":{}}}],["this.day.asobservable",{"_index":1266,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.day.next(day",{"_index":1300,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.deletecomplete('booking",{"_index":717,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.deletecomplete(error.error",{"_index":721,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.departures",{"_index":2848,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{}}}],["this.dest_marker",{"_index":3139,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.direction",{"_index":2206,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.directionsstore.reset",{"_index":958,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.directionsstore.updateend([booking.endstop",{"_index":964,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.directionsstore.updatestart([booking.startstop",{"_index":962,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.disabled",{"_index":1549,"title":{},"body":{"components/InputComponent.html":{}}}],["this.displaystops(data.stops",{"_index":1703,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.dragend.asobservable",{"_index":1269,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.dragend.next(value",{"_index":1306,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.dragoff",{"_index":3169,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.dragposition",{"_index":2567,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.dragposition.x",{"_index":2574,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.dragstart.asobservable",{"_index":1272,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.dragstart.next(value",{"_index":1305,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.e.emit(this.data",{"_index":1472,"title":{},"body":{"components/DropdownOptionComponent.html":{}}}],["this.effect",{"_index":696,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["this.effect((line",{"_index":1835,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["this.effect((stop",{"_index":1826,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["this.el",{"_index":2559,"title":{},"body":{"components/SideNavComponent.html":{},"components/StationListComponent.html":{}}}],["this.el.scrolltop",{"_index":2772,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.enabledrag(data",{"_index":3190,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.addeventlistener(\"dragend",{"_index":3160,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.addto(this.map",{"_index":3183,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.dragging?.disable",{"_index":3171,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.dragging?.enable",{"_index":3168,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.getlatlng().lat",{"_index":3161,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.getlatlng().lng",{"_index":3162,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.setlatlng([+data.destination[2",{"_index":3180,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.setlatlng(temp",{"_index":3188,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.end.setpopupcontent(`${data.destination[1",{"_index":3182,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.fetchcomplete",{"_index":1341,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["this.flag",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["this.getarrivalstate",{"_index":1852,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["this.getbusstate",{"_index":1856,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["this.getposition",{"_index":2822,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.home",{"_index":2563,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.http.get(this.liveuri",{"_index":1177,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.get(this.url",{"_index":1168,"title":{},"body":{"injectables/DataService.html":{}}}],["this.http.post(this.url",{"_index":1178,"title":{},"body":{"injectables/DataService.html":{}}}],["this.init(stop",{"_index":2933,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["this.initmap(map",{"_index":2038,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.initstore(v.data['type",{"_index":2196,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.initvalue",{"_index":2209,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.jwthelper",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwthelper.istokenexpired(token",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.layergroup.addlayer(marker",{"_index":1717,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.layergroup.addlayer(polyline",{"_index":1710,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.layergroup.addto(this.map",{"_index":1698,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.layergroup.clearlayers",{"_index":1724,"title":{},"body":{"classes/LinesMap.html":{},"classes/TripPlannerMap.html":{}}}],["this.layergroup.removelayer(bus",{"_index":1723,"title":{},"body":{"classes/LinesMap.html":{}}}],["this.line",{"_index":2319,"title":{},"body":{"components/RouteListComponent.html":{}}}],["this.lines",{"_index":1614,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["this.linesmap",{"_index":2039,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.linesmap.displaybuslocations(buses",{"_index":2054,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.linesmap.displayrouteinfo(data",{"_index":2049,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.linesmap.displayrouteinfo(undefined",{"_index":2083,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.linesmap.focusonpoint([stop!?.latitude",{"_index":2060,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.linesmap.focusonpoint(point",{"_index":2066,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.local.changedelete(trip_id",{"_index":961,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.local.changedirection",{"_index":2199,"title":{},"body":{"components/PlacesComponent.html":{},"components/StopDropDownComponent.html":{}}}],["this.local.changedirection(direction",{"_index":2207,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.local.dispatchbooking",{"_index":3127,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.local.fetcharrivals(this.vm$.pipe(map(data",{"_index":2851,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.local.fetchplan",{"_index":3226,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.local.getarrivalstate().pipe",{"_index":2849,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.local.getendvalue",{"_index":2212,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.local.getnames",{"_index":1545,"title":{},"body":{"components/InputComponent.html":{}}}],["this.local.getstartvalue",{"_index":2210,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.local.gettext",{"_index":2812,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.local.initbooking({user",{"_index":3129,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.local.initfetch",{"_index":3238,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.local.state",{"_index":955,"title":{},"body":{"components/BookingsComponent.html":{},"components/PlacesComponent.html":{},"components/TripListComponent.html":{}}}],["this.local.state$.pipe(take(1",{"_index":3227,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.local.swappoints",{"_index":1546,"title":{},"body":{"components/InputComponent.html":{}}}],["this.local.updatearriveby(value",{"_index":3234,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.local.updatedate(event.value",{"_index":3232,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.local.updatepoint",{"_index":2205,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.local.updatepoint([1",{"_index":2823,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.local.updatepoint(data",{"_index":2820,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.local.updatepoint(point",{"_index":2213,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.local.updatesearchtext(value",{"_index":2203,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.local.updatetime(e.target.value",{"_index":3233,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.localstore.fetcharrivals",{"_index":2931,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["this.localstore.fetcharrivals(this.store.select(getactivestop",{"_index":1060,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["this.localstore.fetchbuslocations(this.store.select(currentline",{"_index":1059,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["this.localstore.getarrivalstate().pipe",{"_index":2934,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["this.localstore.getbuslocations",{"_index":1055,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{}}}],["this.localstore.getstoparrivals",{"_index":2676,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.location.back",{"_index":2399,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.location.replacestate",{"_index":2398,"title":{},"body":{"injectables/RouterEffects.html":{}}}],["this.map",{"_index":1996,"title":{},"body":{"classes/Map.html":{}}}],["this.map.emit(this.booking",{"_index":810,"title":{},"body":{"components/BookingComponent.html":{}}}],["this.map.fitbounds(polyline.getbounds",{"_index":1711,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{}}}],["this.map.fitbounds(this.createpolyline(shape).getbounds",{"_index":3210,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.map.flyto(coords",{"_index":2009,"title":{},"body":{"classes/Map.html":{}}}],["this.map.flyto(this.end.getlatlng",{"_index":3184,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.map.flyto(this.start.getlatlng",{"_index":3177,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.map.removelayer(this.currentstop",{"_index":2915,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.map.removelayer(this.end",{"_index":3212,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.map.removelayer(this.start",{"_index":3211,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.map.setview(this.center",{"_index":2002,"title":{},"body":{"classes/Map.html":{}}}],["this.mapbtn",{"_index":1964,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.mapbutton",{"_index":1956,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.maplink",{"_index":1962,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.marker",{"_index":3142,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.marker.asobservable",{"_index":1275,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.marker.next(obs",{"_index":1302,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.msg",{"_index":2043,"title":{},"body":{"components/MapAreaComponent.html":{},"classes/TripPlannerMap.html":{}}}],["this.msg$.subscribe({next",{"_index":2961,"title":{},"body":{"components/ToasterComponent.html":{}}}],["this.msg.busobserver.pipe",{"_index":2050,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.msg.clearlayers",{"_index":957,"title":{},"body":{"components/BookingsComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopsComponent.html":{}}}],["this.msg.clearmapobserver.subscribe(v",{"_index":2075,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.msg.dragendobserver.subscribe(v",{"_index":2192,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.msg.dragoff",{"_index":2200,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.msg.dragstartobserver.subscribe(v",{"_index":2190,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.msg.emit(this.data",{"_index":3000,"title":{},"body":{"components/TripComponent.html":{}}}],["this.msg.fly([x",{"_index":3077,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["this.msg.markerobserver.pipe",{"_index":2067,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.msg.ondragend(point",{"_index":3163,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.msg.ondragstart(point",{"_index":3159,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.msg.ontoggle",{"_index":1893,"title":{},"body":{"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/SidebarOptionsComponent.html":{}}}],["this.msg.pointobserver.pipe",{"_index":2062,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.msg.removedragobserver.subscribe(v",{"_index":2077,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.msg.selectendpoint(this.directionsstore.state",{"_index":959,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.msg.selectendpoint(this.local.state",{"_index":2813,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.msg.sendbusstatus(buses",{"_index":1057,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsMapComponent.html":{}}}],["this.msg.toggleobserver.subscribe(v",{"_index":2557,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.navigate",{"_index":967,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.navigate(['lines",{"_index":2451,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["this.navigate(['routes",{"_index":971,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.navigate(['stops",{"_index":2397,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["this.obs",{"_index":1544,"title":{},"body":{"components/InputComponent.html":{}}}],["this.onclick.emit(0",{"_index":2737,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["this.onclick.emit(1",{"_index":1800,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.onclick.emit(tab",{"_index":2778,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.ondayselect(day",{"_index":1794,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.ondrag(v",{"_index":2191,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.onresize",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["this.onselect",{"_index":1792,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.onselect.emit(this.data",{"_index":2150,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.onselect.unsubscribe",{"_index":1795,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.ontype.emit(this.value",{"_index":1957,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.options",{"_index":1166,"title":{},"body":{"injectables/DataService.html":{}}}],["this.options).pipe",{"_index":1170,"title":{},"body":{"injectables/DataService.html":{}}}],["this.payload.code",{"_index":2492,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.point.asobservable",{"_index":1278,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.point.next(point",{"_index":1301,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.qr.next(this.booking",{"_index":812,"title":{},"body":{"components/BookingComponent.html":{}}}],["this.remove.emit(this.code",{"_index":1960,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.remove.emit(this.data[0",{"_index":2152,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.removedrag.asobservable",{"_index":1281,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.removedrag.next",{"_index":1309,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.route.data",{"_index":2193,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.router",{"_index":2046,"title":{},"body":{"components/MapAreaComponent.html":{},"classes/StopsMap.html":{}}}],["this.router.navigate",{"_index":594,"title":{},"body":{"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["this.router.url",{"_index":1547,"title":{},"body":{"components/InputComponent.html":{}}}],["this.routes",{"_index":2317,"title":{},"body":{"components/RouteListComponent.html":{}}}],["this.save.emit(this.code",{"_index":1959,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.save.emit(this.data[0",{"_index":2151,"title":{},"body":{"components/OptionComponent.html":{}}}],["this.schedules",{"_index":1796,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.scrollposition",{"_index":2773,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.searchtext",{"_index":2811,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.searchvalue.asobservable",{"_index":1284,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.searchvalue.next(v",{"_index":1304,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.select(state",{"_index":1385,"title":{},"body":{"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["this.select(this.state",{"_index":1392,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["this.select(this.store.select(currentroute",{"_index":1851,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["this.selectedtab",{"_index":2679,"title":{},"body":{"components/SliderComponent.html":{}}}],["this.selectedvalue.emit(data",{"_index":2117,"title":{},"body":{"components/MultipleDropdownComponent.html":{}}}],["this.selectstop(stop.code",{"_index":2910,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.send",{"_index":1958,"title":{},"body":{"components/MainInputComponent.html":{}}}],["this.setcurrentstop(undefined",{"_index":2913,"title":{},"body":{"classes/StopsMap.html":{}}}],["this.showmapicon",{"_index":3074,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["this.socket",{"_index":2689,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["this.socket.on('accepted",{"_index":2691,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["this.socket.on('update",{"_index":2693,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["this.spinner",{"_index":2198,"title":{},"body":{"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{}}}],["this.start(v",{"_index":2962,"title":{},"body":{"components/ToasterComponent.html":{}}}],["this.start.addeventlistener(\"dragend",{"_index":3156,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.addto(this.map",{"_index":3176,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.dragging?.disable",{"_index":3170,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.dragging?.enable",{"_index":3166,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.getlatlng",{"_index":3186,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.getlatlng().lat",{"_index":3157,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.getlatlng().lng",{"_index":3158,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.setlatlng([+data.start[2",{"_index":3173,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.setlatlng(this.end.getlatlng",{"_index":3187,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.start.setpopupcontent(`${data.start[1",{"_index":3175,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["this.state",{"_index":960,"title":{},"body":{"components/BookingsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["this.state$.pipe",{"_index":697,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["this.stationlist.nativeelement",{"_index":2774,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.stop",{"_index":2735,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["this.stop.code",{"_index":1798,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.stopdefaultlist.asobservable",{"_index":1288,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.stopdefaultlist.next(flag",{"_index":1303,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.stops",{"_index":2815,"title":{},"body":{"components/StopDropDownComponent.html":{},"components/StopsComponent.html":{}}}],["this.stopsmap",{"_index":2044,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.stopsmap.addclusterstomap(stops",{"_index":2080,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.stopsmap.setcurrentstop(stop",{"_index":2057,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.store.dispatch(api_actions.deletebooking({trip_id",{"_index":719,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.store.dispatch(api_actions.deleteroute({code",{"_index":1066,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["this.store.dispatch(api_actions.deletestop({code",{"_index":2819,"title":{},"body":{"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.store.dispatch(api_actions.fetchplan({data",{"_index":1340,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["this.store.dispatch(api_actions.getschedules({code",{"_index":2491,"title":{},"body":{"components/SelectComponent.html":{}}}],["this.store.dispatch(api_actions.login({data",{"_index":1900,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.store.dispatch(api_actions.register({credentials",{"_index":2300,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.store.dispatch(api_actions.saveroute({code",{"_index":1064,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["this.store.dispatch(api_actions.savestop({code",{"_index":2818,"title":{},"body":{"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.store.dispatch(api_actions.showspinner",{"_index":45,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.store.dispatch(getitinerary({data",{"_index":966,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.store.dispatch(nav_actions.arrownavigation",{"_index":1419,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/StopDropDownComponent.html":{}}}],["this.store.dispatch(select_action.emptypath",{"_index":1062,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["this.store.dispatch(select_actions.selectstop({code",{"_index":1799,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.store.dispatch(select_actions.updateoccupancy",{"_index":2694,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["this.store.select(currentline",{"_index":2320,"title":{},"body":{"components/RouteListComponent.html":{}}}],["this.store.select(currentroute",{"_index":1054,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{},"components/StationListComponent.html":{}}}],["this.store.select(filterbookings",{"_index":953,"title":{},"body":{"components/BookingsComponent.html":{}}}],["this.store.select(filterlines",{"_index":1615,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["this.store.select(filterlines(value",{"_index":1617,"title":{},"body":{"components/LinesDropdownComponent.html":{}}}],["this.store.select(filterstops",{"_index":2876,"title":{},"body":{"components/StopsComponent.html":{}}}],["this.store.select(filterstops(value",{"_index":2877,"title":{},"body":{"components/StopsComponent.html":{}}}],["this.store.select(getactivebooking",{"_index":2277,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["this.store.select(getactivestop",{"_index":2736,"title":{},"body":{"components/StationEntityComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.store.select(getactivestop).pipe",{"_index":2055,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.store.select(getactivestop).pipe(tap(stop",{"_index":2932,"title":{},"body":{"components/StopsMapComponent.html":{}}}],["this.store.select(getallstops",{"_index":2817,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.store.select(getdailyschedule(day",{"_index":1797,"title":{},"body":{"components/ListItemComponent.html":{}}}],["this.store.select(getoccupancy",{"_index":3125,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.store.select(getplanstate",{"_index":3124,"title":{},"body":{"components/TripListComponent.html":{}}}],["this.store.select(getroutelist",{"_index":2846,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.store.select(getroutepathandstops).subscribe(data",{"_index":2048,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.store.select(getroutestops",{"_index":2776,"title":{},"body":{"components/StationListComponent.html":{}}}],["this.store.select(getsavedinfo",{"_index":2446,"title":{},"body":{"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{}}}],["this.store.select(getsavedstops",{"_index":2816,"title":{},"body":{"components/StopDropDownComponent.html":{}}}],["this.store.select(getstopsmodule).subscribe(stops",{"_index":2079,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.store.select(isroutesaved",{"_index":1053,"title":{},"body":{"interfaces/CurrentRoute.html":{},"components/RouteDetailsComponent.html":{}}}],["this.store.select(isstopsaved",{"_index":2845,"title":{},"body":{"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{}}}],["this.store.select(newbooking(info!.user",{"_index":702,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.store.select(selectbooking(state.delete_id",{"_index":713,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{}}}],["this.store.select(selectcurrentlineroutes",{"_index":2318,"title":{},"body":{"components/RouteListComponent.html":{}}}],["this.store.select(selectitinerary",{"_index":3075,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["this.store.select(selectitinerary).subscribe(it",{"_index":2073,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.store.select(selectroutepoints(action.code",{"_index":104,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["this.store.select(spinner",{"_index":954,"title":{},"body":{"components/BookingsComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["this.sub",{"_index":2960,"title":{},"body":{"components/ToasterComponent.html":{}}}],["this.sub.unsubscribe",{"_index":2561,"title":{},"body":{"components/SideNavComponent.html":{},"components/ToasterComponent.html":{}}}],["this.subs",{"_index":2189,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.subs.foreach(s",{"_index":2201,"title":{},"body":{"components/PlacesComponent.html":{}}}],["this.subscribers",{"_index":2047,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.subscribers.foreach(subscriber",{"_index":2081,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.swap.next",{"_index":1420,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["this.tab.asobservable",{"_index":1291,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.tab.next(tab",{"_index":1298,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.text",{"_index":2963,"title":{},"body":{"components/ToasterComponent.html":{}}}],["this.toggle",{"_index":2558,"title":{},"body":{"components/SideNavComponent.html":{}}}],["this.toggle.asobservable",{"_index":1294,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.toggle.next",{"_index":1308,"title":{},"body":{"injectables/DataShareService.html":{}}}],["this.token",{"_index":1185,"title":{},"body":{"injectables/DataService.html":{}}}],["this.token()}}).pipe",{"_index":1188,"title":{},"body":{"injectables/DataService.html":{}}}],["this.tripmap",{"_index":2041,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.tripmap.addmarker(data",{"_index":2072,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.tripmap.clearlayergroup",{"_index":2085,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.tripmap.clearpoints",{"_index":2084,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.tripmap.displayitinerary(it",{"_index":2074,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.tripmap.dragoff",{"_index":2078,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["this.tripoptions",{"_index":3229,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["this.updatearrivals(arrivals",{"_index":1833,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["this.updatebuses(buses",{"_index":1840,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["this.updater((state",{"_index":688,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{},"interfaces/TripState.html":{}}}],["this.value",{"_index":970,"title":{},"body":{"components/BookingsComponent.html":{},"components/MainInputComponent.html":{},"components/PlacesComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/StopsMapComponent.html":{}}}],["this.vm",{"_index":952,"title":{},"body":{"components/BookingsComponent.html":{},"interfaces/CurrentRoute.html":{},"components/PlacesComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["this.wrapper.nativeelement",{"_index":2560,"title":{},"body":{"components/SideNavComponent.html":{}}}],["throttletime",{"_index":678,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["throttletime(500",{"_index":1338,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["throwerror",{"_index":1154,"title":{},"body":{"injectables/DataService.html":{}}}],["throwerror(()=>new",{"_index":1171,"title":{},"body":{"injectables/DataService.html":{}}}],["thursday",{"_index":2487,"title":{},"body":{"components/SelectComponent.html":{}}}],["time",{"_index":1375,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/ListItemComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["timeline",{"_index":2779,"title":{},"body":{"components/StationListComponent.html":{}}}],["timer",{"_index":1848,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["timer(0",{"_index":1830,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["times",{"_index":1439,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/MainInputComponent.html":{}}}],["tiny/time",{"_index":3264,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["toaster",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["toaster.component.css",{"_index":2950,"title":{},"body":{"components/ToasterComponent.html":{}}}],["toaster.component.html",{"_index":2951,"title":{},"body":{"components/ToasterComponent.html":{}}}],["toastercomponent",{"_index":383,"title":{"components/ToasterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"modules/SharedModule.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["toggle",{"_index":1221,"title":{},"body":{"injectables/DataShareService.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["toggleobserver",{"_index":1222,"title":{},"body":{"injectables/DataShareService.html":{}}}],["token",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{}}}],["top",{"_index":766,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/MainInputComponent.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["trail",{"_index":3017,"title":{},"body":{"components/TripComponent.html":{}}}],["tram",{"_index":3204,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["transform",{"_index":902,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{},"components/OptionComponent.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{}}}],["transform(data",{"_index":903,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{}}}],["transit",{"_index":3198,"title":{},"body":{"classes/TripPlannerMap.html":{}}}],["transitapi/filterstops",{"_index":1180,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/getpaths",{"_index":1179,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/lineroutes",{"_index":1174,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/lines",{"_index":1169,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/routeinfo",{"_index":1175,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/routeschedules",{"_index":1176,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/stoproutes",{"_index":1181,"title":{},"body":{"injectables/DataService.html":{}}}],["transitapi/stops",{"_index":1173,"title":{},"body":{"injectables/DataService.html":{}}}],["transition",{"_index":890,"title":{},"body":{"components/BookingComponent.html":{},"components/OptionComponent.html":{},"components/SideNavComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["transittime",{"_index":1560,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["translatex(2px",{"_index":2154,"title":{},"body":{"components/OptionComponent.html":{}}}],["translatex(3px",{"_index":3012,"title":{},"body":{"components/TripComponent.html":{}}}],["translatey(0px",{"_index":2981,"title":{},"body":{"components/ToasterComponent.html":{}}}],["translatey(20px",{"_index":2980,"title":{},"body":{"components/ToasterComponent.html":{}}}],["transparent",{"_index":1443,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/OptionComponent.html":{},"components/RouteDetailsComponent.html":{},"components/SpinnerComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["travel",{"_index":780,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["tree",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["trip",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["trip.component.css",{"_index":2983,"title":{},"body":{"components/TripComponent.html":{}}}],["trip.component.html",{"_index":2984,"title":{},"body":{"components/TripComponent.html":{}}}],["trip/options",{"_index":2439,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["trip_details",{"_index":969,"title":{},"body":{"components/BookingsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/TripListComponent.html":{}}}],["trip_id",{"_index":692,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{}}}],["trip_ids",{"_index":2688,"title":{},"body":{"injectables/SocketIOService.html":{},"interfaces/msg.html":{}}}],["trip_map",{"_index":3078,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["trip_module",{"_index":2647,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["trip_options",{"_index":736,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"components/SidebarOptionsComponent.html":{},"components/StopDropDownComponent.html":{}}}],["trip_origin",{"_index":1424,"title":{},"body":{"components/DoubleInputComponent.html":{}}}],["tripcomponent",{"_index":385,"title":{"components/TripComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["tripdata",{"_index":1511,"title":{"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}},"body":{"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{}}}],["tripdetailscomponent",{"_index":387,"title":{"components/TripDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["tripid",{"_index":1582,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["triplistcomponent",{"_index":388,"title":{"components/TripListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["tripmap",{"_index":2019,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["tripoptions",{"_index":3213,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["tripplanner",{"_index":728,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingsComponent.html":{},"components/StopDropDownComponent.html":{}}}],["tripplannermap",{"_index":2029,"title":{"classes/TripPlannerMap.html":{}},"body":{"components/MapAreaComponent.html":{},"classes/TripPlannerMap.html":{}}}],["tripplannermap(map",{"_index":2042,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["tripplanneroptionscomponent",{"_index":389,"title":{"components/TripPlannerOptionsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"modules/PlannerModule.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{},"overview.html":{}}}],["trips",{"_index":968,"title":{},"body":{"components/BookingsComponent.html":{},"modules/RoutesRoutingModule.html":{},"components/SidebarOptionsComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["trips/:index",{"_index":2440,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["trips/map",{"_index":2438,"title":{},"body":{"modules/RoutesRoutingModule.html":{}}}],["tripstate",{"_index":946,"title":{"interfaces/TripState.html":{}},"body":{"components/BookingsComponent.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/PlacesComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["triptime",{"_index":1525,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["triptimehour",{"_index":1526,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["triptimeminute",{"_index":1527,"title":{},"body":{"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/ScheduleState.html":{},"interfaces/ScheduleState-1.html":{}}}],["true",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"guards/AuthGuardService.html":{},"interfaces/BookInfo.html":{},"components/BookingComponent.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"injectables/DirectionsStore.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/StopDropDownComponent.html":{},"classes/StopsMap.html":{},"components/ToasterComponent.html":{},"interfaces/TripState.html":{}}}],["tslib",{"_index":3288,"title":{},"body":{"dependencies.html":{}}}],["tuesday",{"_index":2485,"title":{},"body":{"components/SelectComponent.html":{}}}],["turn",{"_index":3069,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["turn_left",{"_index":3046,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["turn_right",{"_index":3045,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["turn_sharp_left",{"_index":3062,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["turn_sharp_right",{"_index":3064,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["turn_slight_left",{"_index":3049,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["turn_slight_right",{"_index":3051,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["type",{"_index":37,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"injectables/AuthEffects.html":{},"guards/AuthGuardService.html":{},"interfaces/BookInfo.html":{},"components/BookOptionsComponent.html":{},"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{},"interfaces/BookingState-2.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{},"interfaces/ILine.html":{},"interfaces/ILine-1.html":{},"interfaces/IMapData.html":{},"interfaces/IMapData-1.html":{},"interfaces/INotification.html":{},"interfaces/INotification-1.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/ISchedule.html":{},"interfaces/ISchedule-1.html":{},"interfaces/IScheduleDetails.html":{},"interfaces/IScheduleDetails-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"components/InputComponent.html":{},"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/LineState.html":{},"interfaces/LineState-1.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"modules/LinesRoutingModule.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"interfaces/Notification.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{},"modules/RoutesRoutingModule.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"interfaces/TripData.html":{},"interfaces/TripData-1.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{},"miscellaneous/functions.html":{},"interfaces/msg.html":{}}}],["type>i",{"_index":856,"title":{},"body":{"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/StationEntityComponent.html":{}}}],["types/leaflet",{"_index":3267,"title":{},"body":{"dependencies.html":{}}}],["types/leaflet.markercluster",{"_index":3269,"title":{},"body":{"dependencies.html":{}}}],["types/mapbox__mapbox",{"_index":3271,"title":{},"body":{"dependencies.html":{}}}],["types/socket.io",{"_index":3274,"title":{},"body":{"dependencies.html":{}}}],["u",{"_index":3068,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["u_turn_left",{"_index":3059,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["u_turn_right",{"_index":3057,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["ul",{"_index":2787,"title":{},"body":{"components/StationListComponent.html":{}}}],["unbooked",{"_index":2748,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["undefined",{"_index":486,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/AppState-1.html":{},"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"interfaces/CurrentRoute.html":{},"injectables/DirectionsStore.html":{},"pipes/FilterPipe.html":{},"interfaces/IPoint.html":{},"interfaces/IPoint-1.html":{},"interfaces/IRoute.html":{},"interfaces/IRoute-1.html":{},"interfaces/IRouteInfo.html":{},"interfaces/IRouteInfo-1.html":{},"interfaces/IStop.html":{},"interfaces/IStop-1.html":{},"classes/LinesMap.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/RouteState.html":{},"interfaces/RouteState-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"interfaces/StopState.html":{},"interfaces/StopState-1.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"classes/TripPlannerMap.html":{},"interfaces/TripState.html":{}}}],["underline",{"_index":1919,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["unit",{"_index":3324,"title":{},"body":{"index.html":{}}}],["unsave",{"_index":1966,"title":{},"body":{"components/MainInputComponent.html":{}}}],["unset",{"_index":878,"title":{},"body":{"components/BookingComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["update",{"_index":1860,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["updatearrivals",{"_index":1815,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["updatearriveby",{"_index":1316,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["updatebuses",{"_index":1816,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{}}}],["updatedate",{"_index":1317,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["updatedate(event",{"_index":3217,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["updateend",{"_index":1318,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["updatepoint",{"_index":1319,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["updaters",{"_index":1862,"title":{},"body":{"injectables/LiveDataStore.html":{},"interfaces/LiveState.html":{},"interfaces/LiveState-1.html":{},"injectables/StopsStore.html":{}}}],["updatesearchtext",{"_index":1320,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["updateselect",{"_index":3214,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["updateselect(value",{"_index":3220,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["updatestart",{"_index":1321,"title":{},"body":{"injectables/DirectionsStore.html":{},"interfaces/TripState.html":{}}}],["updatetime",{"_index":1322,"title":{},"body":{"injectables/DirectionsStore.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/TripState.html":{}}}],["updatetime(e",{"_index":3222,"title":{},"body":{"components/TripPlannerOptionsComponent.html":{}}}],["upper",{"_index":907,"title":{},"body":{"pipes/BookingPipe.html":{},"components/DoubleInputComponent.html":{},"pipes/FilterPipe.html":{}}}],["url",{"_index":1078,"title":{},"body":{"classes/CustomSerializer.html":{},"injectables/DataService.html":{},"components/InputComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/RouterStateUrl.html":{}}}],["url.startswith('/(sidebar:lines",{"_index":2379,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["url.startswith('/(sidebar:routes/bookings",{"_index":2376,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["url.startswith('/(sidebar:stops",{"_index":2370,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["use",{"_index":3317,"title":{},"body":{"index.html":{}}}],["user",{"_index":672,"title":{},"body":{"interfaces/BookInfo.html":{},"interfaces/BookingState-2.html":{},"injectables/BookingsStore.html":{},"components/LoginComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/SideNavComponent.html":{},"components/TripListComponent.html":{}}}],["user.name",{"_index":2576,"title":{},"body":{"components/SideNavComponent.html":{}}}],["user_id",{"_index":781,"title":{},"body":{"interfaces/Booking.html":{},"interfaces/Booking-1.html":{},"interfaces/BookingState.html":{},"interfaces/BookingState-1.html":{}}}],["user}_${trip",{"_index":2280,"title":{},"body":{"interfaces/QRLocal.html":{},"components/QrComponent.html":{}}}],["using",{"_index":2603,"title":{},"body":{"components/SideNavComponent.html":{}}}],["uturn_left",{"_index":3058,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["uturn_right",{"_index":3056,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["v",{"_index":1248,"title":{},"body":{"injectables/DataShareService.html":{},"components/ToasterComponent.html":{},"classes/TripPlannerMap.html":{}}}],["v.fetch",{"_index":2070,"title":{},"body":{"components/MapAreaComponent.html":{}}}],["v.state",{"_index":2197,"title":{},"body":{"components/PlacesComponent.html":{}}}],["validators",{"_index":1881,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["validators.email",{"_index":1888,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(3",{"_index":1887,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.required",{"_index":1886,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["value",{"_index":40,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"components/AppComponent.html":{},"injectables/AuthEffects.html":{},"components/BookingComponent.html":{},"pipes/BookingPipe.html":{},"components/BookingsComponent.html":{},"injectables/BookingsStore.html":{},"components/BusEntityComponent.html":{},"injectables/DataService.html":{},"injectables/DataShareService.html":{},"injectables/DirectionsStore.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"pipes/FilterPipe.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/ListItemComponent.html":{},"injectables/LiveDataStore.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesSliderComponent.html":{},"components/RegisterComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"injectables/SocketIOService.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"injectables/StopsStore.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{},"interfaces/msg.html":{}}}],["value.touppercase",{"_index":908,"title":{},"body":{"pipes/BookingPipe.html":{},"pipes/FilterPipe.html":{}}}],["var",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["varela",{"_index":2608,"title":{},"body":{"components/SideNavComponent.html":{}}}],["variation",{"_index":2159,"title":{},"body":{"components/OptionComponent.html":{}}}],["vehiclecode",{"_index":1498,"title":{},"body":{"interfaces/IArrival.html":{},"interfaces/IArrival-1.html":{}}}],["version",{"_index":3304,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertex",{"_index":1572,"title":{"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["vertextype",{"_index":1573,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["via",{"_index":3328,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":943,"title":{},"body":{"components/BookingsComponent.html":{},"components/SideNavComponent.html":{},"components/StationListComponent.html":{}}}],["viewchild('stationlist",{"_index":2769,"title":{},"body":{"components/StationListComponent.html":{}}}],["viewchild('wrapper",{"_index":2551,"title":{},"body":{"components/SideNavComponent.html":{}}}],["visibility",{"_index":2967,"title":{},"body":{"components/ToasterComponent.html":{}}}],["visible",{"_index":2968,"title":{},"body":{"components/ToasterComponent.html":{}}}],["vm",{"_index":919,"title":{},"body":{"components/BookingsComponent.html":{},"interfaces/CurrentRoute.html":{},"components/PlacesComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RouteDetailsComponent.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SliderComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{}}}],["vm.itinerary.endtime",{"_index":3103,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["vm.itinerary.starttime",{"_index":3079,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["void",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"interfaces/CurrentRoute.html":{},"injectables/DataShareService.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"classes/LinesMap.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"classes/Map.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"interfaces/QRLocal.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{},"interfaces/Saved.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"interfaces/StopInfo.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"classes/StopsMap.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"classes/TripPlannerMap.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["waitingtime",{"_index":1561,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["walk",{"_index":3014,"title":{},"body":{"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["walkdistance",{"_index":1562,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["walktime",{"_index":1563,"title":{},"body":{"interfaces/Itinerary.html":{},"interfaces/Itinerary-1.html":{},"interfaces/Leg.html":{},"interfaces/Leg-1.html":{},"interfaces/Plan.html":{},"interfaces/Plan-1.html":{},"interfaces/Step.html":{},"interfaces/Step-1.html":{},"interfaces/Vertex.html":{},"interfaces/Vertex-1.html":{}}}],["webkit",{"_index":2975,"title":{},"body":{"components/ToasterComponent.html":{}}}],["wednesday",{"_index":2486,"title":{},"body":{"components/SelectComponent.html":{}}}],["weight",{"_index":762,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["wght",{"_index":2161,"title":{},"body":{"components/OptionComponent.html":{}}}],["where_to_vote",{"_index":2642,"title":{},"body":{"components/SidebarOptionsComponent.html":{}}}],["white",{"_index":1428,"title":{},"body":{"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/MainInputComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{}}}],["whole",{"_index":2594,"title":{},"body":{"components/SideNavComponent.html":{}}}],["width",{"_index":738,"title":{},"body":{"components/BookOptionsComponent.html":{},"components/BookingComponent.html":{},"components/BookingsComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/InputComponent.html":{},"components/LinesDropdownComponent.html":{},"components/LinesMapComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MapAreaComponent.html":{},"components/MiniMapComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/OptionComponent.html":{},"components/PlacesComponent.html":{},"components/PlacesMapComponent.html":{},"components/PlacesSliderComponent.html":{},"components/QrComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SelectComponent.html":{},"components/SideNavComponent.html":{},"components/SidebarOptionsComponent.html":{},"components/SliderComponent.html":{},"components/SpinnerComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/StopDropDownComponent.html":{},"components/StopSliderComponent.html":{},"components/StopsComponent.html":{},"components/StopsMapComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{},"components/TripListComponent.html":{},"components/TripPlannerOptionsComponent.html":{}}}],["window:resize",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"components/MainInputComponent.html":{},"components/SideNavComponent.html":{},"components/TripDetailsComponent.html":{}}}],["window:resize($e",{"_index":2534,"title":{},"body":{"components/SideNavComponent.html":{}}}],["withcredentials",{"_index":1167,"title":{},"body":{"injectables/DataService.html":{}}}],["within",{"_index":2746,"title":{},"body":{"components/StationEntityComponent.html":{}}}],["withlatestfrom",{"_index":184,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{},"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["withlatestfrom(this.store.select(getactiverouteschedules",{"_index":115,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["withlatestfrom(this.store.select(getallbookings",{"_index":72,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["withlatestfrom(this.store.select(getsavedinfo",{"_index":123,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["withlatestfrom(this.store.select(getsavedroutecodes",{"_index":130,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["withlatestfrom(this.store.select(getsavedstopcodes",{"_index":138,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["withlatestfrom(this.store.select(getstate",{"_index":2339,"title":{},"body":{"injectables/RouterEffects.html":{},"injectables/RouterEffects-1.html":{}}}],["withlatestfrom(this.store.select(selectcurrentlineroutes",{"_index":82,"title":{},"body":{"injectables/ApiEffects.html":{},"injectables/ApiEffects-1.html":{}}}],["wrap",{"_index":3105,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["wrapper",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"components/BookingComponent.html":{},"components/BusEntityComponent.html":{},"components/DoubleInputComponent.html":{},"components/DropdownOptionComponent.html":{},"components/LinesDropdownComponent.html":{},"components/ListItemComponent.html":{},"components/LoginComponent.html":{},"components/MainInputComponent.html":{},"components/MultipleDropdownComponent.html":{},"components/PlacesSliderComponent.html":{},"components/RegisterComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{},"components/SavedSliderComponent.html":{},"components/SideNavComponent.html":{},"components/StationEntityComponent.html":{},"components/StationListComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["wrapper:hover",{"_index":3104,"title":{},"body":{"components/TripDetailsComponent.html":{}}}],["wrapper>i",{"_index":1621,"title":{},"body":{"components/LinesDropdownComponent.html":{},"components/RouteDetailsComponent.html":{},"components/RouteListComponent.html":{}}}],["x",{"_index":1687,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"components/SideNavComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["y",{"_index":1684,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"components/SideNavComponent.html":{},"classes/StopsMap.html":{},"components/TripDetailsComponent.html":{},"classes/TripPlannerMap.html":{}}}],["yes",{"_index":1690,"title":{},"body":{"classes/LinesMap.html":{},"classes/Map.html":{},"classes/StopsMap.html":{},"classes/TripPlannerMap.html":{}}}],["you're",{"_index":2602,"title":{},"body":{"components/SideNavComponent.html":{}}}],["z",{"_index":2096,"title":{},"body":{"components/MapAreaComponent.html":{},"components/SideNavComponent.html":{},"components/SpinnerComponent.html":{},"components/ToasterComponent.html":{},"components/TripComponent.html":{},"components/TripDetailsComponent.html":{}}}],["zone.js",{"_index":3290,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":406,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LinesModule.html":{},"modules/MapModule.html":{},"modules/PlannerModule.html":{},"modules/SavedModule.html":{},"modules/SharedModule.html":{},"modules/SidebarModule.html":{},"modules/StopsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ApiEffects.html":{"url":"injectables/ApiEffects.html","title":"injectable - ApiEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Effects/api.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteRoute$\n                            \n                            \n                                deleteStop$\n                            \n                            \n                                loadBookingPlan$\n                            \n                            \n                                loadBookings$\n                            \n                            \n                                loadLineRoutes$\n                            \n                            \n                                loadLines$\n                            \n                            \n                                loadPlans$\n                            \n                            \n                                loadRouteInfo$\n                            \n                            \n                                loadRouteSchedules$\n                            \n                            \n                                loadSavedInfo$\n                            \n                            \n                                loadSavedRoutes$\n                            \n                            \n                                loadSavedStops$\n                            \n                            \n                                loadStopRoutes$\n                            \n                            \n                                loadStops$\n                            \n                            \n                                login$\n                            \n                            \n                                register$\n                            \n                            \n                                saveRoute$\n                            \n                            \n                                saveStop$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, actions$: Actions, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state/Effects/api.effects.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoute$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteRoute),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteRoute(action.code).pipe(\n                map((res) => api_actions.deleteRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteRouteError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:150\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteStop$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteStop(action.code).pipe(\n                map((res: any) => api_actions.deleteStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteStopError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBookingPlan$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getItinerary),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getBookingPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBookings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchBookings),\n            withLatestFrom(this.store.select(getAllBookings)),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getBookings().pipe(\n                map((res: Booking[]) => api_actions.fetchBookingsSuccess({data: res})),\n                catchError(err => of(api_actions.fetchBookingsError({msg: err.error.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:105\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadLineRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLineRoutes),\n            withLatestFrom(this.store.select(selectCurrentLineRoutes)),\n            switchMap(([action, line]) => this.dataService.getLineRoutes(action.id).pipe(\n                map((response: IRoute[]) => api_actions.getLineRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.getLineRoutesError({msg: err.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadLines$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLines), take(1),\n            switchMap(() => this.dataService.getAllLines().pipe(\n                map((response: ILine[]) => api_actions.getLinesSuccess({lines: response})),\n                catchError((err) => of(api_actions.getLinesError({msg: err.error})))\n            )),\n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchPlan),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            ))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRouteInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getRouteDetails),\n            concatLatestFrom((action) => this.store.select(selectRoutePoints(action.code))),\n            filter(([action, points]) => !points || points.length === 0),\n            switchMap(([action, points]) => this.dataService.getRouteDetails(action.code).pipe(\n                map((response: IRouteInfo) => api_actions.getRouteDetailsuccess({routeInfo: response})),\n                catchError(err => of(api_actions.getRouteDetailsError({msg: err.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRouteSchedules$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getSchedules),\n            withLatestFrom(this.store.select(getActiveRouteSchedules)),\n            filter(([action, schedules]) => !schedules),\n            switchMap(([action]) => this.dataService.getRouteSchedules(action.code).pipe(\n                map((response: IScheduleDetails) => api_actions.getSchedulesSuccess({schedules: response})),\n                catchError(err => of(api_actions.getSchedulesError({msg: err.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedInfo), \n            withLatestFrom(this.store.select(getSavedInfo)),\n            filter(([action, info]) => !info),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedInfo().pipe(\n                map(res => api_actions.getSavedInfoSuccess(res)),\n                catchError(err => of(api_actions.getSavedInfoError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedRoutes), \n            withLatestFrom(this.store.select(getSavedRouteCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedRoutes().pipe(\n                map((res: string[]) => api_actions.getSavedRoutesSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedRoutesError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedStops), \n            withLatestFrom(this.store.select(getSavedStopCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedStops().pipe(\n                map((res: string[]) => api_actions.getSavedStopsSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedStopsError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:185\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStopRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.stopRoutes),\n            switchMap((action) => this.dataService.getRoutesByStop(action.stopCode).pipe(\n                map((response: IRoute[]) => api_actions.stopRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.stopRoutesError({msg: err.error})))\n            ))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getStops),\n            take(1),\n            switchMap(() => this.dataService.getAllStops().pipe(\n                map((response: IStop[]) => api_actions.getStopsSuccess({stops: response})),\n                catchError(err => of(api_actions.getStopsError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:117\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.login),\n            switchMap((action) => this.dataService.login(action.data).pipe(\n                map(res => api_actions.loginSuccess({data: res})),\n                catchError((err) => of(api_actions.loginError({msg: err})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:211\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.register),\n            switchMap((action) => this.dataService.register(action.credentials).pipe(\n                map(res => api_actions.registerSuccess({data: res})),\n                catchError((err) => of(api_actions.registerError({msg: err}))),\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:221\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveRoute$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveRoute), \n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveRoute(action.code).pipe(\n                map((res: any) => api_actions.saveRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveRouteError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:161\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveStop$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveStop(action.code).pipe(\n                map((res: any) => api_actions.saveStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveStopError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/api.effects.ts:128\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Actions, concatLatestFrom, createEffect, ofType } from \"@ngrx/effects\";\nimport { catchError, filter, map, of, switchMap, take, tap, withLatestFrom } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport * as api_actions from '../Actions/api-calls.actions';\nimport { AppState } from \"../Reducers/api-reducer\";\nimport { getActiveRouteSchedules, getAllBookings, getAllStops, getSavedInfo, getSavedRouteCodes, getSavedStopCodes, selectCurrentLineRoutes, selectRoutePoints } from \"../Selectors/appState.selectors\";\nimport { ILine } from \"../Entities/line.entity\";\nimport { IRoute, IRouteInfo } from \"../Entities/route.entity\";\nimport { IScheduleDetails } from \"../Entities/schedule.entity\";\nimport { IStop } from \"../Entities/stop.entity\";\nimport { Plan } from \"../Entities/itinerary\";\nimport { Booking } from \"../Entities/booking.entity\";\nimport { ROUTER_NAVIGATED } from \"@ngrx/router-store\";\n\n@Injectable()\nexport class ApiEffects{\n\n    constructor(\n        private dataService: DataService, \n        private actions$: Actions, \n        private store: Store,\n    ){}\n\n    loadLines$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLines), take(1),\n            switchMap(() => this.dataService.getAllLines().pipe(\n                map((response: ILine[]) => api_actions.getLinesSuccess({lines: response})),\n                catchError((err) => of(api_actions.getLinesError({msg: err.error})))\n            )),\n        )     \n    );\n\n    loadLineRoutes$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLineRoutes),\n            withLatestFrom(this.store.select(selectCurrentLineRoutes)),\n            switchMap(([action, line]) => this.dataService.getLineRoutes(action.id).pipe(\n                map((response: IRoute[]) => api_actions.getLineRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.getLineRoutesError({msg: err.error})))\n            )),\n        )\n    );\n\n    loadRouteInfo$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getRouteDetails),\n            concatLatestFrom((action) => this.store.select(selectRoutePoints(action.code))),\n            filter(([action, points]) => !points || points.length === 0),\n            switchMap(([action, points]) => this.dataService.getRouteDetails(action.code).pipe(\n                map((response: IRouteInfo) => api_actions.getRouteDetailsuccess({routeInfo: response})),\n                catchError(err => of(api_actions.getRouteDetailsError({msg: err.error})))\n            )),\n        )\n    );\n\n    loadRouteSchedules$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getSchedules),\n            withLatestFrom(this.store.select(getActiveRouteSchedules)),\n            filter(([action, schedules]) => !schedules),\n            switchMap(([action]) => this.dataService.getRouteSchedules(action.code).pipe(\n                map((response: IScheduleDetails) => api_actions.getSchedulesSuccess({schedules: response})),\n                catchError(err => of(api_actions.getSchedulesError({msg: err.error})))\n            )),\n        )\n    );\n\n    loadStopRoutes$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.stopRoutes),\n            switchMap((action) => this.dataService.getRoutesByStop(action.stopCode).pipe(\n                map((response: IRoute[]) => api_actions.stopRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.stopRoutesError({msg: err.error})))\n            ))\n        )\n    );\n\n    loadPlans$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchPlan),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            ))\n        )\n    );\n\n    loadBookingPlan$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getItinerary),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getBookingPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            )),\n        )\n    );\n\n    loadBookings$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchBookings),\n            withLatestFrom(this.store.select(getAllBookings)),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getBookings().pipe(\n                map((res: Booking[]) => api_actions.fetchBookingsSuccess({data: res})),\n                catchError(err => of(api_actions.fetchBookingsError({msg: err.error.error})))\n            )),\n        )\n    );\n\n    loadStops$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getStops),\n            take(1),\n            switchMap(() => this.dataService.getAllStops().pipe(\n                map((response: IStop[]) => api_actions.getStopsSuccess({stops: response})),\n                catchError(err => of(api_actions.getStopsError({msg: err})))\n            ))      \n        )     \n    );\n\n    saveStop$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveStop(action.code).pipe(\n                map((res: any) => api_actions.saveStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveStopError({msg: err})))\n            ))      \n        )     \n    );\n\n    deleteStop$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteStop(action.code).pipe(\n                map((res: any) => api_actions.deleteStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteStopError({msg: err})))\n            ))      \n        )     \n    );\n\n    deleteRoute$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteRoute),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteRoute(action.code).pipe(\n                map((res) => api_actions.deleteRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteRouteError({msg: err})))\n            ))      \n        )     \n    );\n\n    saveRoute$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveRoute), \n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveRoute(action.code).pipe(\n                map((res: any) => api_actions.saveRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveRouteError({msg: err})))\n            ))      \n        )     \n    );\n\n    loadSavedRoutes$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedRoutes), \n            withLatestFrom(this.store.select(getSavedRouteCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedRoutes().pipe(\n                map((res: string[]) => api_actions.getSavedRoutesSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedRoutesError({msg: err})))\n            ))      \n        )     \n    );\n\n    loadSavedStops$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedStops), \n            withLatestFrom(this.store.select(getSavedStopCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedStops().pipe(\n                map((res: string[]) => api_actions.getSavedStopsSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedStopsError({msg: err})))\n            ))      \n        )     \n    );\n\n    loadSavedInfo$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedInfo), \n            withLatestFrom(this.store.select(getSavedInfo)),\n            filter(([action, info]) => !info),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedInfo().pipe(\n                map(res => api_actions.getSavedInfoSuccess(res)),\n                catchError(err => of(api_actions.getSavedInfoError({msg: err})))\n            ))      \n        )     \n    );\n\n    login$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.login),\n            switchMap((action) => this.dataService.login(action.data).pipe(\n                map(res => api_actions.loginSuccess({data: res})),\n                catchError((err) => of(api_actions.loginError({msg: err})))\n            )),\n        )\n    );\n\n    register$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.register),\n            switchMap((action) => this.dataService.register(action.credentials).pipe(\n                map(res => api_actions.registerSuccess({data: res})),\n                catchError((err) => of(api_actions.registerError({msg: err}))),\n            )),\n        )\n    );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEffects-1.html":{"url":"injectables/ApiEffects-1.html","title":"injectable - ApiEffects-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/api.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deleteRoute$\n                            \n                            \n                                deleteStop$\n                            \n                            \n                                loadBookingPlan$\n                            \n                            \n                                loadBookings$\n                            \n                            \n                                loadLineRoutes$\n                            \n                            \n                                loadLines$\n                            \n                            \n                                loadPlans$\n                            \n                            \n                                loadRouteInfo$\n                            \n                            \n                                loadRouteSchedules$\n                            \n                            \n                                loadSavedInfo$\n                            \n                            \n                                loadSavedRoutes$\n                            \n                            \n                                loadSavedStops$\n                            \n                            \n                                loadStopRoutes$\n                            \n                            \n                                loadStops$\n                            \n                            \n                                login$\n                            \n                            \n                                register$\n                            \n                            \n                                saveRoute$\n                            \n                            \n                                saveStop$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataService, actions$: Actions, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state/store/api.effects.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRoute$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteRoute),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteRoute(action.code).pipe(\n                map((res) => api_actions.deleteRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteRouteError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:151\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteStop$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteStop(action.code).pipe(\n                map((res: any) => api_actions.deleteStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteStopError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBookingPlan$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getItinerary),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getBookingPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadBookings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchBookings),\n            withLatestFrom(this.store.select(getAllBookings)),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getBookings().pipe(\n                map((res: Booking[]) => api_actions.fetchBookingsSuccess({data: res})),\n                catchError(err => of(api_actions.fetchBookingsError({msg: err.error.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadLineRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLineRoutes),\n            withLatestFrom(this.store.select(selectCurrentLineRoutes)),\n            switchMap(([action, line]) => this.dataService.getLineRoutes(action.id).pipe(\n                map((response: IRoute[]) => api_actions.getLineRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.getLineRoutesError({msg: err.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadLines$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLines), take(1),\n            switchMap(() => this.dataService.getAllLines().pipe(\n                map((response: ILine[]) => api_actions.getLinesSuccess({lines: response})),\n                catchError((err) => of(api_actions.getLinesError({msg: err.error})))\n            )),\n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchPlan),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            ))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRouteInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getRouteDetails),\n            concatLatestFrom((action) => this.store.select(selectRoutePoints(action.code))),\n            filter(([action, points]) => !points || points.length === 0),\n            switchMap(([action, points]) => this.dataService.getRouteDetails(action.code).pipe(\n                map((response: IRouteInfo) => api_actions.getRouteDetailsuccess({routeInfo: response})),\n                catchError(err => of(api_actions.getRouteDetailsError({msg: err.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadRouteSchedules$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getSchedules),\n            withLatestFrom(this.store.select(getActiveRouteSchedules)),\n            filter(([action, schedules]) => !schedules),\n            switchMap(([action]) => this.dataService.getRouteSchedules(action.code).pipe(\n                map((response: IScheduleDetails) => api_actions.getSchedulesSuccess({schedules: response})),\n                catchError(err => of(api_actions.getSchedulesError({msg: err.error})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedInfo), \n            withLatestFrom(this.store.select(getSavedInfo)),\n            filter(([action, info]) => !info),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedInfo().pipe(\n                map(res => api_actions.getSavedInfoSuccess(res)),\n                catchError(err => of(api_actions.getSavedInfoError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedRoutes), \n            withLatestFrom(this.store.select(getSavedRouteCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedRoutes().pipe(\n                map((res: string[]) => api_actions.getSavedRoutesSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedRoutesError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedStops), \n            withLatestFrom(this.store.select(getSavedStopCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedStops().pipe(\n                map((res: string[]) => api_actions.getSavedStopsSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedStopsError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:186\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStopRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.stopRoutes),\n            switchMap((action) => this.dataService.getRoutesByStop(action.stopCode).pipe(\n                map((response: IRoute[]) => api_actions.stopRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.stopRoutesError({msg: err.error})))\n            ))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getStops),\n            take(1),\n            switchMap(() => this.dataService.getAllStops().pipe(\n                map((response: IStop[]) => api_actions.getStopsSuccess({stops: response})),\n                catchError(err => of(api_actions.getStopsError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.login),\n            switchMap((action) => this.dataService.login(action.data).pipe(\n                map(res => api_actions.loginSuccess({data: res})),\n                catchError((err) => of(api_actions.loginError({msg: err})))\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:212\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.register),\n            switchMap((action) => this.dataService.register(action.credentials).pipe(\n                map(res => api_actions.registerSuccess({data: res})),\n                catchError((err) => of(api_actions.registerError({msg: err}))),\n            )),\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:222\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveRoute$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveRoute), \n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveRoute(action.code).pipe(\n                map((res: any) => api_actions.saveRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveRouteError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:162\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveStop$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveStop(action.code).pipe(\n                map((res: any) => api_actions.saveStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveStopError({msg: err})))\n            ))      \n        )     \n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/api.effects.ts:129\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType, concatLatestFrom } from \"@ngrx/effects\";\nimport { Store } from \"@ngrx/store\";\nimport { take, switchMap, map, catchError, of, withLatestFrom, filter, tap } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { selectCurrentLineRoutes, selectRoutePoints, getActiveRouteSchedules, getAllBookings, getSavedRouteCodes, getSavedStopCodes } from \"../Selectors/appState.selectors\";\nimport { getSavedInfo } from \"./api-calls.actions\";\nimport { AppState } from \"./api-reducer\";\nimport { Booking } from \"./booking.entity\";\nimport { Plan } from \"./itinerary\";\nimport { ILine } from \"./line.entity\";\nimport { IRoute, IRouteInfo } from \"./route.entity\";\nimport { IScheduleDetails } from \"./schedule.entity\";\nimport { IStop } from \"./stop.entity\";\nimport * as api_actions from \"./api-calls.actions\";\nimport * as select_actions from \"./select.actions\";\n\n@Injectable()\nexport class ApiEffects{\n\n    constructor(\n        private dataService: DataService, \n        private actions$: Actions, \n        private store: Store,\n    ){}\n\n    loadLines$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLines), take(1),\n            switchMap(() => this.dataService.getAllLines().pipe(\n                map((response: ILine[]) => api_actions.getLinesSuccess({lines: response})),\n                catchError((err) => of(api_actions.getLinesError({msg: err.error})))\n            )),\n        )     \n    );\n\n    loadLineRoutes$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getLineRoutes),\n            withLatestFrom(this.store.select(selectCurrentLineRoutes)),\n            switchMap(([action, line]) => this.dataService.getLineRoutes(action.id).pipe(\n                map((response: IRoute[]) => api_actions.getLineRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.getLineRoutesError({msg: err.error})))\n            )),\n        )\n    );\n\n    loadRouteInfo$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getRouteDetails),\n            concatLatestFrom((action) => this.store.select(selectRoutePoints(action.code))),\n            filter(([action, points]) => !points || points.length === 0),\n            switchMap(([action, points]) => this.dataService.getRouteDetails(action.code).pipe(\n                map((response: IRouteInfo) => api_actions.getRouteDetailsuccess({routeInfo: response})),\n                catchError(err => of(api_actions.getRouteDetailsError({msg: err.error})))\n            )),\n        )\n    );\n\n    loadRouteSchedules$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getSchedules),\n            withLatestFrom(this.store.select(getActiveRouteSchedules)),\n            filter(([action, schedules]) => !schedules),\n            switchMap(([action]) => this.dataService.getRouteSchedules(action.code).pipe(\n                map((response: IScheduleDetails) => api_actions.getSchedulesSuccess({schedules: response})),\n                catchError(err => of(api_actions.getSchedulesError({msg: err.error})))\n            )),\n        )\n    );\n\n    loadStopRoutes$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.stopRoutes),\n            switchMap((action) => this.dataService.getRoutesByStop(action.stopCode).pipe(\n                map((response: IRoute[]) => api_actions.stopRoutesSuccess({routes: response})),\n                catchError(err => of(api_actions.stopRoutesError({msg: err.error})))\n            ))\n        )\n    );\n\n    loadPlans$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchPlan),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            ))\n        )\n    );\n\n    loadBookingPlan$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.getItinerary),\n            filter(({data}) => !!data),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(({data}) => this.dataService.getBookingPlan(data).pipe(\n                map((response: Plan) => api_actions.fetchPlanSuccess({data: response})),\n                catchError(err => of(api_actions.fetchPlanError({msg: err})))\n            )),\n        )\n    );\n\n    loadBookings$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.fetchBookings),\n            withLatestFrom(this.store.select(getAllBookings)),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getBookings().pipe(\n                map((res: Booking[]) => api_actions.fetchBookingsSuccess({data: res})),\n                catchError(err => of(api_actions.fetchBookingsError({msg: err.error.error})))\n            )),\n        )\n    );\n\n    loadStops$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getStops),\n            take(1),\n            switchMap(() => this.dataService.getAllStops().pipe(\n                map((response: IStop[]) => api_actions.getStopsSuccess({stops: response})),\n                catchError(err => of(api_actions.getStopsError({msg: err})))\n            ))      \n        )     \n    );\n\n    saveStop$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveStop(action.code).pipe(\n                map((res: any) => api_actions.saveStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveStopError({msg: err})))\n            ))      \n        )     \n    );\n\n    deleteStop$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteStop),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteStop(action.code).pipe(\n                map((res: any) => api_actions.deleteStopSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteStopError({msg: err})))\n            ))      \n        )     \n    );\n\n    deleteRoute$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.deleteRoute),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.deleteRoute(action.code).pipe(\n                map((res) => api_actions.deleteRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.deleteRouteError({msg: err})))\n            ))      \n        )     \n    );\n\n    saveRoute$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.saveRoute), \n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap((action) => this.dataService.saveRoute(action.code).pipe(\n                map((res: any) => api_actions.saveRouteSuccess({code: action.code})),\n                catchError(err => of(api_actions.saveRouteError({msg: err})))\n            ))      \n        )     \n    );\n\n    loadSavedRoutes$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedRoutes), \n            withLatestFrom(this.store.select(getSavedRouteCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedRoutes().pipe(\n                map((res: string[]) => api_actions.getSavedRoutesSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedRoutesError({msg: err})))\n            ))      \n        )     \n    );\n\n    loadSavedStops$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedStops), \n            withLatestFrom(this.store.select(getSavedStopCodes)),\n            filter(([action, codes]) => !codes),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedStops().pipe(\n                map((res: string[]) => api_actions.getSavedStopsSuccess({codes: res})),\n                catchError(err => of(api_actions.getSavedStopsError({msg: err})))\n            ))      \n        )     \n    );\n\n    loadSavedInfo$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(api_actions.getSavedInfo), \n            withLatestFrom(this.store.select(getSavedInfo)),\n            filter(([action, info]) => !info),\n            tap(() => this.store.dispatch(api_actions.showSpinner())),\n            switchMap(() => this.dataService.getSavedInfo().pipe(\n                map(res => api_actions.getSavedInfoSuccess(res)),\n                catchError(err => of(api_actions.getSavedInfoError({msg: err})))\n            ))      \n        )     \n    );\n\n    login$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.login),\n            switchMap((action) => this.dataService.login(action.data).pipe(\n                map(res => api_actions.loginSuccess({data: res})),\n                catchError((err) => of(api_actions.loginError({msg: err})))\n            )),\n        )\n    );\n\n    register$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.register),\n            switchMap((action) => this.dataService.register(action.credentials).pipe(\n                map(res => api_actions.registerSuccess({data: res})),\n                catchError((err) => of(api_actions.registerError({msg: err}))),\n            )),\n        )\n    );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flag\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onResize\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(io: SocketIOService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        io\n                                                  \n                                                        \n                                                                        SocketIOService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onResize\n                        \n                    \n                \n            \n            \n                \n                    \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/app.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CityBus'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnInit } from '@angular/core';\nimport { SocketIOService } from './services/socket-io.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  public title = 'CityBus';\n  public flag: boolean = true;\n\n  constructor(private io: SocketIOService){}\n\n  ngOnInit(){\n    this.onResize();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(){\n\n    if(window.innerWidth > 500){\n      this.flag = true;\n    }else{\n      this.flag = false;\n    }\n\n  }\n  \n}\n\n    \n\n    \n        \n\n  \n  \n\n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n.content-wrapper{\n    display: flex;\n    flex-direction: row;\n}\n\n.hide{\n    display: none;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nSocketIOService\n\nSocketIOService\n\nAppModule -->\n\nSocketIOService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SocketIOService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SidebarModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { SidebarModule } from './modules/sidebar/sidebar.module';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiEffects } from './state/Effects/api.effects';\nimport { appStateReducer } from './state/Reducers/api-reducer';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { MapModule } from './modules/map/map.module';\nimport { RouterModule } from '@angular/router';\nimport { StoreRouterConnectingModule, routerReducer, RouterState} from '@ngrx/router-store';\nimport { SocketIOService } from './services/socket-io.service';\nimport { RouterEffects } from './state/Effects/router.effects';\nimport { CustomSerializer } from './state/Selectors/custom-route-serializer';\nimport { AuthEffects } from './modules/auth/state/auth.effects';\nimport { authReducer } from './modules/auth/state/message.reducer';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    RouterModule,\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    LeafletModule,\n    SidebarModule,\n    MapModule,\n    HttpClientModule,\n    StoreModule.forRoot({api: appStateReducer, router: routerReducer, auth: authReducer}),\n    EffectsModule.forRoot([ApiEffects, RouterEffects, AuthEffects]),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    StoreRouterConnectingModule.forRoot({serializer: CustomSerializer, stateKey: 'router'})\n  ],\n  providers: [HttpClient, SocketIOService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Reducers/api-reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bookings\n                                        \n                                \n                                \n                                        \n                                            itinerary\n                                        \n                                \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            module\n                                        \n                                \n                                \n                                        \n                                            occupancy\n                                        \n                                \n                                \n                                        \n                                            plan\n                                        \n                                \n                                \n                                        \n                                            routes\n                                        \n                                \n                                \n                                        \n                                            savedRoutes\n                                        \n                                \n                                \n                                        \n                                            savedStops\n                                        \n                                \n                                \n                                        \n                                            schedule\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookings:         BookingState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BookingState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itinerary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itinerary:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:         LineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        module\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        module:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupancy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupancy:     Dictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Dictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plan:     Plan | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plan | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:         RouteState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouteState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        savedRoutes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        savedRoutes:     string[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        savedStops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        savedStops:     string[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schedule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schedule:         ScheduleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScheduleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:         StopState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StopState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on} from \"@ngrx/store\";\nimport { inititialLineState, LineState, lineStateAdapter } from \"../Entities/line.entity\";\nimport { inititialRouteState, RouteState, routeStateAdapter } from \"../Entities/route.entity\";\nimport { inititialStopState, StopState, stopStateAdapter } from \"../Entities/stop.entity\";\nimport * as select_actions from '../Actions/select.actions';\nimport * as api_actions from '../Actions/api-calls.actions';\nimport { inititialSchdeduleState, ScheduleState, scheduleStateAdapter } from \"../Entities/schedule.entity\";\nimport { Plan } from \"../Entities/itinerary\";\nimport { BookingState, bookingStateAdapter, initialBookingState } from \"../Entities/booking.entity\";\nimport { Dictionary } from \"@ngrx/entity\";\nimport { Actions } from \"@ngrx/effects\";\nimport { Subject } from \"rxjs\";\n\nexport interface AppState{\n    stops: StopState;\n    lines: LineState;\n    routes: RouteState;\n    schedule: ScheduleState;\n    bookings: BookingState;\n    plan: Plan | undefined;\n    occupancy: Dictionary;\n    itinerary: number;\n    module: string;\n    spinner: boolean;\n    savedStops: string[] | undefined;\n    savedRoutes: string[] | undefined;\n};\n\nexport const initialAppState: AppState = {\n    lines: inititialLineState,\n    stops: inititialStopState,\n    routes: inititialRouteState,\n    schedule: inititialSchdeduleState,\n    bookings: initialBookingState,\n    occupancy: {},\n    plan: undefined,\n    itinerary: -1,\n    module: '',\n    spinner: false,\n    savedStops: undefined,\n    savedRoutes: undefined,\n};\n\n/* API Reducer */\nexport const appStateReducer = createReducer(\n    initialAppState,\n    on(api_actions.getLineRoutes, api_actions.getLines, (state: AppState, action): AppState=>{\n        return {...state};\n    }),\n    on(api_actions.getFilteredStopsSuccess, (state: AppState, action): AppState=>{\n        return {...state, stops: stopStateAdapter.setAll(action.stops, state.stops)};\n    }),\n    on(api_actions.getLinesSuccess, (state: AppState, action): AppState=>{\n        return {...state, lines: lineStateAdapter.addMany(action.lines, state.lines)};\n    }),\n    on(select_actions.selectRoute, (state: AppState, action): AppState => {\n        return {...state, routes: {...state.routes, activeRoute: action.code}};\n    }),\n    on(select_actions.selectStop, (state: AppState, action): AppState => {\n        return {...state, stops:{...state.stops, activeStopCode: action.code}};\n    }),\n    on(api_actions.getLineRoutesSuccess, api_actions.stopRoutesSuccess, (state: AppState, action): AppState => {\n        return {...state, routes: routeStateAdapter.setAll(action.routes, state.routes)};\n    }),\n    on(api_actions.getSchedulesSuccess, (state: AppState, action): AppState => {\n        return {...state, schedule: scheduleStateAdapter.setOne(action.schedules, state.schedule)};\n    }),\n    on(api_actions.getStopsSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false ,stops: stopStateAdapter.setAll(action.stops, state.stops)};\n    }),\n    on(api_actions.fetchPlanSuccess, (state: AppState, action): AppState => {\n        return {...state, plan: action.data, spinner: false, occupancy: action.data.occupancy};\n    }),\n    on(api_actions.fetchBookingsSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, bookings: bookingStateAdapter.setAll(action.data, state.bookings)};\n    }),\n    on(select_actions.selectItinerary, (state: AppState, action): AppState => {\n        return {...state, itinerary: action.index};\n    }),\n    on(select_actions.emptyPlan, (state: AppState, action): AppState => {\n        return {...state, plan: undefined, itinerary: -1};\n    }),\n    on(select_actions.selectBooking, (state: AppState, action): AppState => {\n        return {...state, bookings: {...state.bookings, activeBooking: action.trip_id}};\n    }),\n    on(select_actions.selectLine, (state: AppState, action): AppState => {\n        return {...state, lines: {...state.lines, activeLineId: action.id}, schedule: scheduleStateAdapter.removeAll(state.schedule)};\n    }),\n    on(select_actions.module, (state: AppState, action): AppState => {\n        return {...state, module: action.module};\n    }),\n    on(api_actions.showSpinner, (state: AppState, action): AppState => {\n        return {...state, spinner: true};\n    }),\n    on(api_actions.deleteBooking, (state: AppState, action): AppState => {\n        return {...state, spinner: false, bookings: bookingStateAdapter.removeOne(action.trip_id, state.bookings)};\n    }),\n    on(api_actions.saveStopSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedStops: [...state.savedStops!, action.code]};\n    }),\n    on(api_actions.deleteStopSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedStops: state.savedStops!.filter(code => code != action.code)};\n    }),\n    on(api_actions.getSavedRoutesSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedRoutes: action.codes};\n    }),\n    on(api_actions.getSavedStopsSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedStops: action.codes};\n    }),\n    on(api_actions.saveRouteSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedRoutes: [...state.savedRoutes!, action.code]};\n    }),\n    on(api_actions.deleteRouteSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedRoutes: state.savedRoutes!.filter(code => code != action.code)};\n    }),\n    on(api_actions.getSavedInfoSuccess, (state: AppState, action): AppState => {\n        return {\n            ...state, spinner: false, \n            savedRoutes: action.routes.map(route => route.code),\n            savedStops: action.stops.map(stop => stop.code),\n            stops: stopStateAdapter.addMany(action.stops, state.stops),\n            routes: routeStateAdapter.setAll(action.routes, state.routes)\n        };\n    }),\n    on(select_actions.emptyPath, (state: AppState, action): AppState => {\n        return {...state,  routes: routeStateAdapter.updateOne({\n                    id: state.routes.activeRoute, changes: {points: []}\n                }, state.routes),\n                schedule: scheduleStateAdapter.removeAll(state.schedule)\n        };\n    }),\n    on(api_actions.getRouteDetailsuccess, (state: AppState, action): AppState => {\n        return {...state, stops: stopStateAdapter.addMany(action.routeInfo.stops, state.stops), \n                routes: routeStateAdapter.updateOne({\n                    id: action.routeInfo.code, changes: {points: action.routeInfo.points},\n                }, state.routes), \n        };\n    }),\n    on(select_actions.updateOccupancy, (state: AppState, action): AppState => {\n        \n        const occupancy: Dictionary = {...state.occupancy};\n        for (const key in occupancy) {\n            if (action.trip_ids.includes(+key)) {\n                occupancy[key]! -= action.value;\n            }\n        }\n\n        return {...state, occupancy: occupancy};\n    }),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState-1.html":{"url":"interfaces/AppState-1.html","title":"interface - AppState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/api-reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bookings\n                                        \n                                \n                                \n                                        \n                                            itinerary\n                                        \n                                \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            module\n                                        \n                                \n                                \n                                        \n                                            occupancy\n                                        \n                                \n                                \n                                        \n                                            plan\n                                        \n                                \n                                \n                                        \n                                            routes\n                                        \n                                \n                                \n                                        \n                                            savedRoutes\n                                        \n                                \n                                \n                                        \n                                            savedStops\n                                        \n                                \n                                \n                                        \n                                            schedule\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bookings:         BookingState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BookingState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itinerary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itinerary:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:         LineState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LineState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        module\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        module:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupancy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupancy:     Dictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Dictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        plan\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        plan:     Plan | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Plan | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:         RouteState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouteState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        savedRoutes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        savedRoutes:     string[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        savedStops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        savedStops:     string[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schedule\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schedule:         ScheduleState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ScheduleState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:         StopState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StopState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\nimport { createReducer, on } from \"@ngrx/store\";\nimport { BookingState, initialBookingState, bookingStateAdapter } from \"./booking.entity\";\nimport { Plan } from \"./itinerary\";\nimport { LineState, inititialLineState, lineStateAdapter } from \"./line.entity\";\nimport { RouteState, inititialRouteState, routeStateAdapter } from \"./route.entity\";\nimport { ScheduleState, inititialSchdeduleState, scheduleStateAdapter } from \"./schedule.entity\";\nimport { StopState, inititialStopState, stopStateAdapter } from \"./stop.entity\";\nimport * as api_actions from \"./api-calls.actions\";\nimport * as select_actions from \"./select.actions\";\n\nexport interface AppState{\n    stops: StopState;\n    lines: LineState;\n    routes: RouteState;\n    schedule: ScheduleState;\n    bookings: BookingState;\n    plan: Plan | undefined;\n    occupancy: Dictionary;\n    itinerary: number;\n    module: string;\n    spinner: boolean;\n    savedStops: string[] | undefined;\n    savedRoutes: string[] | undefined;\n};\n\nexport const initialAppState: AppState = {\n    lines: inititialLineState,\n    stops: inititialStopState,\n    routes: inititialRouteState,\n    schedule: inititialSchdeduleState,\n    bookings: initialBookingState,\n    occupancy: {},\n    plan: undefined,\n    itinerary: -1,\n    module: '',\n    spinner: false,\n    savedStops: undefined,\n    savedRoutes: undefined,\n};\n\n/* API Reducer */\nexport const appStateReducer = createReducer(\n    initialAppState,\n    on(api_actions.getLineRoutes, api_actions.getLines, (state: AppState, action): AppState=>{\n        return {...state};\n    }),\n    on(api_actions.getFilteredStopsSuccess, (state: AppState, action): AppState=>{\n        return {...state, stops: stopStateAdapter.setAll(action.stops, state.stops)};\n    }),\n    on(api_actions.getLinesSuccess, (state: AppState, action): AppState=>{\n        return {...state, lines: lineStateAdapter.addMany(action.lines, state.lines)};\n    }),\n    on(select_actions.selectRoute, (state: AppState, action): AppState => {\n        return {...state, routes: {...state.routes, activeRoute: action.code}};\n    }),\n    on(select_actions.selectStop, (state: AppState, action): AppState => {\n        return {...state, stops:{...state.stops, activeStopCode: action.code}};\n    }),\n    on(api_actions.getSchedulesSuccess, (state: AppState, action): AppState => {\n        return {...state, schedule: scheduleStateAdapter.setOne(action.schedules, state.schedule)};\n    }),\n    on(api_actions.getStopsSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false ,stops: stopStateAdapter.setAll(action.stops, state.stops)};\n    }),\n    on(api_actions.fetchPlanSuccess, (state: AppState, action): AppState => {\n        return {...state, plan: action.data, spinner: false, occupancy: action.data.occupancy};\n    }),\n    on(api_actions.fetchBookingsSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, bookings: bookingStateAdapter.setAll(action.data, state.bookings)};\n    }),\n    on(select_actions.selectItinerary, (state: AppState, action): AppState => {\n        return {...state, itinerary: action.index};\n    }),\n    on(select_actions.emptyPlan, (state: AppState, action): AppState => {\n        return {...state, plan: undefined, itinerary: -1};\n    }),\n    on(select_actions.selectBooking, (state: AppState, action): AppState => {\n        return {...state, bookings: {...state.bookings, activeBooking: action.trip_id}};\n    }),\n    on(select_actions.selectLine, (state: AppState, action): AppState => {\n        return {...state, lines: {...state.lines, activeLineId: action.id}, schedule: scheduleStateAdapter.removeAll(state.schedule)};\n    }),\n    on(select_actions.module, (state: AppState, action): AppState => {\n        return {...state, module: action.module};\n    }),\n    on(api_actions.showSpinner, (state: AppState, action): AppState => {\n        return {...state, spinner: true};\n    }),\n    on(api_actions.deleteBooking, (state: AppState, action): AppState => {\n        return {...state, spinner: false, bookings: bookingStateAdapter.removeOne(action.trip_id, state.bookings)};\n    }),\n    on(api_actions.saveStopSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedStops: [...state.savedStops!, action.code]};\n    }),\n    on(api_actions.deleteStopSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedStops: state.savedStops!.filter(code => code != action.code)};\n    }),\n    on(api_actions.getSavedRoutesSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedRoutes: action.codes};\n    }),\n    on(api_actions.getSavedStopsSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedStops: action.codes};\n    }),\n    on(api_actions.saveRouteSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedRoutes: [...state.savedRoutes!, action.code]};\n    }),\n    on(api_actions.deleteRouteSuccess, (state: AppState, action): AppState => {\n        return {...state, spinner: false, savedRoutes: state.savedRoutes!.filter(code => code != action.code)};\n    }),\n    on(select_actions.emptyPath, (state: AppState, action): AppState => {\n        return {...state,  routes: routeStateAdapter.updateOne({\n                    id: state.routes.activeRoute, changes: {points: []}\n                }, state.routes),\n                schedule: scheduleStateAdapter.removeAll(state.schedule)\n        };\n    }),\n    on(api_actions.getRouteDetailsuccess, (state: AppState, action): AppState => {\n        return {...state, stops: stopStateAdapter.addMany(action.routeInfo.stops, state.stops), \n                routes: routeStateAdapter.updateOne({\n                    id: action.routeInfo.code, changes: {points: action.routeInfo.points},\n                }, state.routes), \n        };\n    }),\n    on(select_actions.updateOccupancy, (state: AppState, action): AppState => {\n        \n        const occupancy: Dictionary = {...state.occupancy};\n        for (const key in occupancy) {\n            if (action.trip_ids.includes(+key)) {\n                occupancy[key]! -= action.value;\n            }\n        }\n\n        return {...state, occupancy: occupancy};\n    }),\n);\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthEffects.html":{"url":"injectables/AuthEffects.html","title":"injectable - AuthEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/state/auth.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginSuccess$\n                            \n                            \n                                logout$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/state/auth.effects.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginSuccess$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.loginSuccess, api_actions.registerSuccess),\n            tap((action) => {\n                localStorage.setItem('token', JSON.stringify(action.data.access_token));\n                this.router.navigate(['']);\n            })\n        ), {dispatch: false}\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/state/auth.effects.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.logOut),\n            tap(() => {\n                localStorage.clear();\n                this.router.navigate(['']);\n            })\n        ), {dispatch: false}\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/state/auth.effects.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport * as api_actions from \"src/app/state/Actions/api-calls.actions\";\nimport { tap } from \"rxjs\";\nimport { Router } from \"@angular/router\";\n\n\n@Injectable()\nexport class AuthEffects{\n\n    constructor(private actions$: Actions, private router: Router){}\n\n    loginSuccess$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.loginSuccess, api_actions.registerSuccess),\n            tap((action) => {\n                localStorage.setItem('token', JSON.stringify(action.data.access_token));\n                this.router.navigate(['']);\n            })\n        ), {dispatch: false}\n    );\n\n    logout$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(api_actions.logOut),\n            tap(() => {\n                localStorage.clear();\n                this.router.navigate(['']);\n            })\n        ), {dispatch: false}\n    );\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/auth-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth-guard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth-guard.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService implements CanActivate {\n  \n  constructor(private auth: AuthService, private router: Router) {}\n\n  //ensure if a route can be activated\n  public canActivate() {\n\n    if (this.auth.isAuthenticated()) {\n      return true;\n    }\n\n    this.router.navigate([{ outlets: { sidebar: ['auth', 'login'] }}]);\n    return false;\n  }\n}\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            RegisterComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { SharedModule } from '../shared-module/shared-module.module';\nimport {MatButtonModule} from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { AuthGuardService } from '../../services/auth-guard.service';\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    SharedModule,\n    MatButtonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [AuthService, AuthGuardService],\n  exports: []\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthRoutingModule.html":{"url":"modules/AuthRoutingModule.html","title":"module - AuthRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\n\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jwtHelper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUserInfo\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                removeUserInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { name: any; email: any; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isAuthenticated\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAuthenticated()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/auth.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwtHelper\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport jwt_decode from 'jwt-decode';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n\n  private jwtHelper;\n  \n  constructor() {\n    this.jwtHelper = new JwtHelperService();\n  }\n\n  public isAuthenticated(): boolean {\n    const token: string = localStorage.getItem('token');\n\n    if (!token) {\n      return false;\n    }\n\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  public getUserInfo() {\n    let token = localStorage.getItem('token');\n    let dec: any = jwt_decode(token);\n    return {name: dec.name, email: dec.email};\n  }\n\n  public removeUserInfo() {\n    localStorage.clear();\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookInfo.html":{"url":"interfaces/BookInfo.html","title":"interface - BookInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/planner/state/bookings.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            it\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        it\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        it:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Booking } from \"src/app/state/Entities/booking.entity\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { filter, throttleTime, switchMap, Observable, map, Subject, tap } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { AppState } from \"src/app/state/Reducers/api-reducer\";\nimport { Store } from \"@ngrx/store\";\nimport * as api_actions from \"src/app/state/Actions/api-calls.actions\";\nimport { Router } from \"@angular/router\";\nimport { newBooking, selectBooking } from \"src/app/state/Selectors/appState.selectors\";\n\nexport interface BookInfo{\n    user: string;\n    it: number;\n};\n\nexport interface BookingState{\n    delete_id: number;\n    toaster: Subject,\n    info: BookInfo | undefined\n    book: boolean\n};\n\nexport const initialBookingState: BookingState = {\n    delete_id: -1,\n    toaster: new Subject(),\n    info: undefined,\n    book: false\n};\n  \n@Injectable()\nexport class BookingsStore extends ComponentStore {\n    \n    constructor(private data: DataService, private store: Store, private router: Router) {\n        super(initialBookingState);\n    }\n\n    public deleteComplete = this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, delete_id: -1};\n    });\n\n    public changeDelete = this.updater((state: BookingState, trip_id: number): BookingState => {\n        return {...state, delete_id: trip_id};\n    });\n\n    public initBooking = this.updater((state: BookingState, info: BookInfo): BookingState => {\n        return {...state, info: {...info}, book: true};\n    });\n\n    public bookingCompleted = this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, book: false};\n    });\n\n    public dispatchBooking = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.book && !!state.info),\n            switchMap(({info}) => this.store.select(newBooking(info!.user, info!.it)).pipe(\n                switchMap((bookings) => this.data.book(bookings)),\n                tapResponse(\n                    (res: any) => this.bookingCompleted('booking success'), \n                    (error: HttpErrorResponse) => this.bookingCompleted(error.error.error)\n                )\n            ))\n        );\n    });\n\n    public deleteBooking = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.delete_id != -1),\n            switchMap(state => this.store.select(selectBooking(state.delete_id))),\n            filter(booking => !!booking),\n            switchMap((booking) => this.data.deleteBooking(booking!).pipe(\n                tapResponse(\n                    (res: any) => {\n                        this.deleteComplete('booking canceled');\n                        this.store.dispatch(api_actions.deleteBooking({trip_id: booking!.trip_id}))\n                    }, \n                    (error: HttpErrorResponse) => {\n                        this.deleteComplete(error.error);\n                    }\n                )\n            )),\n        );\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookOptionsComponent.html":{"url":"components/BookOptionsComponent.html","title":"component - BookOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/book-options/book-options.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                book-options\n            \n\n            \n                styleUrls\n                ./book-options.component.css\n            \n\n\n\n            \n                templateUrl\n                ./book-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                myBookings\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                tripPlanner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/book-options/book-options.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        myBookings\n                        \n                    \n                \n            \n            \n                \n                    \n                    myBookings(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/book-options/book-options.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/book-options/book-options.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tripPlanner\n                        \n                    \n                \n            \n            \n                \n                    \n                    tripPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/book-options/book-options.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\n\n\n@Component({\n  selector: 'book-options',\n  templateUrl: './book-options.component.html',\n  styleUrls: ['./book-options.component.css']\n})\nexport class BookOptionsComponent implements OnInit {\n\n  constructor(private router: Router, private store: Store) { }\n\n  ngOnInit(): void {}\n\n  public myBookings(data: any): void{\n    this.router.navigate([{ outlets: \n      { sidebar: [ 'routes', 'bookings'] }}], \n      {queryParams: {module: 'trip_options'}\n    });\n  }\n\n  public tripPlanner(): void{\n    this.router.navigate([{ outlets: \n      { sidebar: [ 'routes', 'trip', 'options'] }}], \n      {queryParams: {module: 'trip_options'}\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n        Options\n        \n        \n    \n        \n        \n        \n        \n        \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./book-options.component.css\n                \n                :host{\n    width: 100%;\n    display: flex;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    max-height: calc(100vh - 290px);\n    padding-right: 3px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n    padding-top: 15px;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n    height: calc(100vh - 140px);\n    position: relative;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Options                                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Booking.html":{"url":"interfaces/Booking.html","title":"interface - Booking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/booking.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            endStop\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            startStop\n                                        \n                                \n                                \n                                        \n                                            stopCodes\n                                        \n                                \n                                \n                                        \n                                            travel\n                                        \n                                \n                                \n                                        \n                                            trip_id\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endStop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endStop:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startStop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startStop:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCodes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        travel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        travel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trip_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trip_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityAdapter, EntityState, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface Booking{\n    trip_id: number;\n    user_id: string;\n    startStop: string;\n    endStop: string;\n    stopCodes: string[];\n    start: string;\n    end: string;\n    route: string;\n    travel: string;\n    slug: string;\n}\n\nexport interface BookingState extends EntityState{\n    activeBooking: number,\n};\n\nexport const bookingStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (booking: Booking)=> booking.trip_id\n});\n\nexport const initialBookingState: BookingState = bookingStateAdapter.getInitialState({\n    activeBooking: -1,\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Booking-1.html":{"url":"interfaces/Booking-1.html","title":"interface - Booking-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Booking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/booking.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            endStop\n                                        \n                                \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            startStop\n                                        \n                                \n                                \n                                        \n                                            stopCodes\n                                        \n                                \n                                \n                                        \n                                            travel\n                                        \n                                \n                                \n                                        \n                                            trip_id\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endStop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endStop:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startStop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startStop:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCodes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        travel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        travel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trip_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trip_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityAdapter, EntityState, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface Booking{\n    trip_id: number;\n    user_id: string;\n    startStop: string;\n    endStop: string;\n    stopCodes: string[];\n    start: string;\n    end: string;\n    route: string;\n    travel: string;\n    slug: string;\n}\n\nexport interface BookingState extends EntityState{\n    activeBooking: number,\n};\n\nexport const bookingStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (booking: Booking)=> booking.trip_id\n});\n\nexport const initialBookingState: BookingState = bookingStateAdapter.getInitialState({\n    activeBooking: -1,\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingComponent.html":{"url":"components/BookingComponent.html","title":"component - BookingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/booking/booking.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                booking-component\n            \n\n            \n                styleUrls\n                ./booking.component.css\n            \n\n\n\n            \n                templateUrl\n                ./booking.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onCancel\n                            \n                            \n                                    Public\n                                onMap\n                            \n                            \n                                    Public\n                                onQR\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                booking\n                            \n                            \n                                flag\n                            \n                            \n                                index\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                map\n                            \n                            \n                                qr\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/booking/booking.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        booking\n                    \n                \n                \n                    \n                        Type :         Booking\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/booking/booking.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/booking/booking.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/booking/booking.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/booking/booking.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        map\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/booking/booking.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        qr\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/booking/booking.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/booking/booking.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/booking/booking.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/booking/booking.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onQR\n                        \n                    \n                \n            \n            \n                \n                    \n                    onQR()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/booking/booking.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Booking } from 'src/app/state/Entities/booking.entity';\n\n@Component({\n  selector: 'booking-component',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css']\n})\nexport class BookingComponent implements OnInit {\n\n  @Input() public booking!: Booking;\n  @Input() public index: number = 0;\n  @Input() public flag: boolean = true;\n\n  @Output() public cancel = new EventEmitter();\n  @Output() public map = new EventEmitter();\n  @Output() public qr = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  public onMap(){\n    this.map.emit(this.booking);\n  }\n\n  public onCancel(){\n    this.cancel.emit(this.booking.trip_id);\n  }\n\n  public onQR(){\n    this.qr.next(this.booking);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                {{booking.route}}\n            \n            \n                \n                \n                \n                    \n                        Ακύρωση\n                    \n                \n            \n        \n        \n            From\n            {{booking.start}}({{booking.startStop}})\n        \n        \n            To\n            {{booking.end}}({{booking.endStop}})\n        \n        \n            Travel\n            {{booking.travel}}\n        \n    \n\n\n    \n\n    \n                \n                    ./booking.component.css\n                \n                \n:host{\n    width: 100%;\n    gap: 10px;\n    font: 400 14px/20px Roboto, \"Helvetica Neue\", sans-serif;\n}\n\n.entity-wrapper{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    cursor: pointer;\n}\n\n.text-content{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 7px;\n}\n\n.description{\n    font-size: 12px;\n    color: #8190a4;\n    font-weight: bold;\n}\n\n.option-text{\n    font-weight: 600;\n    color: #002D62;\n    font-size: 15px;\n}\n\n.entity-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 2px;\n    color: #545f6d;\n    font-size: 14px;\n    padding: 17px 15px 17px 20px;\n}\n\n.entity-type{\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    margin-bottom: 10px;\n    width: 100%;\n}\n\n.entity-type>i{\n    padding-top: 2px;\n}\n\n.center{\n    align-self: center !important;\n    justify-self: center !important;\n}\n\n.icon{\n    font-size: 14px;\n}\n\n.bold{\n    color: #2e3e51;\n    font-size: 15px;\n}\n\n.text-content-no-incoming{\n    display: flex;\n    flex-direction: column;\n}\n\n.malakas{\n    color: #2e3e51;\n    font-weight: bold;\n    font-size: 16px;\n}\n\n.small-malakas{\n    color: #2e3e51;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n.right{\n    display: flex;\n    flex-direction: row;\n    gap: 7px;\n}\n\n.header{\n    justify-content: space-between !important;\n    align-items: center;\n}\n\n\n::ng-deep .mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #002D62;\n}\n\n::ng-deep .mat-raised-button {\n    min-width: unset !important;\n    line-height: unset !important;\n    padding: 1px 5px 0px 5px !important;\n    font-size: 14px !important;\n}\n\n::ng-deep .mat-stroked-button {\n    padding: 0 8px !important;\n    line-height: 32px !important;\n}\n\n::ng-deep .mat-expansion-panel-header-title, .mat-expansion-panel-header-description {\n    margin-right: 0px !important;\n}\n\n.book-menu{\n    margin-left: 5px;\n}\n\n::ng-deep .mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n    color: #2b3b4c !important;\n}\n\n::ng-deep .mat-button, .mat-icon-button, .mat-stroked-button {\n    background: rgb(0 0 0 / 10%) !important;\n}\n\nbutton{\n    font-size: 14px !important;\n    font-weight: bold;\n}\n\n.img{\n    font-size: 20px !important;\n    padding: 7px 7px 7px 7px !important;\n    transition-duration: .4s;\n    border-radius: 3px;\n    color: #002D62;\n}\n\n.img:hover{\n    background: #b7cbe4;\n}\n\n.left{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n    align-items: center;\n}\n\n.fa-bus{\n    font-size: 20px !important;\n    color: #002D62;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{booking.route}}                                                                                                                    Ακύρωση                                                                            From            {{booking.start}}({{booking.startStop}})                            To            {{booking.end}}({{booking.endStop}})                            Travel            {{booking.travel}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/BookingPipe.html":{"url":"pipes/BookingPipe.html","title":"pipe - BookingPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  BookingPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/planner/pipes/bookings.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        bookings\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(data: Booking[], value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/pipes/bookings.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Booking[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { Booking } from \"src/app/state/Entities/booking.entity\";\n\n@Pipe({ name: 'bookings' })\nexport class BookingPipe implements PipeTransform {\n\n  public transform(data: Booking[], value: string) {\n\n    if(!data){\n      return [];\n    }\n\n    const upper: string = value.toUpperCase();\n    return data.filter((b: Booking) => \n        b.start.toUpperCase().includes(upper) || \n        b.end.includes(value) ||\n        b.route.includes(value)\n    ).slice(0, 20);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingState.html":{"url":"interfaces/BookingState.html","title":"interface - BookingState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/booking.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeBooking\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeBooking\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeBooking:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityAdapter, EntityState, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface Booking{\n    trip_id: number;\n    user_id: string;\n    startStop: string;\n    endStop: string;\n    stopCodes: string[];\n    start: string;\n    end: string;\n    route: string;\n    travel: string;\n    slug: string;\n}\n\nexport interface BookingState extends EntityState{\n    activeBooking: number,\n};\n\nexport const bookingStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (booking: Booking)=> booking.trip_id\n});\n\nexport const initialBookingState: BookingState = bookingStateAdapter.getInitialState({\n    activeBooking: -1,\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingState-1.html":{"url":"interfaces/BookingState-1.html","title":"interface - BookingState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/booking.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeBooking\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeBooking\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeBooking:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityAdapter, EntityState, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface Booking{\n    trip_id: number;\n    user_id: string;\n    startStop: string;\n    endStop: string;\n    stopCodes: string[];\n    start: string;\n    end: string;\n    route: string;\n    travel: string;\n    slug: string;\n}\n\nexport interface BookingState extends EntityState{\n    activeBooking: number,\n};\n\nexport const bookingStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (booking: Booking)=> booking.trip_id\n});\n\nexport const initialBookingState: BookingState = bookingStateAdapter.getInitialState({\n    activeBooking: -1,\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BookingState-2.html":{"url":"interfaces/BookingState-2.html","title":"interface - BookingState-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BookingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/planner/state/bookings.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            book\n                                        \n                                \n                                \n                                        \n                                            delete_id\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                                \n                                        \n                                            toaster\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        book\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        book:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delete_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delete_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         BookInfo | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BookInfo | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        toaster\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        toaster:     Subject\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Subject\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Booking } from \"src/app/state/Entities/booking.entity\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { filter, throttleTime, switchMap, Observable, map, Subject, tap } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { AppState } from \"src/app/state/Reducers/api-reducer\";\nimport { Store } from \"@ngrx/store\";\nimport * as api_actions from \"src/app/state/Actions/api-calls.actions\";\nimport { Router } from \"@angular/router\";\nimport { newBooking, selectBooking } from \"src/app/state/Selectors/appState.selectors\";\n\nexport interface BookInfo{\n    user: string;\n    it: number;\n};\n\nexport interface BookingState{\n    delete_id: number;\n    toaster: Subject,\n    info: BookInfo | undefined\n    book: boolean\n};\n\nexport const initialBookingState: BookingState = {\n    delete_id: -1,\n    toaster: new Subject(),\n    info: undefined,\n    book: false\n};\n  \n@Injectable()\nexport class BookingsStore extends ComponentStore {\n    \n    constructor(private data: DataService, private store: Store, private router: Router) {\n        super(initialBookingState);\n    }\n\n    public deleteComplete = this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, delete_id: -1};\n    });\n\n    public changeDelete = this.updater((state: BookingState, trip_id: number): BookingState => {\n        return {...state, delete_id: trip_id};\n    });\n\n    public initBooking = this.updater((state: BookingState, info: BookInfo): BookingState => {\n        return {...state, info: {...info}, book: true};\n    });\n\n    public bookingCompleted = this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, book: false};\n    });\n\n    public dispatchBooking = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.book && !!state.info),\n            switchMap(({info}) => this.store.select(newBooking(info!.user, info!.it)).pipe(\n                switchMap((bookings) => this.data.book(bookings)),\n                tapResponse(\n                    (res: any) => this.bookingCompleted('booking success'), \n                    (error: HttpErrorResponse) => this.bookingCompleted(error.error.error)\n                )\n            ))\n        );\n    });\n\n    public deleteBooking = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.delete_id != -1),\n            switchMap(state => this.store.select(selectBooking(state.delete_id))),\n            filter(booking => !!booking),\n            switchMap((booking) => this.data.deleteBooking(booking!).pipe(\n                tapResponse(\n                    (res: any) => {\n                        this.deleteComplete('booking canceled');\n                        this.store.dispatch(api_actions.deleteBooking({trip_id: booking!.trip_id}))\n                    }, \n                    (error: HttpErrorResponse) => {\n                        this.deleteComplete(error.error);\n                    }\n                )\n            )),\n        );\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BookingsComponent.html":{"url":"components/BookingsComponent.html","title":"component - BookingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BookingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/bookings/bookings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                BookingsStore\n                \n            \n\n\n            \n                selector\n                bookings-component\n            \n\n            \n                styleUrls\n                ./bookings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./bookings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                state$\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Private\n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onCancel\n                            \n                            \n                                    Public\n                                onMap\n                            \n                            \n                                    Public\n                                showQR\n                            \n                            \n                                    Public\n                                tripPlanner\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(local: BookingsStore, directionsStore: DirectionsStore, msg: DataShareService, store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/bookings/bookings.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        BookingsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        directionsStore\n                                                  \n                                                        \n                                                                        DirectionsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(link: any[], module: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    module\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onCancel\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCancel(trip_id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    trip_id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMap(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showQR\n                        \n                    \n                \n            \n            \n                \n                    \n                    showQR(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tripPlanner\n                        \n                    \n                \n            \n            \n                \n                    \n                    tripPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/bookings/bookings.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/bookings/bookings.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/bookings/bookings.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/bookings/bookings.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { BookingState, BookingsStore } from '../../state/bookings.store';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { Booking } from 'src/app/state/Entities/booking.entity';\nimport { DirectionsStore, TripState } from '../../state/directions.store';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { Router } from '@angular/router';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Store } from '@ngrx/store';\nimport { filterBookings, spinner } from 'src/app/state/Selectors/appState.selectors';\nimport { getItinerary } from 'src/app/state/Actions/api-calls.actions';\n\n@Component({\n  selector: 'bookings-component',\n  templateUrl: './bookings.component.html',\n  styleUrls: ['./bookings.component.css'],\n  providers: [BookingsStore]\n})\nexport class BookingsComponent implements OnInit {\n\n  public vm$!: Observable;\n  public state$!: Observable;\n  public value: string = '';\n\n  constructor(\n    private local: BookingsStore, \n    private directionsStore: DirectionsStore,\n    private msg: DataShareService,\n    private store: Store,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.vm$ = combineLatest([\n      this.store.select(filterBookings('')), \n      this.store.select(spinner),\n      this.local.state$\n    ]).pipe(map(([bookings, spinner, state]) => ({bookings, spinner, state})));\n    \n\n    this.msg.clearLayers();\n    this.directionsStore.reset();\n    this.msg.selectEndpoint(this.directionsStore.state$);\n    this.state$ = this.local.state$;\n  }\n\n  public onCancel(trip_id: number){\n    this.local.changeDelete(trip_id);\n  }\n\n  public onMap(booking: Booking){\n    this.directionsStore.updateStart([booking.startStop, booking.start, '0', '0']);\n    this.directionsStore.updateEnd([booking.endStop, booking.end, '0', '0']);\n    this.store.dispatch(getItinerary({data: booking}));\n    this.navigate([ 'routes', 'trips', 0], 'trip_details');\n  }\n\n  public filter(value: string){\n    this.value = value;\n  }\n\n  public showQR(booking: Booking){\n    this.navigate(['routes', 'booking', 'qr', booking.trip_id], 'qr_module');\n  }\n  \n  public tripPlanner(): void{\n    this.navigate(['routes', 'trip', 'options'], 'trip_options');\n  }\n\n  private navigate(link: any[], module: string){\n    this.router.navigate([{ outlets: \n      { sidebar:  link}}], \n      {queryParams: {module: module}\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n\n    My bookings\n    \n         0 else noBookings\">\n\n            \n             \n                \n        \n    \n\n\n\n\n    \n    \n\n\n    \n\n    \n                \n                    ./bookings.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\nh1{\n    margin-bottom: 10px;\n    color: #2b3b4c;\n    margin-top: 10px;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n    height: calc(100vh - 109px);\n    position: relative;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 225px);\n    padding-right: 3px;\n    gap: 10px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            My bookings             0 else noBookings\">                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BookingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BookingsStore.html":{"url":"injectables/BookingsStore.html","title":"injectable - BookingsStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BookingsStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/planner/state/bookings.store.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                bookingCompleted\n                            \n                            \n                                    Public\n                                changeDelete\n                            \n                            \n                                    Public\n                                deleteBooking\n                            \n                            \n                                    Public\n                                deleteComplete\n                            \n                            \n                                    Public\n                                dispatchBooking\n                            \n                            \n                                    Public\n                                initBooking\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: DataService, store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/state/bookings.store.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        bookingCompleted\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, book: false};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/bookings.store.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeDelete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: BookingState, trip_id: number): BookingState => {\n        return {...state, delete_id: trip_id};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/bookings.store.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteBooking\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.delete_id != -1),\n            switchMap(state => this.store.select(selectBooking(state.delete_id))),\n            filter(booking => !!booking),\n            switchMap((booking) => this.data.deleteBooking(booking!).pipe(\n                tapResponse(\n                    (res: any) => {\n                        this.deleteComplete('booking canceled');\n                        this.store.dispatch(api_actions.deleteBooking({trip_id: booking!.trip_id}))\n                    }, \n                    (error: HttpErrorResponse) => {\n                        this.deleteComplete(error.error);\n                    }\n                )\n            )),\n        );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/bookings.store.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        deleteComplete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, delete_id: -1};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/bookings.store.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dispatchBooking\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.book && !!state.info),\n            switchMap(({info}) => this.store.select(newBooking(info!.user, info!.it)).pipe(\n                switchMap((bookings) => this.data.book(bookings)),\n                tapResponse(\n                    (res: any) => this.bookingCompleted('booking success'), \n                    (error: HttpErrorResponse) => this.bookingCompleted(error.error.error)\n                )\n            ))\n        );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/bookings.store.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initBooking\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: BookingState, info: BookInfo): BookingState => {\n        return {...state, info: {...info}, book: true};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/bookings.store.ts:48\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Booking } from \"src/app/state/Entities/booking.entity\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\nimport { filter, throttleTime, switchMap, Observable, map, Subject, tap } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { AppState } from \"src/app/state/Reducers/api-reducer\";\nimport { Store } from \"@ngrx/store\";\nimport * as api_actions from \"src/app/state/Actions/api-calls.actions\";\nimport { Router } from \"@angular/router\";\nimport { newBooking, selectBooking } from \"src/app/state/Selectors/appState.selectors\";\n\nexport interface BookInfo{\n    user: string;\n    it: number;\n};\n\nexport interface BookingState{\n    delete_id: number;\n    toaster: Subject,\n    info: BookInfo | undefined\n    book: boolean\n};\n\nexport const initialBookingState: BookingState = {\n    delete_id: -1,\n    toaster: new Subject(),\n    info: undefined,\n    book: false\n};\n  \n@Injectable()\nexport class BookingsStore extends ComponentStore {\n    \n    constructor(private data: DataService, private store: Store, private router: Router) {\n        super(initialBookingState);\n    }\n\n    public deleteComplete = this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, delete_id: -1};\n    });\n\n    public changeDelete = this.updater((state: BookingState, trip_id: number): BookingState => {\n        return {...state, delete_id: trip_id};\n    });\n\n    public initBooking = this.updater((state: BookingState, info: BookInfo): BookingState => {\n        return {...state, info: {...info}, book: true};\n    });\n\n    public bookingCompleted = this.updater((state: BookingState, msg: string): BookingState => {\n        state.toaster.next(msg);\n        return {...state, book: false};\n    });\n\n    public dispatchBooking = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.book && !!state.info),\n            switchMap(({info}) => this.store.select(newBooking(info!.user, info!.it)).pipe(\n                switchMap((bookings) => this.data.book(bookings)),\n                tapResponse(\n                    (res: any) => this.bookingCompleted('booking success'), \n                    (error: HttpErrorResponse) => this.bookingCompleted(error.error.error)\n                )\n            ))\n        );\n    });\n\n    public deleteBooking = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.delete_id != -1),\n            switchMap(state => this.store.select(selectBooking(state.delete_id))),\n            filter(booking => !!booking),\n            switchMap((booking) => this.data.deleteBooking(booking!).pipe(\n                tapResponse(\n                    (res: any) => {\n                        this.deleteComplete('booking canceled');\n                        this.store.dispatch(api_actions.deleteBooking({trip_id: booking!.trip_id}))\n                    }, \n                    (error: HttpErrorResponse) => {\n                        this.deleteComplete(error.error);\n                    }\n                )\n            )),\n        );\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BusEntityComponent.html":{"url":"components/BusEntityComponent.html","title":"component - BusEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BusEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                bus-entity\n            \n\n            \n                styleUrls\n                ./bus-entity.component.css\n            \n\n\n\n            \n                templateUrl\n                ./bus-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delay\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectBus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dataShare: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataShare\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buses\n                    \n                \n                \n                    \n                        Type :     IArrival[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        delay\n                        \n                    \n                \n            \n            \n                \n                    \n                    delay(ar: number, dep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ar\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectBus\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectBus(bus: IArrival)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/bus-entity/bus-entity.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bus\n                                    \n                                                IArrival\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { ILine } from 'src/app/state/Entities/line.entity';\nimport { IArrival } from 'src/app/state/Entities/live.data';\n\n\n@Component({\n  selector: 'bus-entity',\n  templateUrl: './bus-entity.component.html',\n  styleUrls: ['./bus-entity.component.css'],\n})\nexport class BusEntityComponent implements OnInit {\n\n  @Input() public buses: IArrival[] = [];\n  @Output() public onClick = new EventEmitter();\n\n  constructor(private dataShare: DataShareService) { }\n  \n  ngOnInit(): void {}\n\n  public selectBus(bus: IArrival){\n    this.dataShare.fly([bus.latitude, bus.longitude]);\n  }\n\n  public delay(ar: number, dep: number){\n    const del: number = ar - dep;\n    if(del > 2){\n      return del - 1;\n    }else{\n      return del;\n    }\n  }\n\n}\n\n    \n\n    \n        \n 0 else noIncoming\">\n    \n        \n            \n                \n                {{bus.routeName}} ({{bus.lineCode}})\n            \n             0\">\n                Άφιξη:\n                {{bus.arrivalMins}}:{{bus.arrivalSeconds}} λεπτά\n            \n             0 || bus.departureSeconds > 0\">\n                Αναχώρηση:\n                {{bus.departureMins}}:{{bus.departureSeconds}} λεπτά\n            \n             0\">\n                Καθυστέρηση:\n                {{delay(bus.departureMins, bus.arrivalMins)}} λεπτά\n            \n        \n    \n\n\n\n    \n        \n            \n                No departures for the next 30'\n            \n        \n    \n  \n\n\n    \n\n    \n                \n                    ./bus-entity.component.css\n                \n                \n:host{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    gap: 10px;\n}\n\n.entity-wrapper{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    cursor: pointer;\n    margin-top: 3px;\n}\n\n.text-content{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n}\n\n.description{\n    font-size: 14px;\n    color: #8190a4;\n}\n\n.option-text{\n    font-weight: 600;\n    color: #2e3e51;\n}\n\n.entity-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 1px;\n    color: #545f6d;\n    font-size: 14px;\n    padding: 17px 15px 17px 20px;\n}\n\n.entity-type{\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    margin-bottom: 10px;\n}\n\n.entity-type>i{\n    padding-top: 2px;\n}\n\n.center{\n    align-self: center !important;\n    justify-self: center !important;\n}\n\n.icon{\n    font-size: 14px;\n}\n\n.bold{\n    color: #2e3e51;\n    font-size: 15px;\n}\n\n.text-content-no-incoming{\n    display: flex;\n    flex-direction: column;\n}\n\n.malakas{\n    color: #2e3e51;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0 else noIncoming\">                                                        {{bus.routeName}} ({{bus.lineCode}})                         0\">                Άφιξη:                {{bus.arrivalMins}}:{{bus.arrivalSeconds}} λεπτά                         0 || bus.departureSeconds > 0\">                Αναχώρηση:                {{bus.departureMins}}:{{bus.departureSeconds}} λεπτά                         0\">                Καθυστέρηση:                {{delay(bus.departureMins, bus.arrivalMins)}} λεπτά                                                                No departures for the next 30\\'                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BusEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CurrentRoute.html":{"url":"interfaces/CurrentRoute.html","title":"interface - CurrentRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CurrentRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/lines/components/route-details/route-details.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            route\n                                        \n                                \n                                \n                                        \n                                            saved\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        route:     IRoute | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IRoute | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { LiveDataStore } from 'src/app/modules/lines/state/live.data.store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { currentLine, currentRoute, getActiveStop, isRouteSaved } from 'src/app/state/Selectors/appState.selectors';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\nimport * as select_action from 'src/app/state/Actions/select.actions';\nimport { IArrival } from 'src/app/state/Entities/live.data';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\ninterface CurrentRoute{\n  route: IRoute | undefined,\n  saved: boolean\n}\n\n@Component({\n  selector: 'route-details',\n  templateUrl: './route-details.component.html',\n  styleUrls: ['./route-details.component.css'],\n  providers: [LiveDataStore]\n})\nexport class RouteDetailsComponent implements OnInit, OnDestroy {\n\n  public vm$!: Observable;\n\n  constructor(\n    private store: Store, \n    private localStore: LiveDataStore,\n    private auth: AuthService,\n    private msg: DataShareService\n  ) { }\n\n  ngOnInit(): void {\n    \n    this.vm$ = combineLatest([\n      this.store.select(isRouteSaved),\n      this.store.select(currentRoute),\n      this.localStore.getBusLocations()\n    ]).pipe(\n      tap(([saved, route, buses]) => this.msg.sendBusStatus(buses)),\n      map(([saved, route, buses]) => ({saved, route, buses}))\n    );\n\n    this.localStore.fetchBusLocations(this.store.select(currentLine));\n    this.localStore.fetchArrivals(this.store.select(getActiveStop));\n\n  }\n\n  ngOnDestroy(): void {\n    this.store.dispatch(select_action.emptyPath());\n  }\n\n  public onSave(code: string){\n    this.store.dispatch(api_actions.saveRoute({code: code}));\n  }\n\n  public onRemove(code: string){\n    this.store.dispatch(api_actions.deleteRoute({code: code}));\n  }\n\n  public get authenticated(){\n    return this.auth.isAuthenticated();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomSerializer.html":{"url":"classes/CustomSerializer.html","title":"class - CustomSerializer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomSerializer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Selectors/custom-route-serializer.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        RouterStateSerializer\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                serialize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        serialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    serialize(routerState: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/state/Selectors/custom-route-serializer.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routerState\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         RouterStateUrl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\n\nexport interface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomSerializer implements RouterStateSerializer {\n\n\n  public serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n\n    let route = routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {url, root: { queryParams }} = routerState;\n    const { params } = route;\n\n    // Only select an object including the URL, params and query params\n    // instead of the entire snapshot\n    return { url, params, queryParams };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                liveUri\n                            \n                            \n                                    Private\n                                    Readonly\n                                options\n                            \n                            \n                                    Private\n                                    Readonly\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                book\n                            \n                            \n                                    Public\n                                deleteBooking\n                            \n                            \n                                    Public\n                                deleteRoute\n                            \n                            \n                                    Public\n                                deleteStop\n                            \n                            \n                                    Public\n                                getAllLines\n                            \n                            \n                                    Public\n                                getAllStops\n                            \n                            \n                                    Public\n                                getBookingPlan\n                            \n                            \n                                    Public\n                                getBookings\n                            \n                            \n                                    Public\n                                getFilteredRoutes\n                            \n                            \n                                    Public\n                                getFilteredStops\n                            \n                            \n                                    Public\n                                getLineRoutes\n                            \n                            \n                                    Public\n                                getLiveUpdates\n                            \n                            \n                                    Public\n                                getPlan\n                            \n                            \n                                    Public\n                                getRouteDetails\n                            \n                            \n                                    Public\n                                getRoutesByStop\n                            \n                            \n                                    Public\n                                getRouteSchedules\n                            \n                            \n                                    Public\n                                getSavedInfo\n                            \n                            \n                                    Public\n                                getSavedRoutes\n                            \n                            \n                                    Public\n                                getSavedStops\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                saveRoute\n                            \n                            \n                                    Public\n                                saveStop\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/data.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        book\n                        \n                    \n                \n            \n            \n                \n                    \n                    book(data: Booking[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            Booking[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteBooking\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBooking(booking: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    booking\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteRoute\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteRoute(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        deleteStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteStop(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllLines\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllLines()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAllStops\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllStops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBookingPlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookingPlan(payload: Booking)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                Booking\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBookings\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFilteredRoutes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredRoutes(payload: TripState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TripState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFilteredStops\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFilteredStops(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLineRoutes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLineRoutes(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLiveUpdates\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLiveUpdates(code: string, slug: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    slug\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPlan\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPlan(payload: TripState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TripState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRouteDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteDetails(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRoutesByStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRoutesByStop(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRouteSchedules\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRouteSchedules(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSavedInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSavedInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSavedRoutes\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSavedRoutes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getSavedStops\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSavedStops()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(credentials: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(credentials: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveRoute\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveRoute(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveStop(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        token\n                        \n                    \n                \n            \n            \n                \n                    \n                    token()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        liveUri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000/live/'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Object\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:3000'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, Observable, of, tap, throwError } from 'rxjs';\nimport { ILine } from '../state/Entities/line.entity';\nimport { IRoute, IRouteInfo } from '../state/Entities/route.entity';\nimport { IArrival } from '../state/Entities/live.data';\nimport { IScheduleDetails } from '../state/Entities/schedule.entity';\nimport { IStop } from '../state/Entities/stop.entity';\nimport { TripState } from '../modules/planner/state/directions.store';\nimport { Plan } from '../state/Entities/itinerary';\nimport { Booking } from '../state/Entities/booking.entity';\nimport { ofType } from '@ngrx/effects';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private readonly url: string = 'http://localhost:3000';\n  private readonly liveUri: string = 'http://localhost:3000/live/';\n  private readonly options: Object; \n\n  constructor(private http: HttpClient) { \n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    this.options = {headers: headers, withCredentials: false};    \n  }\n\n  public getAllLines(): Observable{\n    return this.http.get(this.url + '/transitAPI/lines', this.options).pipe(\n      map((res: any) => res),\n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getAllStops(): Observable{\n    return this.http.get(this.url + '/transitAPI/stops', this.options).pipe(\n      map((res: any) => res),\n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getLineRoutes(id: string): Observable{\n    return this.http.get(this.url + '/transitAPI/lineRoutes/' + id, this.options).pipe(\n      map((res: any) => res),\n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getRouteDetails(code: string): Observable{\n    return this.http.get(this.url + '/transitAPI/routeInfo/' + code, this.options).pipe(\n      map((res: any) => res), \n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getRouteSchedules(code: string): Observable{\n    return this.http.get(this.url + '/transitAPI/routeSchedules/' + code, this.options).pipe(\n      map((res: any) => res), \n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getLiveUpdates(code: string, slug: string): Observable{\n    return this.http.get(this.liveUri + slug + code, this.options).pipe(\n      map((res: any) => res), \n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getFilteredRoutes(payload: TripState): Observable{\n    return this.http.post(this.url + '/transitAPI/getPaths', {data: payload}, this.options).pipe(\n      map((res: any) => res), \n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getFilteredStops(code: string): Observable{\n    return this.http.get(this.url + '/transitAPI/filterStops/' + code, this.options).pipe(\n      map((res: any) => res),\n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getRoutesByStop(code: string): Observable{\n    return this.http.get(this.url + '/transitAPI/stopRoutes/' + code, this.options).pipe(\n      map((res: any) => res),\n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public getPlan(payload: TripState): Observable{\n    return this.http.post(this.url + '/transitAPI/getPaths', {data: payload}, this.options).pipe(\n      map((res: any) => res), \n      catchError((err) => throwError(()=>new Error(err)))\n    );\n  }\n\n  public login(credentials: any): Observable{\n    return this.http.post(this.url + '/login', credentials, this.options);\n  }\n\n  public register(credentials: any): Observable{\n    return this.http.post(this.url + '/register', credentials, this.options);\n  }\n\n  public book(data: Booking[]): Observable{\n    return this.http.post(this.url + '/bookings/new', data, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token(),\n    }}).pipe(map((res: any) => res));\n  }\n\n  public getBookings(): Observable{\n    return this.http.get(this.url + '/bookings/get', {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res)\n    );\n  }\n\n  public deleteBooking(booking: Booking): Observable{\n    return this.http.post(this.url + '/bookings/delete', booking, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public getBookingPlan(payload: Booking): Observable{\n    return this.http.post(this.url + '/bookings/getPlan', {data: payload}, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res)\n    );\n  }\n\n  public saveStop(code: string): Observable{\n    return this.http.get(this.url + '/saved/saveStop/' + code, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public deleteStop(code: string): Observable{\n    return this.http.get(this.url + '/saved/deleteStop/' + code, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public getSavedStops(): Observable{\n    return this.http.get(this.url + '/saved/getStops', {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public getSavedRoutes(): Observable{\n    return this.http.get(this.url + '/saved/getRoutes', {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public saveRoute(code: string): Observable{\n    return this.http.get(this.url + '/saved/saveRoute/' + code, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public deleteRoute(code: string): Observable{\n    return this.http.get(this.url + '/saved/deleteRoute/' + code, {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  public getSavedInfo(): Observable{\n    return this.http.get(this.url + '/saved/getSavedInfo/', {withCredentials: false, headers:{\n      Authorization: 'Bearer ' + this.token()}}).pipe(\n        map((res: any) => res), \n    );\n  }\n\n  private token(){\n    return JSON.parse(localStorage.getItem('token')!);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataShareService.html":{"url":"injectables/DataShareService.html","title":"injectable - DataShareService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataShareService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/data-share.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                bus\n                            \n                            \n                                    Public\n                                    Readonly\n                                busObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                clearMap\n                            \n                            \n                                    Public\n                                    Readonly\n                                clearMapObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                day\n                            \n                            \n                                    Public\n                                    Readonly\n                                dayObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                dragEnd\n                            \n                            \n                                    Public\n                                    Readonly\n                                dragEndObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                dragStart\n                            \n                            \n                                    Public\n                                    Readonly\n                                dragStartObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                marker\n                            \n                            \n                                    Public\n                                    Readonly\n                                markerObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                point\n                            \n                            \n                                    Public\n                                    Readonly\n                                pointObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                removeDrag\n                            \n                            \n                                    Public\n                                    Readonly\n                                removeDragObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                searchValue\n                            \n                            \n                                    Public\n                                    Readonly\n                                searchValueMsg\n                            \n                            \n                                    Private\n                                    Readonly\n                                stopDefaultList\n                            \n                            \n                                    Public\n                                    Readonly\n                                stopListObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                tab\n                            \n                            \n                                    Public\n                                    Readonly\n                                tabObserver\n                            \n                            \n                                    Private\n                                    Readonly\n                                toggle\n                            \n                            \n                                    Public\n                                    Readonly\n                                toggleObserver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clearLayers\n                            \n                            \n                                    Public\n                                dragOff\n                            \n                            \n                                    Public\n                                fly\n                            \n                            \n                                    Public\n                                onDaySelect\n                            \n                            \n                                    Public\n                                onDragEnd\n                            \n                            \n                                    Public\n                                onDragStart\n                            \n                            \n                                    Public\n                                onKeyUp\n                            \n                            \n                                    Public\n                                onToggle\n                            \n                            \n                                    Public\n                                selectEndpoint\n                            \n                            \n                                    Public\n                                sendBusStatus\n                            \n                            \n                                    Public\n                                showDefault\n                            \n                            \n                                    Public\n                                slide\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/data-share.service.ts:36\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearLayers\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearLayers()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragOff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        fly\n                        \n                    \n                \n            \n            \n                \n                    \n                    fly(point: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDaySelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDaySelect(day: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDragEnd\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDragEnd(value: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDragStart\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDragStart(value: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onKeyUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    onKeyUp(v: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    v\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onToggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    onToggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectEndpoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectEndpoint(obs$: Observable)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obs$\n                                    \n                                                Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        sendBusStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendBusStatus(buses: IArrival[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buses\n                                    \n                                            IArrival[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        showDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    showDefault(flag: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    flag\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        slide\n                        \n                    \n                \n            \n            \n                \n                    \n                    slide(tab: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/data-share.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        bus\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        busObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.bus.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        clearMap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        clearMapObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.clearMap.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dayObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.day.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dragEnd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dragEndObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dragEnd.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        dragStart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        dragStartObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.dragStart.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        markerObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.marker.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        point\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        pointObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.point.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        removeDrag\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        removeDragObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.removeDrag.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        searchValueMsg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.searchValue.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        stopDefaultList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(true)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        stopListObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.stopDefaultList.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        tab\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        tabObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.tab.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        toggle\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        toggleObserver\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.toggle.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/data-share.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AsyncSubject, ReplaySubject, Subject, BehaviorSubject, Observable, take} from 'rxjs';\nimport { IArrival } from '../state/Entities/live.data';\nimport { TripState } from '../modules/planner/state/directions.store';\nimport { IStop } from '../state/Entities/stop.entity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataShareService {\n\n  private readonly tab = new Subject;\n  private readonly bus = new Subject; \n  private readonly point = new Subject; \n  private readonly marker = new Subject>; \n  private readonly day = new Subject; \n  private readonly stopDefaultList = new BehaviorSubject(true);\n  private readonly searchValue = new BehaviorSubject('');\n  private readonly dragStart = new Subject;\n  private readonly dragEnd = new Subject;\n  private readonly clearMap = new Subject;\n  private readonly toggle = new Subject();\n  private readonly removeDrag = new Subject();\n\n  public readonly tabObserver = this.tab.asObservable();\n  public readonly busObserver = this.bus.asObservable();\n  public readonly pointObserver = this.point.asObservable();\n  public readonly markerObserver = this.marker.asObservable();\n  public readonly dayObserver = this.day.asObservable();\n  public readonly stopListObserver = this.stopDefaultList.asObservable();\n  public readonly searchValueMsg = this.searchValue.asObservable();\n  public readonly dragStartObserver= this.dragStart.asObservable();\n  public readonly dragEndObserver = this.dragEnd.asObservable();\n  public readonly clearMapObserver = this.clearMap.asObservable();\n  public readonly toggleObserver = this.toggle.asObservable();\n  public readonly removeDragObserver = this.removeDrag.asObservable();\n  \n  constructor() { }\n\n  public slide(tab: number) {\n    this.tab.next(tab);\n  }\n\n  public sendBusStatus(buses: IArrival[]){\n    this.bus.next(buses);\n  }\n\n  public onDaySelect(day: number){\n    this.day.next(day);\n  }\n\n  public fly(point: string[]){\n    this.point.next(point);\n  }\n\n  public selectEndpoint(obs$: Observable){\n    this.marker.next(obs$);\n  }\n\n  public showDefault(flag: boolean){\n    this.stopDefaultList.next(flag);\n  }\n\n  public onKeyUp(v: string){\n    this.searchValue.next(v);\n  }\n\n  public onDragStart(value: string[]){\n    this.dragStart.next(value);\n  }\n\n  public onDragEnd(value: string[]){\n    this.dragEnd.next(value);\n  }\n\n  public clearLayers(){\n    this.clearMap.next(0);\n  }\n\n  public onToggle(){\n    this.toggle.next();\n  }\n\n  public dragOff(){\n    this.removeDrag.next();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DirectionsStore.html":{"url":"injectables/DirectionsStore.html","title":"injectable - DirectionsStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DirectionsStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/planner/state/directions.store.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeDirection\n                            \n                            \n                                    Public\n                                fetchComplete\n                            \n                            \n                                    Public\n                                fetchPlan\n                            \n                            \n                                    Public\n                                initFetch\n                            \n                            \n                                    Public\n                                reset\n                            \n                            \n                                    Public\n                                swapPoints\n                            \n                            \n                                    Public\n                                updateArriveBy\n                            \n                            \n                                    Public\n                                updateDate\n                            \n                            \n                                    Public\n                                updateEnd\n                            \n                            \n                                    Public\n                                updatePoint\n                            \n                            \n                                    Public\n                                updateSearchText\n                            \n                            \n                                    Public\n                                updateStart\n                            \n                            \n                                    Public\n                                updateTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getEndValue\n                            \n                            \n                                    Public\n                                getNames\n                            \n                            \n                                    Public\n                                getStartValue\n                            \n                            \n                                    Public\n                                getText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/state/directions.store.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getEndValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEndValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/state/directions.store.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNames()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/state/directions.store.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStartValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/state/directions.store.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getText\n                        \n                    \n                \n            \n            \n                \n                    \n                    getText()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/state/directions.store.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        changeDirection\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, direction: string): TripState =>{\n        return {...state, direction: direction};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchComplete\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState): TripState =>{\n        return {...state, fetch: false};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchPlan\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.fetch && state.start.length > 0 && state.destination.length > 0),\n            throttleTime(500),\n            map((data: TripState) => this.store.dispatch(api_actions.fetchPlan({data: data}))),\n            tapResponse(\n                (action) => {\n                    this.fetchComplete();\n                    this.changeDirection('');\n                }, \n                (error: HttpErrorResponse) => {\n                    console.log(error);\n                    this.changeDirection('');\n                    this.fetchComplete(); //fetch will be completed even if it fails \n                }\n            )\n        );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initFetch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState): TripState =>{\n        if(state.start.length == 0 || state.destination.length == 0){\n            return state;\n        }else{\n            return {...state, fetch: true};\n        }\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        reset\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState) => {\n        return initialState;\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        swapPoints\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState): TripState =>{\n        return {...state, \n            direction: 'swap',  \n            start: [...state.destination], \n            destination: [...state.start],\n            startValue: state.endValue,\n            endValue: state.startValue\n        };\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateArriveBy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, arriveBy: string): TripState => {\n        return {...state, arriveBy: arriveBy};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, date: Date | undefined): TripState => {\n\n        if(date){\n            return {...state, date: date};\n        }else{\n            return state;\n        }\n        \n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:97\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateEnd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, point: string[]): TripState => {\n        return {...state, destination: point};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatePoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, point: string[]): TripState => {\n        if(state.direction === 'start'){\n            return {...state, start: point, startValue: point[1]};\n        }else if (state.direction === 'dest'){\n            return {...state, destination: point, endValue: point[1]};\n        }\n\n        return initialState;\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateSearchText\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, text: string): TripState =>{\n        return {...state, searchText: text};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateStart\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, point: string[]): TripState => {\n        return {...state, start: point};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state: TripState, time: string): TripState => {\n       return {...state, time: time};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/state/directions.store.ts:89\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Store } from \"@ngrx/store\";\nimport { distinctUntilChanged, filter, map, Observable, throttleTime } from \"rxjs\";\nimport * as api_actions from \"../../../state/Actions/api-calls.actions\";\nimport { AppState } from \"../../../state/Reducers/api-reducer\";\nimport { Router } from \"@angular/router\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nconst now = () => new Date().getHours() + ':' + new Date().getMinutes();\n\nexport interface TripState {\n    start: string[];\n    destination: string[];\n    direction: string;\n    time: string;\n    date: Date;\n    arriveBy: string;\n    fetch: boolean;\n    startValue: string;\n    endValue: string;\n    searchText: string;\n}\n\nexport const initialState: TripState = {\n    start: [],\n    destination: [],\n    direction: '',\n    time: now(),\n    date: new Date(),\n    arriveBy: 'depart',\n    fetch: false,\n    startValue: '',\n    endValue: '',\n    searchText: ''\n}\n  \n@Injectable()\nexport class DirectionsStore extends ComponentStore {\n    \n    public constructor(private router: Router, private store: Store) {\n        super(initialState);\n    }\n\n    public reset = this.updater((state: TripState) => {\n        return initialState;\n    });\n\n    public fetchComplete = this.updater((state: TripState): TripState =>{\n        return {...state, fetch: false};\n    });\n\n    public updateSearchText = this.updater((state: TripState, text: string): TripState =>{\n        return {...state, searchText: text};\n    });\n\n    public swapPoints = this.updater((state: TripState): TripState =>{\n        return {...state, \n            direction: 'swap',  \n            start: [...state.destination], \n            destination: [...state.start],\n            startValue: state.endValue,\n            endValue: state.startValue\n        };\n    });\n\n    public changeDirection = this.updater((state: TripState, direction: string): TripState =>{\n        return {...state, direction: direction};\n    });\n\n    public updatePoint = this.updater((state: TripState, point: string[]): TripState => {\n        if(state.direction === 'start'){\n            return {...state, start: point, startValue: point[1]};\n        }else if (state.direction === 'dest'){\n            return {...state, destination: point, endValue: point[1]};\n        }\n\n        return initialState;\n    });\n\n    public updateStart = this.updater((state: TripState, point: string[]): TripState => {\n        return {...state, start: point};\n    });\n\n    public updateEnd = this.updater((state: TripState, point: string[]): TripState => {\n        return {...state, destination: point};\n    });\n\n    public updateTime = this.updater((state: TripState, time: string): TripState => {\n       return {...state, time: time};\n    });\n\n    public updateArriveBy = this.updater((state: TripState, arriveBy: string): TripState => {\n        return {...state, arriveBy: arriveBy};\n    });\n\n    public updateDate = this.updater((state: TripState, date: Date | undefined): TripState => {\n\n        if(date){\n            return {...state, date: date};\n        }else{\n            return state;\n        }\n        \n    });\n\n    public initFetch = this.updater((state: TripState): TripState =>{\n        if(state.start.length == 0 || state.destination.length == 0){\n            return state;\n        }else{\n            return {...state, fetch: true};\n        }\n    });\n\n    /* STATE SELECTORS */\n    public getNames(): Observable{\n        return this.select(state => {\n            const names = {start: '', end: ''};\n            if(state.start.length > 0) names.start = state.start[1];\n            if(state.destination.length > 0) names.end = state.destination[1];\n            return names;\n        });\n    }\n\n    public getStartValue(): Observable{\n        return this.select(this.state$, (state) => state.startValue);\n    }\n\n    public getEndValue(): Observable{\n        return this.select(this.state$, (state) => state.endValue);\n    }\n\n    public getText(): Observable{\n        return this.select(this.state$, (state) => state.searchText);\n    }\n\n    public fetchPlan = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.fetch && state.start.length > 0 && state.destination.length > 0),\n            throttleTime(500),\n            map((data: TripState) => this.store.dispatch(api_actions.fetchPlan({data: data}))),\n            tapResponse(\n                (action) => {\n                    this.fetchComplete();\n                    this.changeDirection('');\n                }, \n                (error: HttpErrorResponse) => {\n                    console.log(error);\n                    this.changeDirection('');\n                    this.fetchComplete(); //fetch will be completed even if it fails \n                }\n            )\n        );\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DoubleInputComponent.html":{"url":"components/DoubleInputComponent.html","title":"component - DoubleInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DoubleInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/double-input/double-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                double-input\n            \n\n            \n                styleUrls\n                ./double-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./double-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                swapPoints\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                end\n                            \n                            \n                                endPlaceholder\n                            \n                            \n                                start\n                            \n                            \n                                startPlaceholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                            \n                                swap\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        end\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search end'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        start\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        startPlaceholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'search start'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        swap\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        swapPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    swapPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/double-input/double-input.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as nav_actions from 'src/app/state/Actions/navigation.actions';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\n\n@Component({\n  selector: 'double-input',\n  templateUrl: './double-input.component.html',\n  styleUrls: ['./double-input.component.css']\n})\nexport class DoubleInputComponent implements OnInit {\n\n  @Input() public start: string = '';\n  @Input() public end: string = '';\n  @Input() public disabled: boolean = false;\n  @Input() public startPlaceholder: string = 'search start';\n  @Input() public endPlaceholder: string = 'search end';\n\n  @Output() public clicked = new EventEmitter();\n  @Output() public swap = new EventEmitter();\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n  }\n\n  public navigate(){\n    this.store.dispatch(nav_actions.arrowNavigation());\n  }\n\n  public swapPoints(){\n    this.swap.next();\n  }\n\n  public onClick(data: string){\n    if(!this.disabled){\n      this.clicked.next(data);\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n        \n            keyboard_backspace\n        \n        \n            trip_origin\n        \n        \n            location_on\n        \n    \n    \n        \n            \n                swap_vert\n            \n        \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./double-input.component.css\n                \n                \n:host{\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n.input-section{\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    width: 100%;\n    gap: 10px;\n    background: white;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.show{\n    display: none !important;\n}\n\n.left-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 15px;\n    padding: 15px 0 21px 15px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n    position: relative;\n}\n\n.start{\n    color: #3e3aef;\n    font-weight: 900;\n    font-size: 20px;\n}\n\n.end{\n    color: #db1de3;\n    font-weight: 900;\n    font-size: 20px;\n}\n\n.purple{\n    color: #db1de3 !important;\n}\n\n.right-wrapper{\n    padding-bottom: 15px;\n    width: inherit;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    position: relative;\n}\n\n.fa-times{\n    margin-top: 5px;\n    cursor: pointer;\n}\n\n.inputs{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\ninput{\n    outline: none;\n    border: none;\n    border-bottom: 3px solid #f7f8fe;\n    background: transparent;\n    width: 87%;\n    font-size: 14px;\n    padding-bottom: 5px;\n    color: #2b3b4c;\n    font-weight: 500;\n}\n\n.upper-input{\n    padding-bottom: 7px !important;\n}\n\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.route{\n    color: #3e3aef;\n    font-weight: 700;\n}\n\n.input-list{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.border{\n    position: absolute;\n    border-right: 1px solid #f7f8fe !important;\n    height: 12px;\n    top: 85px;\n    left: 38px;\n}\n\n.swap-icon{\n    position: absolute;\n    bottom: 35px;\n    right: 25px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    border-radius: 50%;\n    cursor: pointer;\n}\n\n.swap{\n    font-size: 20px !important;\n    color: white;\n    background-color: #3e3aef;\n    border-radius: 50%;\n    padding: 5px;\n}\n\n.dest{\n    border: none !important;\n}\n\n.stop-list-wrapper{\n    width: 99%;\n    padding: 20px 13px 0 20px;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 99%;\n    overflow: auto;\n    max-height: calc(100vh - 270px);\n    padding-right: 7px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                keyboard_backspace                            trip_origin                            location_on                                                    swap_vert                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DoubleInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownOptionComponent.html":{"url":"components/DropdownOptionComponent.html","title":"component - DropdownOptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownOptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dropdown-option\n            \n\n            \n                styleUrls\n                ./dropdown-option.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dropdown-option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                details\n                            \n                            \n                                flex\n                            \n                            \n                                mentos\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                e\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        details\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        flex\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mentos\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        e\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick($e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/dropdown-option/dropdown-option.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'dropdown-option',\n  templateUrl: './dropdown-option.component.html',\n  styleUrls: ['./dropdown-option.component.css']\n})\nexport class DropdownOptionComponent implements OnInit {\n\n  @Input() public text: string = '';\n  @Input() public details: string = '';\n  @Input() public mentos: string[] = [];\n  @Input() public data: any;\n  @Input() public flex: boolean = true;\n\n  @Output() public e = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  public onClick($e: any){\n    this.e.emit(this.data);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n            {{text}}\n             ({{details}})\n        \n        \n            \n                {{line}}\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./dropdown-option.component.css\n                \n                \n.option-wrapper{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 2px solid #bdbdbd;\n    padding-bottom: 10px;\n    font-family: \"Lexend Deca\",sans-serif;\n    cursor: pointer;\n}\n\n.text-section{\n    display: flex;\n    flex-direction: column;\n}\n\n.name{\n    font-size: 13px;\n    font-weight: 600;\n    margin-bottom: 2px;\n    color: #2b3b4c;\n    display: flex;\n}\n\n.flex-row{\n    flex-direction: row;\n}\n\n.flex-column{\n    flex-direction: column;\n}\n\n.code{\n    color: #868d95;\n}\n\n.details{\n    color: #868d95;\n    display: flex;\n    flex-direction: row;\n    gap: 15px;\n}\n\n.save-btn{\n    margin-left: 15px;\n}\n\n.mentos{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.mentos>span{\n    background-color: #002D62;\n    color: white;\n    border-radius: 50%;\n    width: 19px;\n    height: 19px;\n    font-size: 11px;\n    text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{text}}             ({{details}})                                            {{line}}                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownOptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FilterPipe.html":{"url":"pipes/FilterPipe.html","title":"pipe - FilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/filterPipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        filter\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(data: any[], value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/filterPipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from \"@angular/core\";\nimport { IRoute } from \"src/app/state/Entities/route.entity\";\nimport { IStop } from \"src/app/state/Entities/stop.entity\";\n\n@Pipe({ name: 'filter' })\nexport class FilterPipe implements PipeTransform {\n\n  public transform(data: any[], value: string) {\n\n    if(!data || value === undefined){\n      return [];\n    }\n\n    const upper: string = value.toUpperCase();\n    return data.filter((piece: IRoute | IStop) => {\n      if(!piece){\n        return false;\n      }else{\n        return piece.desc.toUpperCase().includes(upper) || piece.code.includes(value);\n      }\n    }).slice(0, 20);\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IArrival.html":{"url":"interfaces/IArrival.html","title":"interface - IArrival","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IArrival\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/live.data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrivalMins\n                                        \n                                \n                                \n                                        \n                                            arrivalSeconds\n                                        \n                                \n                                \n                                        \n                                            departureMins\n                                        \n                                \n                                \n                                        \n                                            departureSeconds\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            lineCode\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                                \n                                        \n                                            routeName\n                                        \n                                \n                                \n                                        \n                                            vehicleCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalMins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalMins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalSeconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalSeconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureMins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureMins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureSeconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureSeconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicleCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicleCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IArrival{\n    departureMins: number;\n    departureSeconds: number;\n    routeCode: string;\n    vehicleCode: string;\n    routeName: string;\n    lineCode: string;\n    latitude: string;\n    longitude: string;\n    arrivalMins: number;\n    arrivalSeconds: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IArrival-1.html":{"url":"interfaces/IArrival-1.html","title":"interface - IArrival-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IArrival\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/live.data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrivalMins\n                                        \n                                \n                                \n                                        \n                                            arrivalSeconds\n                                        \n                                \n                                \n                                        \n                                            departureMins\n                                        \n                                \n                                \n                                        \n                                            departureSeconds\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            lineCode\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                                \n                                        \n                                            routeName\n                                        \n                                \n                                \n                                        \n                                            vehicleCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalMins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalMins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalSeconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalSeconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureMins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureMins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureSeconds\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureSeconds:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vehicleCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vehicleCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IArrival{\n    departureMins: number;\n    departureSeconds: number;\n    routeCode: string;\n    vehicleCode: string;\n    routeName: string;\n    lineCode: string;\n    latitude: string;\n    longitude: string;\n    arrivalMins: number;\n    arrivalSeconds: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILine.html":{"url":"interfaces/ILine.html","title":"interface - ILine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/line.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            desc_eng\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            routeCodes\n                                        \n                                \n                                \n                                        \n                                            routesNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc_eng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc_eng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCodes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routesNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routesNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ILine{\n    id: string;\n    name: string;\n    routesNumber: string;\n    desc: string;\n    desc_eng: string;\n    routeCodes: string;\n}\n\nexport interface LineState extends EntityState{\n    activeLineId: string,\n};\n\nexport const lineStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (line: ILine)=> line.id\n});\n\nexport const inititialLineState: LineState = lineStateAdapter.getInitialState({\n    activeLineId: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILine-1.html":{"url":"interfaces/ILine-1.html","title":"interface - ILine-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/line.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            desc_eng\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            routeCodes\n                                        \n                                \n                                \n                                        \n                                            routesNumber\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc_eng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc_eng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCodes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routesNumber\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routesNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ILine{\n    id: string;\n    name: string;\n    routesNumber: string;\n    desc: string;\n    desc_eng: string;\n    routeCodes: string;\n}\n\nexport interface LineState extends EntityState{\n    activeLineId: string,\n};\n\nexport const lineStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (line: ILine)=> line.id\n});\n\nexport const inititialLineState: LineState = lineStateAdapter.getInitialState({\n    activeLineId: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapData.html":{"url":"interfaces/IMapData.html","title":"interface - IMapData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMapData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/map.data.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     IPoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:     IStop[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStop[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPoint } from \"./route.entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IMapData{\n    stops: IStop[];\n    points: IPoint[];\n}\n\nexport interface TripData{\n    start: string[];\n    destination: string[];\n}\n\nexport const defaultTrip: TripData = {\n    start: [],\n    destination: []\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMapData-1.html":{"url":"interfaces/IMapData-1.html","title":"interface - IMapData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IMapData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/map.data.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     IPoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:     IStop[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStop[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPoint } from \"./route.entity\";\nimport { IStop } from \"./stop.entity\";\n\n\nexport interface IMapData{\n    stops: IStop[];\n    points: IPoint[];\n}\n\nexport interface TripData{\n    start: string[];\n    destination: string[];\n}\n\nexport const defaultTrip: TripData = {\n    start: [],\n    destination: []\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INotification.html":{"url":"interfaces/INotification.html","title":"interface - INotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/notification.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface INotification{\n    type: number;\n    message: string;\n    spinner: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INotification-1.html":{"url":"interfaces/INotification-1.html","title":"interface - INotification-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/notification.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface INotification{\n    type: number;\n    message: string;\n    spinner: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPoint.html":{"url":"interfaces/IPoint.html","title":"interface - IPoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/route.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPoint-1.html":{"url":"interfaces/IPoint-1.html","title":"interface - IPoint-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/route.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoute.html":{"url":"interfaces/IRoute.html","title":"interface - IRoute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/route.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            desc_eng\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lineId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            saved\n                                        \n                                \n                                \n                                        \n                                            stopCodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc_eng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc_eng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     IPoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saved:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCodes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRoute-1.html":{"url":"interfaces/IRoute-1.html","title":"interface - IRoute-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRoute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/route.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            desc_eng\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lineId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            saved\n                                        \n                                \n                                \n                                        \n                                            stopCodes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc_eng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc_eng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lineId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lineId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     IPoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saved:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCodes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCodes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRouteInfo.html":{"url":"interfaces/IRouteInfo.html","title":"interface - IRouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/route.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     IPoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:     IStop[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStop[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRouteInfo-1.html":{"url":"interfaces/IRouteInfo-1.html","title":"interface - IRouteInfo-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/route.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     IPoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IPoint[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:     IStop[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStop[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchedule.html":{"url":"interfaces/ISchedule.html","title":"interface - ISchedule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/schedule.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            line\n                                        \n                                \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                                \n                                        \n                                            stopCode\n                                        \n                                \n                                \n                                        \n                                            tripTime\n                                        \n                                \n                                \n                                        \n                                            tripTimeHour\n                                        \n                                \n                                \n                                        \n                                            tripTimeMinute\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripTimeHour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripTimeHour:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripTimeMinute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripTimeMinute:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ISchedule{\n    id: number;\n    day: number;\n    routeCode: string;\n    stopCode: string;\n    line: string;\n    tripTime: string;\n    tripTimeHour: number;\n    tripTimeMinute: number;\n}\n\nexport interface IScheduleDetails{\n    schedules: ISchedule[];\n    routeCode: string;\n}\n\nexport interface ScheduleState extends EntityState{};\n\nexport const scheduleStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (schedule)=> schedule.routeCode\n});\n\nexport const inititialSchdeduleState: ScheduleState = scheduleStateAdapter.getInitialState();\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISchedule-1.html":{"url":"interfaces/ISchedule-1.html","title":"interface - ISchedule-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISchedule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/schedule.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            day\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            line\n                                        \n                                \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                                \n                                        \n                                            stopCode\n                                        \n                                \n                                \n                                        \n                                            tripTime\n                                        \n                                \n                                \n                                        \n                                            tripTimeHour\n                                        \n                                \n                                \n                                        \n                                            tripTimeMinute\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        line\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        line:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripTimeHour\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripTimeHour:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripTimeMinute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripTimeMinute:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ISchedule{\n    id: number;\n    day: number;\n    routeCode: string;\n    stopCode: string;\n    line: string;\n    tripTime: string;\n    tripTimeHour: number;\n    tripTimeMinute: number;\n}\n\nexport interface IScheduleDetails{\n    schedules: ISchedule[];\n    routeCode: string;\n}\n\nexport interface ScheduleState extends EntityState{};\n\nexport const scheduleStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (schedule)=> schedule.routeCode\n});\n\nexport const inititialSchdeduleState: ScheduleState = scheduleStateAdapter.getInitialState();\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScheduleDetails.html":{"url":"interfaces/IScheduleDetails.html","title":"interface - IScheduleDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IScheduleDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/schedule.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                                \n                                        \n                                            schedules\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schedules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schedules:     ISchedule[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ISchedule[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ISchedule{\n    id: number;\n    day: number;\n    routeCode: string;\n    stopCode: string;\n    line: string;\n    tripTime: string;\n    tripTimeHour: number;\n    tripTimeMinute: number;\n}\n\nexport interface IScheduleDetails{\n    schedules: ISchedule[];\n    routeCode: string;\n}\n\nexport interface ScheduleState extends EntityState{};\n\nexport const scheduleStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (schedule)=> schedule.routeCode\n});\n\nexport const inititialSchdeduleState: ScheduleState = scheduleStateAdapter.getInitialState();\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IScheduleDetails-1.html":{"url":"interfaces/IScheduleDetails-1.html","title":"interface - IScheduleDetails-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IScheduleDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/schedule.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            routeCode\n                                        \n                                \n                                \n                                        \n                                            schedules\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        routeCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schedules\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schedules:     ISchedule[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ISchedule[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ISchedule{\n    id: number;\n    day: number;\n    routeCode: string;\n    stopCode: string;\n    line: string;\n    tripTime: string;\n    tripTimeHour: number;\n    tripTimeMinute: number;\n}\n\nexport interface IScheduleDetails{\n    schedules: ISchedule[];\n    routeCode: string;\n}\n\nexport interface ScheduleState extends EntityState{};\n\nexport const scheduleStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (schedule)=> schedule.routeCode\n});\n\nexport const inititialSchdeduleState: ScheduleState = scheduleStateAdapter.getInitialState();\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStop.html":{"url":"interfaces/IStop.html","title":"interface - IStop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/stop.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            desc_eng\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            saved\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc_eng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc_eng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saved:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface IStop{\n    id: string;\n    code: string;\n    latitude: string;\n    longitude: string;\n    desc: string;\n    desc_eng: string;\n    lines: string;\n    saved: boolean | undefined;\n}\n\nexport interface StopState extends EntityState{\n    activeStopCode: string,\n};\n\nexport const stopStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (stop: IStop) => stop.code\n});\n\nexport const inititialStopState: StopState = stopStateAdapter.getInitialState({\n    activeStopCode: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStop-1.html":{"url":"interfaces/IStop-1.html","title":"interface - IStop-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/stop.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            desc_eng\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            latitude\n                                        \n                                \n                                \n                                        \n                                            lines\n                                        \n                                \n                                \n                                        \n                                            longitude\n                                        \n                                \n                                \n                                        \n                                            saved\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc_eng\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc_eng:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        latitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lines\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lines:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        longitude:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saved:     boolean | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface IStop{\n    id: string;\n    code: string;\n    latitude: string;\n    longitude: string;\n    desc: string;\n    desc_eng: string;\n    lines: string;\n    saved: boolean | undefined;\n}\n\nexport interface StopState extends EntityState{\n    activeStopCode: string,\n};\n\nexport const stopStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (stop: IStop) => stop.code\n});\n\nexport const inititialStopState: StopState = stopStateAdapter.getInitialState({\n    activeStopCode: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/input/input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-input\n            \n\n            \n                styleUrls\n                ./input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                    Public\n                                obs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkUrl\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                places\n                            \n                            \n                                    Public\n                                swap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(local: DirectionsStore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/input/input.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        DirectionsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        checkUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUrl()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/input/input.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/input/input.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        places\n                        \n                    \n                \n            \n            \n                \n                    \n                    places(dest: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/input/input.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dest\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        swap\n                        \n                    \n                \n            \n            \n                \n                    \n                    swap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/input/input.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/input/input.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        obs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/input/input.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { DirectionsStore } from 'src/app/modules/planner/state/directions.store';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css'],\n})\nexport class InputComponent implements OnInit {\n\n  public obs$!: Observable;\n  public disabled: boolean = false;\n\n  constructor(\n    private local: DirectionsStore,\n    private router: Router,\n  ) {}\n  \n  ngOnInit(): void {\n    this.obs$ = this.local.getNames();\n  }\n\n  public swap(){\n    this.local.swapPoints();\n  }\n\n  public places(dest: string){\n    this.router.navigate([{ outlets: \n      { sidebar: [ 'routes', 'places', dest] }}], \n      {queryParams: {module: 'places'}\n    });\n  }\n\n  public checkUrl(){\n    const url: string = this.router.url;\n    if(url.includes('module=trips')){\n      this.disabled = true;\n    }else if(url.includes('module=trip_details')){\n      this.disabled = true;\n    }else if(url.includes('module=trip_map')){\n      this.disabled = true;\n    }else{\n      this.disabled = false;\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./input.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: block;\n    font-family: \"Lexend Deca\",sans-serif;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Itinerary.html":{"url":"interfaces/Itinerary.html","title":"interface - Itinerary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Itinerary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrivalDelay\n                                        \n                                \n                                \n                                        \n                                            departureDelay\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            legs\n                                        \n                                \n                                \n                                        \n                                            serviceDate\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            transitTime\n                                        \n                                \n                                \n                                        \n                                            waitingTime\n                                        \n                                \n                                \n                                        \n                                            walkDistance\n                                        \n                                \n                                \n                                        \n                                            walkTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legs:     Leg[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Leg[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transitTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transitTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitingTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitingTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walkDistance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walkDistance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walkTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walkTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Itinerary-1.html":{"url":"interfaces/Itinerary-1.html","title":"interface - Itinerary-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Itinerary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrivalDelay\n                                        \n                                \n                                \n                                        \n                                            departureDelay\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            legs\n                                        \n                                \n                                \n                                        \n                                            serviceDate\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            transitTime\n                                        \n                                \n                                \n                                        \n                                            waitingTime\n                                        \n                                \n                                \n                                        \n                                            walkDistance\n                                        \n                                \n                                \n                                        \n                                            walkTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        legs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        legs:     Leg[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Leg[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceDate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transitTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transitTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        waitingTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        waitingTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walkDistance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walkDistance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        walkTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        walkTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Leg.html":{"url":"interfaces/Leg.html","title":"interface - Leg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Leg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            agencyName\n                                        \n                                \n                                \n                                        \n                                            agencyTimeZoneOffset\n                                        \n                                \n                                \n                                        \n                                            arrivalDelay\n                                        \n                                \n                                \n                                        \n                                            departureDelay\n                                        \n                                \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            flex\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            intermediateStops\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            occupancyStatus\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            routeId\n                                        \n                                \n                                \n                                        \n                                            routeShortName\n                                        \n                                \n                                \n                                        \n                                            serviceDate\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            tripId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agencyName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agencyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        agencyTimeZoneOffset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agencyTimeZoneOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intermediateStops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intermediateStops:     Vertex[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vertex[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupancyStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupancyStatus:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeShortName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeShortName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Leg-1.html":{"url":"interfaces/Leg-1.html","title":"interface - Leg-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Leg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            agencyName\n                                        \n                                \n                                \n                                        \n                                            agencyTimeZoneOffset\n                                        \n                                \n                                \n                                        \n                                            arrivalDelay\n                                        \n                                \n                                \n                                        \n                                            departureDelay\n                                        \n                                \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            endTime\n                                        \n                                \n                                \n                                        \n                                            flex\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            intermediateStops\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            occupancyStatus\n                                        \n                                \n                                \n                                        \n                                            points\n                                        \n                                \n                                \n                                        \n                                            routeId\n                                        \n                                \n                                \n                                        \n                                            routeShortName\n                                        \n                                \n                                \n                                        \n                                            serviceDate\n                                        \n                                \n                                \n                                        \n                                            startTime\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                                \n                                        \n                                            tripId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        agencyName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agencyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        agencyTimeZoneOffset\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        agencyTimeZoneOffset:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrivalDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivalDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departureDelay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departureDelay:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        flex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        flex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intermediateStops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intermediateStops:     Vertex[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Vertex[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupancyStatus\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupancyStatus:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        points\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        points:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        routeShortName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routeShortName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     Step[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Step[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tripId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tripId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LineState.html":{"url":"interfaces/LineState.html","title":"interface - LineState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/line.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeLineId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeLineId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeLineId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ILine{\n    id: string;\n    name: string;\n    routesNumber: string;\n    desc: string;\n    desc_eng: string;\n    routeCodes: string;\n}\n\nexport interface LineState extends EntityState{\n    activeLineId: string,\n};\n\nexport const lineStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (line: ILine)=> line.id\n});\n\nexport const inititialLineState: LineState = lineStateAdapter.getInitialState({\n    activeLineId: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LineState-1.html":{"url":"interfaces/LineState-1.html","title":"interface - LineState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LineState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/line.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeLineId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeLineId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeLineId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ILine{\n    id: string;\n    name: string;\n    routesNumber: string;\n    desc: string;\n    desc_eng: string;\n    routeCodes: string;\n}\n\nexport interface LineState extends EntityState{\n    activeLineId: string,\n};\n\nexport const lineStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (line: ILine)=> line.id\n});\n\nexport const inititialLineState: LineState = lineStateAdapter.getInitialState({\n    activeLineId: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinesDropdownComponent.html":{"url":"components/LinesDropdownComponent.html","title":"component - LinesDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinesDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lines-dropdown\n            \n\n            \n                styleUrls\n                ./lines-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lines-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lines$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onKeyUp\n                            \n                            \n                                    Public\n                                prepareOutlet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeValue(line: ILine)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    line\n                                    \n                                                ILine\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onKeyUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    onKeyUp(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        prepareOutlet\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareOutlet(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lines$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/lines-dropdown/lines-dropdown.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport * as navigation from'../../../../state/Actions/navigation.actions';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { filter, Observable, startWith } from 'rxjs';\nimport { currentRoute, filterLines } from 'src/app/state/Selectors/appState.selectors';\nimport { ILine } from 'src/app/state/Entities/line.entity';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { slideAnimation } from 'src/app/route-animations';\n\n@Component({\n  selector: 'lines-dropdown',\n  templateUrl: './lines-dropdown.component.html',\n  styleUrls: ['./lines-dropdown.component.css']\n})\nexport class LinesDropdownComponent implements OnInit {\n\n  public lines$!: Observable;\n\n  constructor(private router: Router, private store: Store) { }\n\n  ngOnInit(): void {\n    this.lines$ = this.store.select(filterLines(''));\n  }\n\n  public changeValue(line: ILine){\n    this.router.navigate([{ outlets: { sidebar: [ 'lines', line.id ] }}], {queryParams: {module: 'line_data'}});\n  }\n\n  public onKeyUp(value: string){\n    this.lines$ = this.store.select(filterLines(value));\n  }\n\n  public prepareOutlet(outlet: RouterOutlet){\n    return outlet && outlet.activatedRouteData;\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    Lines\n    \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./lines-dropdown.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n.input-section{\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    width: 100%;\n    gap: 10px;\n    background: white;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.left-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 30px;\n    padding: 15px 0 35px 20px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n}\n\n.right-wrapper{\n    padding-bottom: 18px;\n    width: inherit;\n    display: flex;\n    flex-direction: row;\n    gap: 15px;\n}\n\n.right-wrapper>i{\n    margin-top: 5px;\n    cursor: pointer;\n}\n\n.inputs{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\ninput{\n    outline: none;\n    border: none;\n    border-bottom: 3px solid #f7f8fe;\n    background: transparent;\n    width: 85%;\n    font-size: 16px;\n    padding-bottom: 16px;\n    color: #2b3b4c;\n    font-weight: 500;\n}\n\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.route{\n    color: #3e3aef;\n    font-weight: 700;\n}\n\n.stop-dropdown{\n    width: 100%;\n    padding: 15px 15px 15px 15px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.list{\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    max-height: calc(100vh - 200px);\n    overflow: auto;\n    padding-right: 10px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Lines                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LinesDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinesMap.html":{"url":"classes/LinesMap.html","title":"class - LinesMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinesMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/map/mapControllers/linesMapControllers.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buses\n                            \n                            \n                                    Private\n                                layerGroup\n                            \n                            \n                                    Protected\n                                bus_icon\n                            \n                            \n                                    Protected\n                                bus_stop_icon\n                            \n                            \n                                    Protected\n                                center\n                            \n                            \n                                    Protected\n                                dest_marker\n                            \n                            \n                                    Protected\n                                map\n                            \n                            \n                                    Protected\n                                marker\n                            \n                            \n                                    Protected\n                                pin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                carvePath\n                            \n                            \n                                    Public\n                                clearBuses\n                            \n                            \n                                    Public\n                                clearLayerGroup\n                            \n                            \n                                    Public\n                                displayBusLocations\n                            \n                            \n                                    Public\n                                displayRouteInfo\n                            \n                            \n                                    Public\n                                displayStops\n                            \n                            \n                                    Public\n                                    \n                                focusOnPoint\n                            \n                            \n                                    Protected\n                                centerMap\n                            \n                            \n                                    Protected\n                                createMarker\n                            \n                            \n                                    Protected\n                                createPolyline\n                            \n                            \n                                    Protected\n                                focusOnPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(map: L.Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        L.Map\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buses\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Marker[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.LayerGroup\n\n                    \n                \n                \n                    \n                        Default value : new L.LayerGroup()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-icon.png', iconSize: [45, 45]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_stop_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-stop.png', iconSize: [25, 25]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [39.667341104708946, 20.854922400637918]\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dest_marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/dest-marker.png', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         L.Map\n\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/location.png', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/pin.ico', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        carvePath\n                        \n                    \n                \n            \n            \n                \n                    \n                    carvePath(points: IPoint[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    points\n                                    \n                                            IPoint[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearBuses\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearBuses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearLayerGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearLayerGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:62\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        displayBusLocations\n                        \n                    \n                \n            \n            \n                \n                    \n                    displayBusLocations(buses: IArrival[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    buses\n                                    \n                                            IArrival[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        displayRouteInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    displayRouteInfo(data: IMapData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IMapData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        displayStops\n                        \n                    \n                \n            \n            \n                \n                    \n                    displayStops(stops: IStop[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/linesMapControllers.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stops\n                                    \n                                            IStop[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        focusOnPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPoint(point: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:66\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        centerMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerMap()\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(x: string, y: string, text: string, icon: L.Icon, draggable: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    y\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    icon\n                                    \n                                            L.Icon\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    draggable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(path: number[][], color?: string, text?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        focusOnPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPath(p1: L.Marker, p2: L.Marker)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p1\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    p2\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IPoint } from \"src/app/state/Entities/route.entity\";\nimport { Map } from \"./map\";\nimport * as L from 'leaflet';\nimport { IStop } from \"src/app/state/Entities/stop.entity\";\nimport { IArrival } from \"src/app/state/Entities/live.data\";\nimport { IMapData } from \"src/app/state/Entities/map.data.entity\";\n\nexport class LinesMap extends Map{\n\n    private layerGroup: L.LayerGroup = new L.LayerGroup() ;\n    private buses: L.Marker[] = [];\n\n    public constructor(map: L.Map){\n        super(map);\n        this.layerGroup.addTo(this.map);\n    }\n\n    public displayRouteInfo(data: IMapData | undefined){\n\n        this.clearLayerGroup();\n        this.clearBuses();\n        this.centerMap();\n\n        if(!data) return;\n        \n        this.carvePath(data.points);\n        this.displayStops(data.stops);\n    }\n\n    public carvePath(points: IPoint[]){\n\n        if(points.length == 0){\n            return;\n        }\n\n        const path = points.map(point => [+point.latitude, +point.longitude]);\n        const polyline = this.createPolyline(path, '#002D62');\n        this.layerGroup.addLayer(polyline);\n        this.map.fitBounds(polyline.getBounds());\n    }\n\n    public displayStops(stops: IStop[]){\n        stops.forEach(stop =>{\n            const marker = this.createMarker(stop.latitude, stop.longitude, stop.desc, this.bus_stop_icon);\n            this.layerGroup.addLayer(marker);\n        });\n    }\n\n    public displayBusLocations(buses: IArrival[]){\n        this.clearBuses();\n        buses.forEach((bus: IArrival) => {\n          const marker = this.createMarker(bus.latitude, bus.longitude, bus.lineCode, this.bus_icon);\n          this.buses.push(marker);\n          this.layerGroup.addLayer(marker);\n        });\n    }\n\n    public clearBuses(){\n        this.buses.forEach(bus => this.layerGroup.removeLayer(bus));\n    }\n\n    public clearLayerGroup(): void {\n        this.layerGroup.clearLayers();\n    }\n\n    public override focusOnPoint(point: string[]): void {\n        super.focusOnPoint(point);\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinesMapComponent.html":{"url":"components/LinesMapComponent.html","title":"component - LinesMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LinesMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/lines-map/lines-map.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lines-map\n            \n\n            \n                styleUrls\n                ./lines-map.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lines-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/lines-map/lines-map.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/lines-map/lines-map.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LiveDataStore } from '../../state/live.data.store';\nimport { Observable, tap } from 'rxjs';\nimport { IArrival } from 'src/app/state/Entities/live.data';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n@Component({\n  selector: 'lines-map',\n  templateUrl: './lines-map.component.html',\n  styleUrls: ['./lines-map.component.css']\n})\nexport class LinesMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n}\n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./lines-map.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100%;\n    padding: 5px 5px 5px 5px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n.option-list{\n    height: calc(100vh - 120px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LinesMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LinesModule.html":{"url":"modules/LinesModule.html","title":"module - LinesModule","body":"\n                   \n\n\n\n\n    Modules\n    LinesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LinesModule\n\n\n\ncluster_LinesModule_bootstrap\n\n\n\ncluster_LinesModule_declarations\n\n\n\ncluster_LinesModule_imports\n\n\n\n\nLinesDropdownComponent\n\nLinesDropdownComponent\n\n\n\nLinesModule\n\nLinesModule\n\nLinesModule -->\n\nLinesDropdownComponent->LinesModule\n\n\n\n\n\nLinesMapComponent\n\nLinesMapComponent\n\nLinesModule -->\n\nLinesMapComponent->LinesModule\n\n\n\n\n\nListItemComponent\n\nListItemComponent\n\nLinesModule -->\n\nListItemComponent->LinesModule\n\n\n\n\n\nRouteDetailsComponent\n\nRouteDetailsComponent\n\nLinesModule -->\n\nRouteDetailsComponent->LinesModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nLinesModule -->\n\nRouteListComponent->LinesModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nLinesModule -->\n\nSelectComponent->LinesModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nLinesModule -->\n\nSliderComponent->LinesModule\n\n\n\n\n\nStationListComponent\n\nStationListComponent\n\nLinesModule -->\n\nStationListComponent->LinesModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nLinesModule->AppComponent \n\n\n\n\n\nLinesRoutingModule\n\nLinesRoutingModule\n\nLinesModule -->\n\nLinesRoutingModule->LinesModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nLinesModule -->\n\nMapModule->LinesModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLinesModule -->\n\nSharedModule->LinesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/lines/lines.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LinesDropdownComponent\n                        \n                        \n                            LinesMapComponent\n                        \n                        \n                            ListItemComponent\n                        \n                        \n                            RouteDetailsComponent\n                        \n                        \n                            RouteListComponent\n                        \n                        \n                            SelectComponent\n                        \n                        \n                            SliderComponent\n                        \n                        \n                            StationListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LinesRoutingModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { AppComponent } from \"src/app/app.component\";\nimport { LinesRoutingModule } from \"./lines-routing.module\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { SharedModule } from \"src/app/modules/shared-module/shared-module.module\";\nimport { SelectComponent } from \"./components/select/select.component\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { LinesDropdownComponent } from \"./components/lines-dropdown/lines-dropdown.component\";\nimport { ListItemComponent } from \"./components/list-item/list-item.component\";\nimport { MultipleDropdownComponent } from \"../shared-module/components/multiple-dropdown/multiple-dropdown.component\";\nimport { RouteDetailsComponent } from \"./components/route-details/route-details.component\";\nimport { RouteListComponent } from \"./components/route-list/route-list.component\";\nimport { SliderComponent } from \"./components/slider/slider.component\";\nimport { StationListComponent } from \"./components/station-list/station-list.component\";\nimport { LinesMapComponent } from \"./components/lines-map/lines-map.component\";\nimport { MapModule } from \"../map/map.module\";\n\n\n@NgModule({\n  declarations: [\n    ListItemComponent,\n    SelectComponent,\n    SliderComponent,\n    StationListComponent,\n    LinesDropdownComponent,\n    RouteListComponent,\n    RouteDetailsComponent,\n    LinesMapComponent\n  ],\n  imports: [\n    CommonModule,\n    LinesRoutingModule,\n    FormsModule,\n    SharedModule,\n    MatTabsModule,\n    MatSelectModule,\n    MapModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class LinesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LinesRoutingModule.html":{"url":"modules/LinesRoutingModule.html","title":"module - LinesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LinesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/lines/lines-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LinesDropdownComponent } from './components/lines-dropdown/lines-dropdown.component';\nimport { RouteDetailsComponent } from './components/route-details/route-details.component';\nimport { RouteListComponent } from './components/route-list/route-list.component';\nimport { LinesMapComponent } from './components/lines-map/lines-map.component';\nimport { MiniMapService } from 'src/app/services/mini-map.service';\nimport * as path from 'path';\nimport { SliderComponent } from './components/slider/slider.component';\n\n\nconst routes: Routes = [\n  {path: '', component: LinesDropdownComponent },\n  {path: ':lineCode', component: RouteListComponent, data: {animation: 'isLeft', type: 'line_module'}},\n  {path: ':lineCode/route/:routeCode', component: RouteDetailsComponent, data: {animation: 'isLeft', type: 'routeSlider'}, children: [\n    {path: '', component: SliderComponent},\n    {path: 'map', component: LinesMapComponent, canActivate: [MiniMapService]}\n  ]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LinesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemComponent.html":{"url":"components/ListItemComponent.html","title":"component - ListItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ListItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/list-item/list-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                list-item\n            \n\n            \n                styleUrls\n                ./list-item.component.css\n            \n\n\n\n            \n                templateUrl\n                ./list-item.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                onSelect\n                            \n                            \n                                    Public\n                                schedules$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onDaySelect\n                            \n                            \n                                    Public\n                                selectStop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isLast\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dataShare: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/list-item/list-item.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataShare\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isLast\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        stop\n                    \n                \n                \n                    \n                        Type :         IStop\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onDaySelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDaySelect(day: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        selectStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectStop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/list-item/list-item.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/list-item/list-item.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        schedules$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/list-item/list-item.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { ISchedule } from 'src/app/state/Entities/schedule.entity';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getDailySchedule } from 'src/app/state/Selectors/appState.selectors';\nimport * as select_actions from 'src/app/state/Actions/select.actions';\n\n@Component({\n  selector: 'list-item',\n  templateUrl: './list-item.component.html',\n  styleUrls: ['./list-item.component.css']\n})\nexport class ListItemComponent implements OnInit, OnDestroy {\n\n  @Input() public stop!: IStop;\n  @Input() public isLast: boolean = false;\n  @Output() public onClick = new EventEmitter();\n\n  public schedules$!: Observable;\n  private onSelect!: Subscription;\n\n  constructor(private store: Store, private dataShare: DataShareService) { }\n\n  ngOnInit(): void {\n    this.onSelect = this.dataShare.dayObserver.subscribe(day => this.onDaySelect(day));\n  }\n\n  ngOnDestroy(): void {\n    this.onSelect.unsubscribe();\n  }\n\n  public onDaySelect(day: number){\n    this.schedules$ = this.store.select(getDailySchedule(day, this.stop.code));\n  }\n\n  public selectStop(){\n    this.store.dispatch(select_actions.selectStop({code: this.stop.code}));\n    this.onClick.emit(1);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n    \n        {{stop.desc}}({{stop.code}})\n        \n             0 else noIncoming\">\n                Arrivals: \n                    \n                        {{schedule.tripTime}}', \n                        {{schedule.tripTime}}'\n                    \n                \n            \n        \n    \n\n\n\n    No arrivals for this day\n\n\n    \n\n    \n                \n                    ./list-item.component.css\n                \n                \n.item-wrapper{\n    border-left: 2px solid #6c757d2b;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\n.station-details{\n    display: flex;\n    flex-direction: column;\n    margin-top: -3px;\n    padding-left: 25px;\n    padding-bottom: 15px;\n}\n\n.icon{\n    margin-left: -7.7px;\n    font-size: 13px;\n    color: #323541;\n}\n\n.station-name{\n    color: #373a50;\n    font-weight: 600;\n    font-size: 14px;\n}\n\n.arrive-time{\n    color: #868d95;\n    font-size: 14px;\n}\n\n.fa-map-marker-alt{\n    margin-left: -5.5px !important;\n    font-size: 15px !important;\n}\n\n.last-station{\n    border: none;\n}\n\n@media screen and (max-width: 800px) {\n    .station-name{\n        font-size: 13px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    \n}\n\n@media screen and (max-width: 600px) {\n    \n}\n\n@media screen and (max-width: 500px) {\n    \n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{stop.desc}}({{stop.code}})                     0 else noIncoming\">                Arrivals:                                             {{schedule.tripTime}}\\',                         {{schedule.tripTime}}\\'                                                                No arrivals for this day'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ListItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LiveDataStore.html":{"url":"injectables/LiveDataStore.html","title":"injectable - LiveDataStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LiveDataStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/lines/state/live.data.store.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchArrivals\n                            \n                            \n                                    Public\n                                fetchBusLocations\n                            \n                            \n                                    Private\n                                updateArrivals\n                            \n                            \n                                    Private\n                                updateBuses\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArrivalState\n                            \n                            \n                                    Public\n                                getBusLocations\n                            \n                            \n                                    Private\n                                getBusState\n                            \n                            \n                                    Public\n                                getStopArrivals\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(dataService: DataService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/state/live.data.store.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getArrivalState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArrivalState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/state/live.data.store.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getBusLocations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBusLocations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/state/live.data.store.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getBusState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBusState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/state/live.data.store.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getStopArrivals\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStopArrivals()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/state/live.data.store.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchArrivals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.effect((stop$: Observable) =>{\n        return stop$.pipe(\n            filter((stop) => !!stop),\n            switchMap((stop)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(stop!.code, 'stops/')),\n                tapResponse(\n                    (arrivals) => this.updateArrivals(arrivals),\n                    (error: HttpErrorResponse) => console.log(error)\n                )\n            ))\n        );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/state/live.data.store.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchBusLocations\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.effect((line$: Observable) =>{\n        return line$.pipe(\n            filter((line) => !!line),\n            switchMap((line)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(line!.name, 'lines/')),\n                tapResponse(\n                    (buses) => this.updateBuses(buses),\n                    (error: HttpErrorResponse) => console.log(error)\n                ),\n            ))\n        );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/state/live.data.store.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateArrivals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, arrivals: IArrival[]): LiveState => {\n        return {arrivals: [...arrivals], buses: [...state.buses]};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/state/live.data.store.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateBuses\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, buses: IArrival[]): LiveState => {\n        return {buses: [...buses], arrivals: [...state.arrivals]};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/state/live.data.store.ts:93\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Store } from \"@ngrx/store\";\nimport { filter, map, Observable, switchMap, takeUntil, tap, timer } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { IArrival } from \"src/app/state/Entities/live.data\";\nimport { ILine } from \"../../../state/Entities/line.entity\";\nimport { IStop } from \"../../../state/Entities/stop.entity\";\nimport { AppState } from \"../../../state/Reducers/api-reducer\";\nimport { currentRoute, getActiveStop } from \"../../../state/Selectors/appState.selectors\";\nimport { DataShareService } from \"src/app/services/data-share.service\";\n\nexport interface LiveState {\n    arrivals: IArrival[];\n    buses: IArrival[];\n}\n\nexport const initialState: LiveState = {\n    arrivals: [],\n    buses: []\n}\n  \n@Injectable()\nexport class LiveDataStore extends ComponentStore {\n    \n    public constructor(\n        private dataService: DataService, \n        private store: Store,\n    ) {\n        super(initialState);\n    }\n\n    /* Select the stop arrivals for the current route */\n    public getStopArrivals(){\n        return this.select(this.store.select(currentRoute), this.getArrivalState(),\n            (route, arrivals) => {\n                if(route){\n                    return arrivals.filter((arrival) => arrival.routeCode === route.code);\n                }else{\n                    return [];\n                }\n            }\n        );\n    }\n\n    /* Select the Buses for the current route */\n    public getBusLocations(){\n        return this.select(this.store.select(currentRoute), this.getBusState(), \n            (route, buses) => {\n                if(route){\n                    return buses.filter((bus) => bus.routeCode === route.code);\n                }else{\n                    return [];\n                }\n            }\n        );\n    }\n\n    /* Fetch the stop arrivals every 20secs and update the local state */\n    public fetchArrivals = this.effect((stop$: Observable) =>{\n        return stop$.pipe(\n            filter((stop) => !!stop),\n            switchMap((stop)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(stop!.code, 'stops/')),\n                tapResponse(\n                    (arrivals) => this.updateArrivals(arrivals),\n                    (error: HttpErrorResponse) => console.log(error)\n                )\n            ))\n        );\n    });\n\n    /* Fetch the bus locations every 20secs and update the local state */\n    public fetchBusLocations = this.effect((line$: Observable) =>{\n        return line$.pipe(\n            filter((line) => !!line),\n            switchMap((line)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(line!.name, 'lines/')),\n                tapResponse(\n                    (buses) => this.updateBuses(buses),\n                    (error: HttpErrorResponse) => console.log(error)\n                ),\n            ))\n        );\n    });\n\n    /* STATE UPDATERS */\n    private updateArrivals = this.updater((state, arrivals: IArrival[]): LiveState => {\n        return {arrivals: [...arrivals], buses: [...state.buses]};\n    });\n\n    private updateBuses = this.updater((state, buses: IArrival[]): LiveState => {\n        return {buses: [...buses], arrivals: [...state.arrivals]};\n    });\n\n    /* STATE SELECTORS */\n    private getArrivalState(): Observable{\n        return this.select(state => state.arrivals);\n    }\n\n    private getBusState(): Observable{\n        return this.select(state => state.buses);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LiveState.html":{"url":"interfaces/LiveState.html","title":"interface - LiveState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/lines/state/live.data.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrivals\n                                        \n                                \n                                \n                                        \n                                            buses\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivals:     IArrival[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IArrival[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        buses:     IArrival[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IArrival[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Store } from \"@ngrx/store\";\nimport { filter, map, Observable, switchMap, takeUntil, tap, timer } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { IArrival } from \"src/app/state/Entities/live.data\";\nimport { ILine } from \"../../../state/Entities/line.entity\";\nimport { IStop } from \"../../../state/Entities/stop.entity\";\nimport { AppState } from \"../../../state/Reducers/api-reducer\";\nimport { currentRoute, getActiveStop } from \"../../../state/Selectors/appState.selectors\";\nimport { DataShareService } from \"src/app/services/data-share.service\";\n\nexport interface LiveState {\n    arrivals: IArrival[];\n    buses: IArrival[];\n}\n\nexport const initialState: LiveState = {\n    arrivals: [],\n    buses: []\n}\n  \n@Injectable()\nexport class LiveDataStore extends ComponentStore {\n    \n    public constructor(\n        private dataService: DataService, \n        private store: Store,\n    ) {\n        super(initialState);\n    }\n\n    /* Select the stop arrivals for the current route */\n    public getStopArrivals(){\n        return this.select(this.store.select(currentRoute), this.getArrivalState(),\n            (route, arrivals) => {\n                if(route){\n                    return arrivals.filter((arrival) => arrival.routeCode === route.code);\n                }else{\n                    return [];\n                }\n            }\n        );\n    }\n\n    /* Select the Buses for the current route */\n    public getBusLocations(){\n        return this.select(this.store.select(currentRoute), this.getBusState(), \n            (route, buses) => {\n                if(route){\n                    return buses.filter((bus) => bus.routeCode === route.code);\n                }else{\n                    return [];\n                }\n            }\n        );\n    }\n\n    /* Fetch the stop arrivals every 20secs and update the local state */\n    public fetchArrivals = this.effect((stop$: Observable) =>{\n        return stop$.pipe(\n            filter((stop) => !!stop),\n            switchMap((stop)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(stop!.code, 'stops/')),\n                tapResponse(\n                    (arrivals) => this.updateArrivals(arrivals),\n                    (error: HttpErrorResponse) => console.log(error)\n                )\n            ))\n        );\n    });\n\n    /* Fetch the bus locations every 20secs and update the local state */\n    public fetchBusLocations = this.effect((line$: Observable) =>{\n        return line$.pipe(\n            filter((line) => !!line),\n            switchMap((line)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(line!.name, 'lines/')),\n                tapResponse(\n                    (buses) => this.updateBuses(buses),\n                    (error: HttpErrorResponse) => console.log(error)\n                ),\n            ))\n        );\n    });\n\n    /* STATE UPDATERS */\n    private updateArrivals = this.updater((state, arrivals: IArrival[]): LiveState => {\n        return {arrivals: [...arrivals], buses: [...state.buses]};\n    });\n\n    private updateBuses = this.updater((state, buses: IArrival[]): LiveState => {\n        return {buses: [...buses], arrivals: [...state.arrivals]};\n    });\n\n    /* STATE SELECTORS */\n    private getArrivalState(): Observable{\n        return this.select(state => state.arrivals);\n    }\n\n    private getBusState(): Observable{\n        return this.select(state => state.buses);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LiveState-1.html":{"url":"interfaces/LiveState-1.html","title":"interface - LiveState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LiveState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/stops/state/stop.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrivals\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrivals\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrivals:     IArrival[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IArrival[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Store } from \"@ngrx/store\";\nimport { filter, Observable, switchMap, takeUntil, tap, timer } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { IArrival } from \"src/app/state/Entities/live.data\";\nimport { ILine } from \"../../../state/Entities/line.entity\";\nimport { IStop } from \"../../../state/Entities/stop.entity\";\nimport { AppState } from \"../../../state/Reducers/api-reducer\";\nimport { currentRoute, getActiveStop } from \"../../../state/Selectors/appState.selectors\";\n\nexport interface LiveState {\n    arrivals: IArrival[];\n}\n\nexport const initialState: LiveState = {\n    arrivals: [],\n}\n  \n@Injectable()\nexport class StopsStore extends ComponentStore {\n    \n    public constructor(private dataService: DataService, private store: Store) {\n        super(initialState);\n    }\n\n    public getArrivalState(): Observable{\n        return this.select(state => state.arrivals);\n    }\n\n    /* Fetch the stop arrivals every 20secs and update the local state */\n    public fetchArrivals = this.effect((stop$: Observable) =>{\n        return stop$.pipe(\n            filter((stop) => !!stop),\n            switchMap((stop)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(stop!.code, 'stops/')),\n                tapResponse(\n                    (arrivals) => this.updateArrivals(arrivals),\n                    (error: HttpErrorResponse) => console.log(error)\n                )\n            ))\n        );\n    });\n\n    /* STATE UPDATERS */\n    private updateArrivals = this.updater((state, arrivals: IArrival[]): LiveState => {\n        return {arrivals: [...arrivals]};\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/components/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authMsg$\n                            \n                            \n                                    Public\n                                credentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                back\n                            \n                            \n                                    Public\n                                errors\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, msg: DataShareService, auth: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/components/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        back\n                        \n                    \n                \n            \n            \n                \n                    \n                    back()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/login/login.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        errors\n                        \n                    \n                \n            \n            \n                \n                    \n                    errors(value: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/login/login.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/login/login.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/login/login.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authMsg$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/components/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/components/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport * as nav_actions from 'src/app/state/Actions/navigation.actions';\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\nimport { clearState, getMsg } from '../../state/message.reducer';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public credentials!: FormGroup;\n  public authMsg$!: Observable;\n\n  constructor(\n    private store: Store, \n    private msg: DataShareService,\n    private auth: Store\n  ) { }\n\n  ngOnInit(): void {\n    this.credentials = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.minLength(3), Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    });\n\n    this.auth.dispatch(clearState());\n    this.authMsg$ = this.auth.select(getMsg);\n  }\n\n  public toggle(){\n    this.msg.onToggle();\n  }\n\n  public back(){\n    this.store.dispatch(nav_actions.arrowNavigation());\n  }\n\n  public errors(value: string, type: string): boolean{\n    return this.credentials.controls[value].hasError(type);\n  }\n\n  public login(){\n    if(!this.credentials.valid){\n      confirm('Invalid fields');\n    }else{\n\n      const user = {\n        email: this.credentials.value['email'],\n        password: this.credentials.value['password']\n      };\n\n      this.store.dispatch(api_actions.login({data: user}));\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    keyboard_backspace\n  \n  \n\n\n\n\n  Login\n\n  \n    Email\n    \n    Email is required\n    Must be an email\n    at least 3 characters long\n  \n\n  \n    Password\n    \n    password is required\n    at least 3 characters\n  \n\n  \n    {{msg}}\n  \n\n  \n    \n      Log in\n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n}\n\n.simple-form{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 30px 15px 0px 15px;\n    gap: 5px;\n}\n\n.left-wrapper{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px 20px 20px 20px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n    position: relative;\n    width: 100%;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\ni{\n    color: #373a50;;\n    font-weight: 600;\n    font-size: 27px;\n    cursor: pointer;\n}\n\n::ng-deep mat-form-field{\n    width: 100% !important;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 25px;\n}\n\n.mat-input-element {\n    caret-color: #545f6d;\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-label{\n    color: #545f6d !important;\n}\n\n.mat-hint .mat-datepicker-toggle{\n    color: #545f6d !important;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n    /*change color of label*/\n    color: #545f6d!important;\n    font-size: 15px;\n}\n   \n::ng-deep .mat-form-field-ripple {\n    /*change color of underline when focused*/\n    background-color: #3e3aef !important;\n}\n   \n::ng-deep .mat-form-field-label {\n    /*change color of label*/\n    color: #545f6d !important;\n}\n\n::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex {\n    background-color: rgb(135 135 135 / 10%) !important;\n}\n\n::ng-deep .mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n    color: #2b3b4c !important;\n}\n\n::ng-deep .mat-button, .mat-icon-button, .mat-stroked-button {\n    background: rgb(135 135 135 / 10%) !important;\n}\n\nbutton{\n    font-size: 17px !important;\n    font-weight: bold;\n}\n\n.error-msg{\n    color: red;\n    align-self: center;\n    margin-bottom: 10px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      keyboard_backspace      Login      Email        Email is required    Must be an email    at least 3 characters long        Password        password is required    at least 3 characters        {{msg}}              Log in      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainInputComponent.html":{"url":"components/MainInputComponent.html","title":"component - MainInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/main-input/main-input.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                input-field\n            \n\n            \n                styleUrls\n                ./main-input.component.css\n            \n\n\n\n            \n                templateUrl\n                ./main-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mapBtn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                            \n                                    Public\n                                goBack\n                            \n                            \n                                    Public\n                                map\n                            \n                            \n                                    Private\n                                mapButton\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                    Public\n                                onSave\n                            \n                            \n                                    Public\n                                send\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                            \n                                disabled\n                            \n                            \n                                dots\n                            \n                            \n                                icon\n                            \n                            \n                                mapLink\n                            \n                            \n                                module\n                            \n                            \n                                placeholder\n                            \n                            \n                                saved\n                            \n                            \n                                type\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onType\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, msg: DataShareService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        code\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dots\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mapLink\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        module\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        saved\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onType\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        save\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:29\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:76\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clear\n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        goBack\n                        \n                    \n                \n            \n            \n                \n                    \n                    goBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        map\n                        \n                    \n                \n            \n            \n                \n                    \n                    map()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        mapButton\n                        \n                    \n                \n            \n            \n                \n                    \n                    mapButton()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onRemove\n                        \n                    \n                \n            \n            \n                \n                    \n                    onRemove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mapBtn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared-module/components/main-input/main-input.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport * as nav_actions from 'src/app/state/Actions/navigation.actions';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'input-field',\n  templateUrl: './main-input.component.html',\n  styleUrls: ['./main-input.component.css']\n})\nexport class MainInputComponent implements OnInit {\n\n  public mapBtn: boolean = false;\n\n  @Input() public value: string = '';\n  @Input() public placeholder: string = '';\n  @Input() public icon: string = '';\n  @Input() public type: string = '';\n  @Input() public disabled: boolean = false;\n  @Input() public mapLink: string[] = [];\n  @Input() public dots: boolean = false;\n  @Input() public saved: boolean = false;\n  @Input() public code: string = '';\n  @Input() public module: string = '';\n\n  @Output() public onType = new EventEmitter();\n  @Output() public save = new EventEmitter();\n  @Output() public remove = new EventEmitter();\n\n  constructor(\n    private store: Store, \n    private msg: DataShareService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.mapButton();\n  }\n\n  public send(){\n    this.onType.emit(this.value);\n  }\n\n  public clear(){\n    this.value = '';\n    this.send();\n  }\n\n  public goBack(){\n    this.store.dispatch(nav_actions.arrowNavigation());\n  }\n\n  public toggle(){\n    this.msg.onToggle();\n  }\n\n  public onSave(){\n    this.save.emit(this.code);\n  }\n\n  public onRemove(){\n    this.remove.emit(this.code);\n  }\n\n  public map(){\n\n    if(this.mapLink.length > 0){\n      this.router.navigate([{ outlets: { sidebar: this.mapLink }}], {queryParams: {module: 'route_data'}});\n    }\n\n  }\n\n  @HostListener('window:resize', ['$event'])\n  private mapButton(){\n\n    if(window.innerWidth > 500){\n      this.mapBtn = false;\n    }else{\n      this.mapBtn = true;\n    }\n\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        keyboard_backspace\n    \n    \n        {{icon}}\n    \n\n\n    \n        \n            \n                more_vert\n            \n            \n                \n                    Save {{module}}\n                \n                \n                    Unsave {{module}}\n                \n            \n        \n         0\" class=\"fas fa-map\" (click)=\"map()\">\n        \n    \n    \n        \n        \n    \n   \n\n\n    \n\n    \n                \n                    ./main-input.component.css\n                \n                :host{\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    width: 100%;\n    gap: 10px;\n    background: white;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.show{\n    display: none !important;\n}\n\n.left-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 15px;\n    padding: 15px 0 21px 15px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n    position: relative;\n}\n\n.start{\n    color: #3e3aef;\n}\n\n.end{\n    color: #db1de3;\n}\n\n.route{\n    font-weight: 900;\n}\n\n.right-wrapper{\n    padding-bottom: 15px;\n    width: inherit;\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    position: relative;\n}\n\n.fa-times{\n    margin-top: 5px;\n    cursor: pointer;\n}\n\ninput {\n    outline: none;\n    border: none;\n    border-bottom: 3px solid #f7f8fe;\n    background: transparent;\n    width: 87%;\n    font-size: 13px;\n    padding-bottom: 6px;\n    color: #2b3b4c;\n    /* font-weight: 300; */\n}\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.input-list{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.bars{\n    color: #373a50;;\n    font-weight: 600;\n    font-size: 27px;\n    cursor: pointer;\n}\n\n.icons{\n    align-self: flex-end;\n    margin-bottom: 12px;\n    margin-right: 22px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 15px;\n}\n\n.fa-map{\n    font-size: 20px !important;\n    cursor: pointer;\n    padding: 0px 15px 0px 0px;\n}\n\n::ng-deep .mat-menu-panel {\n    background: rgba(255,255,255,1) !important;\n    color: #373a50 !important;\n}\n\n.inner-button:hover{\n    background: rgb(235, 235, 235) !important;\n}\n\nbutton{\n    border: none !important;\n    background-color: transparent !important;\n    display: grid !important;\n    place-items: center !important;\n}\n\n.menu-text{\n    color: #373a50;\n    font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            keyboard_backspace                {{icon}}                                            more_vert                                                            Save {{module}}                                                    Unsave {{module}}                                             0\" class=\"fas fa-map\" (click)=\"map()\">                                       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Map.html":{"url":"classes/Map.html","title":"class - Map","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Map\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/map/mapControllers/map.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                bus_icon\n                            \n                            \n                                    Protected\n                                bus_stop_icon\n                            \n                            \n                                    Protected\n                                center\n                            \n                            \n                                    Protected\n                                dest_marker\n                            \n                            \n                                    Protected\n                                map\n                            \n                            \n                                    Protected\n                                marker\n                            \n                            \n                                    Protected\n                                pin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                centerMap\n                            \n                            \n                                    Abstract\n                                clearLayerGroup\n                            \n                            \n                                    Protected\n                                createMarker\n                            \n                            \n                                    Protected\n                                createPolyline\n                            \n                            \n                                    Protected\n                                focusOnPath\n                            \n                            \n                                    Protected\n                                focusOnPoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(map: L.Map)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/map/mapControllers/map.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        L.Map\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-icon.png', iconSize: [45, 45]})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_stop_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-stop.png', iconSize: [25, 25]})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [39.667341104708946, 20.854922400637918]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dest_marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/dest-marker.png', iconSize: [50, 50]})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         L.Map\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/location.png', iconSize: [50, 50]})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/pin.ico', iconSize: [50, 50]})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/map.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        centerMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/map.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        clearLayerGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearLayerGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/map.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(x: string, y: string, text: string, icon: L.Icon, draggable: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/map.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    y\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    icon\n                                    \n                                            L.Icon\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    draggable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(path: number[][], color?: string, text?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/map.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        focusOnPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPath(p1: L.Marker, p2: L.Marker)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/map.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p1\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    p2\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        focusOnPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPoint(point: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/map.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as L from 'leaflet';\nimport { LatLngExpression } from 'leaflet';\n\nexport abstract class Map{\n\n    protected map!: L.Map;\n    protected center: any = [39.667341104708946, 20.854922400637918];\n    protected marker: L.Icon = L.icon({iconUrl: '../../../../assets/location.png', iconSize: [50, 50]});\n    protected bus_stop_icon: L.Icon = L.icon({iconUrl: '../../../../assets/bus-stop.png', iconSize: [25, 25]});\n    protected bus_icon: L.Icon = L.icon({iconUrl: '../../../../assets/bus-icon.png', iconSize: [45, 45]});\n    protected dest_marker: L.Icon = L.icon({iconUrl: '../../../../assets/dest-marker.png', iconSize: [50, 50]});\n    protected pin: L.Icon = L.icon({iconUrl: '../../../../assets/pin.ico', iconSize: [50, 50]});\n\n    abstract clearLayerGroup(): void;\n\n    protected constructor (map: L.Map){\n        this.map = map;\n    }\n\n    protected createMarker(x: string, y: string, text: string, icon: L.Icon, draggable: boolean = false){\n        const coords = [+x, +y];\n        const marker = new L.Marker(coords, {icon: icon, interactive: true, draggable: draggable, autoPan: true});\n        marker.bindPopup(`${text}`);\n        return marker;\n    }\n\n    protected centerMap(){\n        this.map.setView(this.center, 13);\n    }\n\n    protected createPolyline(path: number[][], color?: string, text?: string){\n        const polyline = L.polyline(path, {color: color});\n        return polyline;\n    }\n\n    protected focusOnPath(p1: L.Marker, p2: L.Marker){\n        if(p1 && p2){\n          const polyline = L.polyline([p1.getLatLng(), p2.getLatLng()]);\n          this.map.fitBounds(polyline.getBounds());\n        }\n    }\n\n    protected focusOnPoint(point: string[]){\n        const coords = [+point[0], +point[1]];\n        this.map.flyTo(coords, 18);\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapAreaComponent.html":{"url":"components/MapAreaComponent.html","title":"component - MapAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MapAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/map/components/map-area/map-area.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                map-area\n            \n\n            \n                styleUrls\n                ./map-area.component.css\n            \n\n\n\n            \n                templateUrl\n                ./map-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                linesMap\n                            \n                            \n                                    Private\n                                stopsMap\n                            \n                            \n                                    Private\n                                subscribers\n                            \n                            \n                                    Private\n                                tripMap\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearMap\n                            \n                            \n                                    Private\n                                initMap\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, msg: DataShareService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/map/components/map-area/map-area.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/components/map-area/map-area.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    initMap(map: L.Map)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/components/map-area/map-area.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    map\n                                    \n                                                L.Map\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/components/map-area/map-area.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/components/map-area/map-area.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        linesMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LinesMap\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/components/map-area/map-area.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        stopsMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StopsMap\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/components/map-area/map-area.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/components/map-area/map-area.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tripMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TripPlannerMap\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/components/map-area/map-area.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy} from '@angular/core';\nimport { filter, Subscription, switchMap, take, tap } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { AppState} from 'src/app/state/Reducers/api-reducer';\nimport * as L from \"leaflet\";\nimport { getActiveStop, getAllStops, getRoutePathAndStops, getStopsModule, selectItinerary } from 'src/app/state/Selectors/appState.selectors';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { LinesMap } from '../../mapControllers/linesMapControllers';\nimport { TripPlannerMap } from '../../mapControllers/tripPlannerMapControllers';\nimport { StopsMap } from '../../mapControllers/stopMapController';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'map-area',\n  templateUrl: './map-area.component.html',\n  styleUrls: ['./map-area.component.css']\n})\nexport class MapAreaComponent implements OnInit, OnDestroy {\n\n  private subscribers: Subscription[] = [];\n  private linesMap!: LinesMap;\n  private tripMap!: TripPlannerMap;\n  private stopsMap!: StopsMap;\n  \n\n  constructor(\n    private store: Store, \n    private msg: DataShareService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n\n    const map = L.map('map');\n    this.initMap(map);\n    \n    this.linesMap = new LinesMap(map);\n    this.tripMap = new TripPlannerMap(map, this.msg);\n    this.stopsMap = new StopsMap(map, this.router);\n    \n    this.subscribers = [\n\n      this.store.select(getRoutePathAndStops).subscribe(data => this.linesMap.displayRouteInfo(data)), \n\n      this.msg.busObserver.pipe(\n        filter(buses => buses.length > 0)\n      ).subscribe(buses => this.linesMap.displayBusLocations(buses)),\n\n      this.store.select(getActiveStop).pipe(\n        tap(stop => this.stopsMap.setCurrentStop(stop)), filter(stop => !!stop),\n      ).subscribe(stop => this.linesMap.focusOnPoint([stop!?.latitude, stop!?.longitude])),\n\n      this.msg.pointObserver.pipe(\n        filter(point => !!point && point.length > 0)\n      ).subscribe(point => this.linesMap.focusOnPoint(point)),\n\n      this.msg.markerObserver.pipe(\n        switchMap(obs => obs),\n        filter(v => !v.fetch),\n      ).subscribe(data => this.tripMap.addMarker(data)),\n\n      this.store.select(selectItinerary).subscribe(it => this.tripMap.displayItinerary(it)),\n      this.msg.clearMapObserver.subscribe(v => this.clearMap()),\n      this.msg.removeDragObserver.subscribe(v => this.tripMap.dragOff()),\n      this.store.select(getStopsModule).subscribe(stops => this.stopsMap.addClustersToMap(stops))\n      \n    ];\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscribers.forEach(subscriber => subscriber.unsubscribe());\n  }\n\n  private clearMap(){\n    this.linesMap.displayRouteInfo(undefined);\n    this.tripMap.clearPoints();\n    this.tripMap.clearLayerGroup();\n  }\n\n  private initMap(map: L.Map){\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; OpenStreetMap contributors'\n    }).addTo(map);\n    map.setView([39.667341104708946, 20.854922400637918], 13);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n\n\n    \n -->\n\n\n    \n\n    \n                \n                    ./map-area.component.css\n                \n                \n:host{\n  max-width: 75%;\n  width: 75%;\n  height: 100%;\n}\n\n.default{\n  height: 100vh;\n  box-sizing: border-box;\n  position: relative;\n}\n\n.mini{\n  width: 200px;\n  height: 200px\n}\n\n#map{\n  height: 100%;\n  width: 100%;\n  z-index: 10;\n}\n\n@media screen and (max-width: 500px) {\n  .default{\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MapModule.html":{"url":"modules/MapModule.html","title":"module - MapModule","body":"\n                   \n\n\n\n\n    Modules\n    MapModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MapModule\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_MapModule_declarations\n\n\n\n\nMapAreaComponent\n\nMapAreaComponent\n\n\n\nMapModule\n\nMapModule\n\nMapModule -->\n\nMapAreaComponent->MapModule\n\n\n\n\n\nMapAreaComponent \n\nMapAreaComponent \n\nMapAreaComponent  -->\n\nMapModule->MapAreaComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/map/map.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MapAreaComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MapAreaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MapAreaComponent } from './components/map-area/map-area.component';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n@NgModule({\n  declarations: [MapAreaComponent],\n  imports: [CommonModule],\n  exports: [MapAreaComponent],\n  providers:[]\n})\nexport class MapModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MiniMapComponent.html":{"url":"components/MiniMapComponent.html","title":"component - MiniMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MiniMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/mini-map/mini-map.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mini-map\n            \n\n            \n                styleUrls\n                ./mini-map.component.css\n            \n\n\n\n            \n                templateUrl\n                ./mini-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/mini-map/mini-map.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/mini-map/mini-map.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'mini-map',\n  templateUrl: './mini-map.component.html',\n  styleUrls: ['./mini-map.component.css']\n})\nexport class MiniMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./mini-map.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100%;\n    padding: 5px 5px 5px 5px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n.option-list{\n    height: calc(100vh - 150px);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MiniMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/MiniMapService.html":{"url":"guards/MiniMapService.html","title":"guard - MiniMapService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    MiniMapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/services/mini-map.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/mini-map.service.ts:7\n                            \n                        \n\n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/mini-map.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MiniMapService implements CanActivate {\n\n  constructor() { }\n  \n  public canActivate(): boolean{\n\n    if(window.innerWidth \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MultipleDropdownComponent.html":{"url":"components/MultipleDropdownComponent.html","title":"component - MultipleDropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MultipleDropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                multiple-dropdown\n            \n\n            \n                styleUrls\n                ./multiple-dropdown.component.css\n            \n\n\n\n            \n                templateUrl\n                ./multiple-dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectedValue\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:11\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectedValue\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/multiple-dropdown/multiple-dropdown.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'multiple-dropdown',\n  templateUrl: './multiple-dropdown.component.html',\n  styleUrls: ['./multiple-dropdown.component.css'],\n})\nexport class MultipleDropdownComponent implements OnInit{\n\n  @Input() public title: string = '';\n  @Input() public value: string = '';\n  @Input() public data: any[] = [];\n  @Output() public selectedValue = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  public select(data: any){\n    this.selectedValue.emit(data);\n  }\n\n}\n\n    \n\n    \n        \n{{title}}\n\n\n    \n        \n            \n                \n                    {{data.desc}}\n                \n                \n                    {{data.name}}\n                \n            \n            \n                \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./multiple-dropdown.component.css\n                \n                \n:host{\n    width: 100%;\n    padding: 20px 20px 20px 20px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.list{\n    display: flex;\n    flex-direction: column;\n    gap: 25px;\n    max-height: calc(100vh - 230px);\n    overflow: auto;\n    padding-right: 10px;\n}\n\n.option-wrapper{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    border-bottom: 2px solid #bdbdbd;\n    padding-bottom: 15px;\n    font-family: \"Lexend Deca\",sans-serif;\n    cursor: pointer;\n}\n\n.text-section{\n    display: flex;\n    flex-direction: column;\n}\n\n.name{\n    font-size: 14px;\n    font-weight: 600;\n    margin-bottom: 2px;\n    color: #2b3b4c;\n}\n\n.details{\n    color: #868d95;\n}\n\n.save-btn{\n    margin-left: 15px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}}                                                            {{data.desc}}                                                    {{data.name}}                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MultipleDropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Notification.html":{"url":"interfaces/Notification.html","title":"interface - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/state/message.reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            msg\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        msg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        msg:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createAction, createFeatureSelector, createReducer, createSelector, on } from \"@ngrx/store\";\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\n\nexport interface Notification{\n    msg: string;\n    spinner: boolean;\n    type: string\n};\n\nexport const initialNotification: Notification = {\n    msg: '',\n    spinner: false,\n    type: ''\n};\n\nexport const clearState = createAction('[Auth] Clear');\n\n/* Auth Reducer */\nexport const authReducer = createReducer(\n    initialNotification, \n    on(api_actions.loginError, api_actions.registerError, (state: Notification, action): Notification => {\n        return {msg: action.msg.error.error, spinner: false, type: 'login'};\n    }),\n    on(clearState, (state: Notification, action): Notification => {\n        return initialNotification;\n    }),\n);\n\nexport const getNotificationState = createFeatureSelector('auth');\nexport const getMsg = createSelector(getNotificationState, (state)=> state.msg);\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OptionComponent.html":{"url":"components/OptionComponent.html","title":"component - OptionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OptionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/option/option.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-option\n            \n\n            \n                styleUrls\n                ./option.component.css\n            \n\n\n\n            \n                templateUrl\n                ./option.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                    Public\n                                onSave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                desc\n                            \n                            \n                                icon\n                            \n                            \n                                menu\n                            \n                            \n                                saved\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onSelect\n                            \n                            \n                                remove\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/option/option.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        desc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menu\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        saved\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onSelect\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remove\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        save\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/option/option.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/option/option.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/option/option.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onRemove\n                        \n                    \n                \n            \n            \n                \n                    \n                    onRemove()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/option/option.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/option/option.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n  selector: 'app-option',\n  templateUrl: './option.component.html',\n  styleUrls: ['./option.component.css']\n})\nexport class OptionComponent implements OnInit {\n\n  @Output() public onSelect = new EventEmitter();\n  @Output() public save = new EventEmitter();\n  @Output() public remove = new EventEmitter();\n\n  @Input() public menu: boolean = false;\n  @Input() public icon: string = '';\n  @Input() public text: string = '';\n  @Input() public desc: string = '';\n  @Input() public saved: boolean = false;\n  @Input() public data: string[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  public onClick(){\n    this.onSelect.emit(this.data);\n  }\n\n  public onSave(){\n    this.save.emit(this.data[0]);\n  }\n\n  public onRemove(){\n    this.remove.emit(this.data[0]);\n  }\n\n}\n\n    \n\n    \n        \n\n    {{icon}}\n    \n        \n            {{text}}\n            {{desc}}\n        \n    \n\n    \n\n    \n                \n                    ./option.component.css\n                \n                \n:host{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    margin-bottom: 10px;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    width: 100%;\n}\n\n:host:hover{\n    cursor: pointer;\n    transform: translateX(2px);\n    transition-duration: .5s;\n}\n\n.option-content{\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n    color: #545f6d;\n    font-size: 17px;\n    padding: 12px 15px 12px 15px;\n}\n\n.option-text{\n    font-weight: 400;\n}\n\n.icon{\n    margin-right: 15px;\n    color: #373a50;\n}\n\n.text-content{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n.description{\n    font-size: 14px;\n    color: #8190a4;\n}\n\n.main{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n}\n\nbutton{\n    border: none !important;\n    background-color: transparent !important;\n}\n\n::ng-deep .mat-menu-panel {\n    background: rgba(255,255,255,1) !important;\n    color: #373a50 !important;\n}\n\n.text{\n    color: #373a50;\n    font-weight: bold;\n}\n\n.inner-button:hover{\n    background: rgb(235, 235, 235) !important;\n}\n\n.material-symbols-outlined {\n  font-variation-settings:\n  'FILL' 0,\n  'wght' 700,\n  'GRAD' 0,\n  'opsz' 48\n}\n\n@media screen and (max-width: 700px) {\n    .option-content{\n        font-size: 16px;\n    }\n\n    .description{\n        font-size: 13px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    .option-content{\n        font-size: 15px;\n    }\n\n    .description{\n        font-size: 14px;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{icon}}                        {{text}}            {{desc}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OptionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesComponent.html":{"url":"components/PlacesComponent.html","title":"component - PlacesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/places/places.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                places-component\n            \n\n            \n                styleUrls\n                ./places.component.css\n            \n\n\n\n            \n                templateUrl\n                ./places.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                initValue$\n                            \n                            \n                                    Public\n                                spinner$\n                            \n                            \n                                    Public\n                                subs\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initStore\n                            \n                            \n                                    Public\n                                keyup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                onDrag\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, local: DirectionsStore, msg: DataShareService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/places/places.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        DirectionsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initStore\n                        \n                    \n                \n            \n            \n                \n                    \n                    initStore(direction: string, state: TripState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places/places.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                TripState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        keyup\n                        \n                    \n                \n            \n            \n                \n                    \n                    keyup(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places/places.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places/places.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places/places.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onDrag\n                        \n                    \n                \n            \n            \n                \n                    \n                    onDrag(point: string[], direction: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places/places.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    direction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places/places.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        initValue$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places/places.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spinner$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places/places.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        subs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places/places.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places/places.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places/places.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { combineLatest, map, Observable, Subject, Subscription, take, tap } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { DirectionsStore, TripState } from 'src/app/modules/planner/state/directions.store';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { spinner } from 'src/app/state/Selectors/appState.selectors';\n\n@Component({\n  selector: 'places-component',\n  templateUrl: './places.component.html',\n  styleUrls: ['./places.component.css']\n})\nexport class PlacesComponent implements OnInit, OnDestroy {\n\n  public value: string = '';\n  public initValue$!: Observable;\n  public direction: string = 'start';\n  public vm$!: Observable;\n  public spinner$!: Observable;\n  public subs: Subscription[] = [];\n\n  constructor(\n    private route: ActivatedRoute, \n    private local: DirectionsStore,\n    private msg: DataShareService,\n    private store: Store\n  ) { }\n\n  ngOnInit(): void {\n\n    this.subs = [\n      this.msg.dragStartObserver.subscribe(v => this.onDrag(v, 'start')),\n      this.msg.dragEndObserver.subscribe(v => this.onDrag(v, 'dest'))\n    ];\n\n    this.vm$ = combineLatest([\n      this.route.data, \n      this.local.state$,\n    ]).pipe(\n      take(1), \n      map(([data, state]) => ({data, state})), \n      tap(v => this.initStore(v.data['type'], v.state))\n    );\n\n    this.spinner$ = this.store.select(spinner);\n  }\n\n  ngOnDestroy(): void {\n    this.local.changeDirection('');\n    this.msg.dragOff();\n    this.subs.forEach(s => s.unsubscribe());\n  }\n\n  public keyup(value: string){\n    this.value = value;\n    this.local.updateSearchText(value);\n    if(this.value == ''){\n      this.local.updatePoint([]);\n    }\n  }\n\n  private initStore(direction: string, state: TripState){\n\n    this.direction = direction;\n    this.local.changeDirection(direction);\n\n    if(direction == 'start' && state.start.length > 0){\n      this.value = state.start[1];\n      this.initValue$ = this.local.getStartValue();\n    }else if(this.direction == 'dest' && state.destination.length > 0){\n      this.value = state.destination[1];\n      this.initValue$ = this.local.getEndValue();\n    }\n    \n  }\n\n  private onDrag(point: string[], direction: string){\n    this.local.changeDirection(direction);\n    this.local.updatePoint(point);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n        \n\n        \n        \n    \n\n    \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./places.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n::ng-deep .mat-ink-bar{\n    background-color: #1f63d4 !important;\n}\n\n::ng-deep .mat-tab-label, \n::ng-deep .mat-tab-label-active{\n    min-width: 0 !important;\n    padding: 3px !important;\n    margin: 3px !important;\n    color: #373a50 !important;\n    font-weight: 700 !important;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlacesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesMapComponent.html":{"url":"components/PlacesMapComponent.html","title":"component - PlacesMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/places-map/places-map.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                places-map\n            \n\n            \n                styleUrls\n                ./places-map.component.css\n            \n\n\n\n            \n                templateUrl\n                ./places-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/places-map/places-map.component.ts:10\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places-map/places-map.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DirectionsStore } from '../../state/directions.store';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n@Component({\n  selector: 'places-map',\n  templateUrl: './places-map.component.html',\n  styleUrls: ['./places-map.component.css']\n})\nexport class PlacesMapComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./places-map.component.css\n                \n                \n:host{\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100%;\n    padding: 5px 5px 5px 5px;\n}\n\n.option-list{\n    height: calc(100vh - 120px);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlacesMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlacesSliderComponent.html":{"url":"components/PlacesSliderComponent.html","title":"component - PlacesSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlacesSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/places-slider/places-slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                places-slider\n            \n\n            \n                styleUrls\n                ./places-slider.component.css\n            \n\n\n\n            \n                templateUrl\n                ./places-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                spinner$\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                custom\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(localStore: DirectionsStore, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/places-slider/places-slider.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStore\n                                                  \n                                                        \n                                                                        DirectionsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        custom\n                        \n                    \n                \n            \n            \n                \n                    \n                    custom(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places-slider/places-slider.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/places-slider/places-slider.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        spinner$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places-slider/places-slider.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/places-slider/places-slider.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DirectionsStore } from '../../state/directions.store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Store } from '@ngrx/store';\nimport { spinner } from 'src/app/state/Selectors/appState.selectors';\n\n@Component({\n  selector: 'places-slider',\n  templateUrl: './places-slider.component.html',\n  styleUrls: ['./places-slider.component.css']\n})\nexport class PlacesSliderComponent implements OnInit {\n\n  public spinner$!: Observable;\n  public value: string = '';\n\n  constructor(private localStore: DirectionsStore, private store: Store) { }\n\n  ngOnInit(): void {\n    this.spinner$ = this.store.select(spinner);\n  }\n\n  public custom(value: string){\n    \n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n    \n        \n            \n                \n                \n            \n            \n                \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./places-slider.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n.slider-wrapper{\n    width: 100%;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n    height: calc(100vh - 108px);\n    position: relative;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PlacesSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plan.html":{"url":"interfaces/Plan.html","title":"interface - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            itineraries\n                                        \n                                \n                                \n                                        \n                                            occupancy\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itineraries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itineraries:     Itinerary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Itinerary[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupancy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupancy:     Dictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Dictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plan-1.html":{"url":"interfaces/Plan-1.html","title":"interface - Plan-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            itineraries\n                                        \n                                \n                                \n                                        \n                                            occupancy\n                                        \n                                \n                                \n                                        \n                                            slug\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        itineraries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        itineraries:     Itinerary[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Itinerary[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occupancy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        occupancy:     Dictionary\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Dictionary\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        slug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        slug:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Vertex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vertex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlannerModule.html":{"url":"modules/PlannerModule.html","title":"module - PlannerModule","body":"\n                   \n\n\n\n\n    Modules\n    PlannerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PlannerModule\n\n\n\ncluster_PlannerModule_providers\n\n\n\ncluster_PlannerModule_declarations\n\n\n\ncluster_PlannerModule_imports\n\n\n\n\nBookOptionsComponent\n\nBookOptionsComponent\n\n\n\nPlannerModule\n\nPlannerModule\n\nPlannerModule -->\n\nBookOptionsComponent->PlannerModule\n\n\n\n\n\nBookingComponent\n\nBookingComponent\n\nPlannerModule -->\n\nBookingComponent->PlannerModule\n\n\n\n\n\nBookingPipe\n\nBookingPipe\n\nPlannerModule -->\n\nBookingPipe->PlannerModule\n\n\n\n\n\nBookingsComponent\n\nBookingsComponent\n\nPlannerModule -->\n\nBookingsComponent->PlannerModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nPlannerModule -->\n\nInputComponent->PlannerModule\n\n\n\n\n\nPlacesComponent\n\nPlacesComponent\n\nPlannerModule -->\n\nPlacesComponent->PlannerModule\n\n\n\n\n\nPlacesMapComponent\n\nPlacesMapComponent\n\nPlannerModule -->\n\nPlacesMapComponent->PlannerModule\n\n\n\n\n\nPlacesSliderComponent\n\nPlacesSliderComponent\n\nPlannerModule -->\n\nPlacesSliderComponent->PlannerModule\n\n\n\n\n\nQrComponent\n\nQrComponent\n\nPlannerModule -->\n\nQrComponent->PlannerModule\n\n\n\n\n\nStopDropDownComponent\n\nStopDropDownComponent\n\nPlannerModule -->\n\nStopDropDownComponent->PlannerModule\n\n\n\n\n\nTripComponent\n\nTripComponent\n\nPlannerModule -->\n\nTripComponent->PlannerModule\n\n\n\n\n\nTripDetailsComponent\n\nTripDetailsComponent\n\nPlannerModule -->\n\nTripDetailsComponent->PlannerModule\n\n\n\n\n\nTripListComponent\n\nTripListComponent\n\nPlannerModule -->\n\nTripListComponent->PlannerModule\n\n\n\n\n\nTripPlannerOptionsComponent\n\nTripPlannerOptionsComponent\n\nPlannerModule -->\n\nTripPlannerOptionsComponent->PlannerModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nPlannerModule -->\n\nAuthModule->PlannerModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nPlannerModule -->\n\nMapModule->PlannerModule\n\n\n\n\n\nRoutesRoutingModule\n\nRoutesRoutingModule\n\nPlannerModule -->\n\nRoutesRoutingModule->PlannerModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlannerModule -->\n\nSharedModule->PlannerModule\n\n\n\n\n\nDirectionsStore\n\nDirectionsStore\n\nPlannerModule -->\n\nDirectionsStore->PlannerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/planner/planner.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BookOptionsComponent\n                        \n                        \n                            BookingComponent\n                        \n                        \n                            BookingPipe\n                        \n                        \n                            BookingsComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            PlacesComponent\n                        \n                        \n                            PlacesMapComponent\n                        \n                        \n                            PlacesSliderComponent\n                        \n                        \n                            QrComponent\n                        \n                        \n                            StopDropDownComponent\n                        \n                        \n                            TripComponent\n                        \n                        \n                            TripDetailsComponent\n                        \n                        \n                            TripListComponent\n                        \n                        \n                            TripPlannerOptionsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DirectionsStore\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            MapModule\n                        \n                        \n                            RoutesRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoutesRoutingModule } from './planner-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { InputComponent } from './components/input/input.component';\nimport { SharedModule } from '../shared-module/shared-module.module';\nimport { StopDropDownComponent } from './components/stop-drop-down/stop-drop-down.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TripPlannerOptionsComponent } from './components/trip-planner-options/trip-planner-options.component';\nimport { TripComponent } from './components/trip/trip.component';\nimport { TripListComponent } from './components/trip-list/trip-list.component';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonModule} from '@angular/material/button';\nimport { TripDetailsComponent } from './components/trip-details/trip-details.component';\nimport { DirectionsStore } from 'src/app/modules/planner/state/directions.store';\nimport { PlacesComponent } from './components/places/places.component';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { AuthModule } from '../auth/auth.module';\nimport { BookOptionsComponent } from './components/book-options/book-options.component';\nimport { BookingsComponent } from './components/bookings/bookings.component';\nimport { BookingComponent } from './components/booking/booking.component';\nimport { QrComponent } from './components/qr/qr.component';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { PlacesMapComponent } from './components/places-map/places-map.component';\nimport { PlacesSliderComponent } from './components/places-slider/places-slider.component';\nimport { MapModule } from '../map/map.module';\nimport { BookingPipe } from './pipes/bookings.pipe';\n\n@NgModule({\n  declarations: [\n    InputComponent, \n    StopDropDownComponent, \n    TripPlannerOptionsComponent,\n    TripComponent,\n    TripListComponent,\n    TripDetailsComponent,\n    PlacesComponent,\n    BookOptionsComponent,\n    BookingsComponent,\n    BookingComponent, \n    QrComponent,\n    PlacesMapComponent,\n    PlacesSliderComponent,\n    BookingPipe\n  ],\n  imports: [\n    CommonModule,\n    RoutesRoutingModule,\n    FormsModule,\n    SharedModule,\n    MatTabsModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatExpansionModule,\n    MatButtonModule,\n    MatMenuModule,\n    AuthModule,\n    QRCodeModule,\n    MapModule\n  ],providers: [DirectionsStore]\n})\nexport class PlannerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QRLocal.html":{"url":"interfaces/QRLocal.html","title":"interface - QRLocal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QRLocal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/planner/components/qr/qr.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            booking\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        booking\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        booking:     Booking | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Booking | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { Booking } from 'src/app/state/Entities/booking.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Store } from '@ngrx/store';\nimport { getACtiveBooking, spinner } from 'src/app/state/Selectors/appState.selectors';\n\ninterface QRLocal{\n  booking: Booking | undefined;\n  spinner: boolean;\n}\n\n@Component({\n  selector: 'qr-component',\n  templateUrl: './qr.component.html',\n  styleUrls: ['./qr.component.css'],\n})\nexport class QrComponent implements OnInit {\n\n  public vm$!: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.vm$ = combineLatest([\n      this.store.select(spinner),\n      this.store.select(getACtiveBooking)\n    ]).pipe(map(([spinner, booking]) => ({spinner, booking})));\n  }\n\n  public data(user: string, trip: number){\n    return `${user}_${trip}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QrComponent.html":{"url":"components/QrComponent.html","title":"component - QrComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QrComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/qr/qr.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                qr-component\n            \n\n            \n                styleUrls\n                ./qr.component.css\n            \n\n\n\n            \n                templateUrl\n                ./qr.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/qr/qr.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        data\n                        \n                    \n                \n            \n            \n                \n                    \n                    data(user: string, trip: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/qr/qr.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/qr/qr.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/qr/qr.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { Booking } from 'src/app/state/Entities/booking.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Store } from '@ngrx/store';\nimport { getACtiveBooking, spinner } from 'src/app/state/Selectors/appState.selectors';\n\ninterface QRLocal{\n  booking: Booking | undefined;\n  spinner: boolean;\n}\n\n@Component({\n  selector: 'qr-component',\n  templateUrl: './qr.component.html',\n  styleUrls: ['./qr.component.css'],\n})\nexport class QrComponent implements OnInit {\n\n  public vm$!: Observable;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.vm$ = combineLatest([\n      this.store.select(spinner),\n      this.store.select(getACtiveBooking)\n    ]).pipe(map(([spinner, booking]) => ({spinner, booking})));\n  }\n\n  public data(user: string, trip: number){\n    return `${user}_${trip}`;\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n        \n\n        \n            \n            \n                \n            \n            \n        \n\n    \n\n\n\n\n\n    \n\n\n    \n\n    \n                \n                    ./qr.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\nh1{\n    margin-bottom: 10px;\n    color: #2b3b4c;\n    margin-top: 10px;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 25px 15px 0px 15px;\n    height: calc(100vh - 140px);\n    position: relative;\n    gap: 40px;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 225px);\n    padding-right: 3px;\n    gap: 10px;\n}\n\nqrcode{\n    display: flex !important;\n    justify-content: center !important;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QrComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/components/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                register-component\n            \n\n            \n                styleUrls\n                ./register.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authMsg$\n                            \n                            \n                                    Public\n                                credentials\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                back\n                            \n                            \n                                    Public\n                                errors\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, msg: DataShareService, authStore: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/components/register/register.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authStore\n                                                  \n                                                        \n                                                                        Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        back\n                        \n                    \n                \n            \n            \n                \n                    \n                    back()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/register/register.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        errors\n                        \n                    \n                \n            \n            \n                \n                    \n                    errors(value: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/register/register.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/register/register.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/register/register.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/components/register/register.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authMsg$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/components/register/register.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        credentials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/components/register/register.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport * as nav_actions from 'src/app/state/Actions/navigation.actions';\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\nimport { AuthService } from '../../../../services/auth.service';\nimport { Observable } from 'rxjs';\nimport { clearState, getMsg, getNotificationState } from '../../state/message.reducer';\n\n@Component({\n  selector: 'register-component',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  public credentials!: FormGroup;\n  public authMsg$!: Observable;\n\n  constructor(\n    private store: Store, \n    private msg: DataShareService, \n    private authStore: Store\n  ) { }\n\n  ngOnInit(): void {\n    this.credentials = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.minLength(3), Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(3)]),\n    });\n\n    this.authStore.dispatch(clearState());\n    this.authMsg$ = this.authStore.select(getMsg);\n  }\n\n  public toggle(){\n    this.msg.onToggle();\n  }\n\n  public back(){\n    this.store.dispatch(nav_actions.arrowNavigation());\n  }\n\n  public errors(value: string, type: string): boolean{\n    return this.credentials.controls[value].hasError(type);\n  }\n\n  public register(){\n    if(!this.credentials.valid){\n      console.log('invalid');\n    }else{\n\n      const user = {\n        name: this.credentials.value['name'],\n        email: this.credentials.value['email'],\n        password: this.credentials.value['password']\n      };\n\n      this.store.dispatch(api_actions.register({credentials: user}));\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n      keyboard_backspace\n    \n    \n  \n  \n\n  \n    Register\n\n    \n        Name\n        \n        name is required\n        at least 3 characters long\n    \n  \n    \n        Email\n        \n        email is required\n        must be an email\n        at least 3 characters long\n    \n  \n    \n        Password\n        \n        at least 3 characters\n        password is required\n    \n\n    \n        {{msg}}\n    \n  \n    \n        \n            Register\n        \n    \n    \n\n  \n\n    \n\n    \n                \n                    ./register.component.css\n                \n                \n:host{\n    width: 25vw;\n    display: flex;\n    flex-direction: column;\n    min-width: 342px;\n}\n\n.simple-form{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 30px 15px 0px 15px;\n    gap: 5px;\n}\n\n.left-wrapper{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px 20px 20px 20px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n    position: relative;\n    width: 100%;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\ni{\n    color: #373a50;;\n    font-weight: 600;\n    font-size: 27px;\n    cursor: pointer;\n}\n\n::ng-deep mat-form-field{\n    width: 100% !important;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 25px;\n}\n\n.mat-input-element {\n    caret-color: #545f6d;\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-label{\n    color: #545f6d !important;\n}\n\n.mat-hint .mat-datepicker-toggle{\n    color: #545f6d !important;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n    /*change color of label*/\n    color: #545f6d!important;\n    font-size: 15px;\n}\n   \n::ng-deep .mat-form-field-ripple {\n    /*change color of underline when focused*/\n    background-color: #3e3aef !important;\n}\n   \n::ng-deep .mat-form-field-label {\n    /*change color of label*/\n    color: #545f6d !important;\n}\n\n::ng-deep .mat-form-field-appearance-fill .mat-form-field-flex {\n    background-color: rgb(135 135 135 / 10%) !important;\n}\n\n::ng-deep .mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n    color: #2b3b4c !important;\n}\n\n::ng-deep .mat-button, .mat-icon-button, .mat-stroked-button {\n    background: rgb(135 135 135 / 10%) !important;\n}\n\nbutton{\n    font-size: 17px !important;\n    font-weight: bold;\n}\n\n.error-msg{\n    color: red;\n    align-self: center;\n    margin-bottom: 10px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          keyboard_backspace                  Register            Name                name is required        at least 3 characters long                  Email                email is required        must be an email        at least 3 characters long                  Password                at least 3 characters        password is required                {{msg}}                              Register                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteDetailsComponent.html":{"url":"components/RouteDetailsComponent.html","title":"component - RouteDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/route-details/route-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                LiveDataStore\n                \n            \n\n\n            \n                selector\n                route-details\n            \n\n            \n                styleUrls\n                ./route-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                    Public\n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, localStore: LiveDataStore, auth: AuthService, msg: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/route-details/route-details.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStore\n                                                  \n                                                        \n                                                                        LiveDataStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/route-details/route-details.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/route-details/route-details.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onRemove\n                        \n                    \n                \n            \n            \n                \n                    \n                    onRemove(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/route-details/route-details.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/route-details/route-details.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/route-details/route-details.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authenticated\n                    \n                \n\n                \n                    \n                        getauthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/lines/components/route-details/route-details.component.ts:64\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { LiveDataStore } from 'src/app/modules/lines/state/live.data.store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { currentLine, currentRoute, getActiveStop, isRouteSaved } from 'src/app/state/Selectors/appState.selectors';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\nimport * as select_action from 'src/app/state/Actions/select.actions';\nimport { IArrival } from 'src/app/state/Entities/live.data';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\ninterface CurrentRoute{\n  route: IRoute | undefined,\n  saved: boolean\n}\n\n@Component({\n  selector: 'route-details',\n  templateUrl: './route-details.component.html',\n  styleUrls: ['./route-details.component.css'],\n  providers: [LiveDataStore]\n})\nexport class RouteDetailsComponent implements OnInit, OnDestroy {\n\n  public vm$!: Observable;\n\n  constructor(\n    private store: Store, \n    private localStore: LiveDataStore,\n    private auth: AuthService,\n    private msg: DataShareService\n  ) { }\n\n  ngOnInit(): void {\n    \n    this.vm$ = combineLatest([\n      this.store.select(isRouteSaved),\n      this.store.select(currentRoute),\n      this.localStore.getBusLocations()\n    ]).pipe(\n      tap(([saved, route, buses]) => this.msg.sendBusStatus(buses)),\n      map(([saved, route, buses]) => ({saved, route, buses}))\n    );\n\n    this.localStore.fetchBusLocations(this.store.select(currentLine));\n    this.localStore.fetchArrivals(this.store.select(getActiveStop));\n\n  }\n\n  ngOnDestroy(): void {\n    this.store.dispatch(select_action.emptyPath());\n  }\n\n  public onSave(code: string){\n    this.store.dispatch(api_actions.saveRoute({code: code}));\n  }\n\n  public onRemove(code: string){\n    this.store.dispatch(api_actions.deleteRoute({code: code}));\n  }\n\n  public get authenticated(){\n    return this.auth.isAuthenticated();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n        \n        \n\n        \n\n    \n\n\n    \n\n    \n                \n                    ./route-details.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n.input-section{\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    width: 100%;\n    gap: 10px;\n    background: white;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.left-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 30px;\n    padding: 15px 0 35px 20px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n}\n\n.right-wrapper{\n    padding-bottom: 18px;\n    width: inherit;\n    display: flex;\n    flex-direction: row;\n    gap: 15px;\n}\n\n.right-wrapper>i{\n    margin-top: 5px;\n    cursor: pointer;\n}\n\n.inputs{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\ninput{\n    outline: none;\n    border: none;\n    border-bottom: 3px solid #f7f8fe;\n    background: transparent;\n    width: 85%;\n    font-size: 16px;\n    padding-bottom: 16px;\n    color: #2b3b4c;\n    font-weight: 500;\n}\n\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.route{\n    color: #3e3aef;\n    font-weight: 700;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RouteListComponent.html":{"url":"components/RouteListComponent.html","title":"component - RouteListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RouteListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/route-list/route-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                route-list\n            \n\n            \n                styleUrls\n                ./route-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./route-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                line$\n                            \n                            \n                                    Public\n                                routes$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/route-list/route-list.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/route-list/route-list.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelect(slug: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/route-list/route-list.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        line$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/route-list/route-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        routes$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/route-list/route-list.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { ILine } from 'src/app/state/Entities/line.entity';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { currentLine, selectCurrentLineRoutes } from 'src/app/state/Selectors/appState.selectors';\n\n@Component({\n  selector: 'route-list',\n  templateUrl: './route-list.component.html',\n  styleUrls: ['./route-list.component.css']\n})\nexport class RouteListComponent implements OnInit {\n\n  public routes$!: Observable;\n  public line$!: Observable;\n\n  constructor(private store: Store, private router: Router) { }\n\n  ngOnInit(): void {\n    this.routes$ = this.store.select(selectCurrentLineRoutes);\n    this.line$ = this.store.select(currentLine);\n  }\n\n  public onSelect(slug: string[]){\n    this.router.navigate([{ outlets: { sidebar: slug }}], {queryParams: {module: 'route_data'}});\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n    \n        Routes\n        \n            \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./route-list.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n.input-section{\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    width: 100%;\n    gap: 10px;\n    background: white;\n    box-shadow: 0 2px 5px #0000004d;\n}\n\n.left-wrapper{\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 30px;\n    padding: 15px 0 35px 20px;\n    background: rgb(221,220,229);\n    background: linear-gradient(90deg, rgba(221,220,229,1) 0%, rgba(254,254,254,1) 100%);\n}\n\n.right-wrapper{\n    padding-bottom: 18px;\n    width: inherit;\n    display: flex;\n    flex-direction: row;\n    gap: 15px;\n}\n\n.right-wrapper>i{\n    margin-top: 5px;\n    cursor: pointer;\n}\n\n.inputs{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.arrow{\n    color: #2d3b50;\n    font-size: 33px;\n    font-weight: 600;\n    cursor: pointer;\n}\n\n.route{\n    color: #3e3aef;\n    font-weight: 700;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 225px);\n    padding-right: 3px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Routes                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RouteListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteState.html":{"url":"interfaces/RouteState.html","title":"interface - RouteState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/route.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeRoute\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeRoute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeRoute:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteState-1.html":{"url":"interfaces/RouteState-1.html","title":"interface - RouteState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouteState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/route.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeRoute\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeRoute\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeRoute:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IRouteInfo{\n    stops: IStop[];\n    points: IPoint[];\n    code: string;\n}\n\nexport interface IPoint{\n    id: string;\n    longitude: string;\n    latitude: string;\n    routeCode: string;\n}\n\nexport interface IRoute{\n    id: string;\n    code: string;\n    lineId: string;\n    direction: string;\n    desc_eng: string;\n    desc: string;\n    name: string;\n    stopCodes: string;\n    saved: boolean | undefined;\n    points: IPoint[];\n}\n\nexport interface RouteState extends EntityState{\n    activeRoute: string;\n};\n\nexport const routeStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (route: IRoute) => route.code\n});\n\nexport const inititialRouteState: RouteState = routeStateAdapter.getInitialState({\n    activeRoute: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterEffects.html":{"url":"injectables/RouterEffects.html","title":"injectable - RouterEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Effects/router.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeModule$\n                            \n                            \n                                clearLine$\n                            \n                            \n                                clearPlan$\n                            \n                            \n                                clearStop$\n                            \n                            \n                                fetchLineRoutes$\n                            \n                            \n                                fetchLines$\n                            \n                            \n                                fetchRouteDetails$\n                            \n                            \n                                fetchStopRoutes$\n                            \n                            \n                                fetchStops$\n                            \n                            \n                                getBookings$\n                            \n                            \n                                linesModule$\n                            \n                            \n                                loadSavedInfo$\n                            \n                            \n                                loadSavedRoutes$\n                            \n                            \n                                loadSavedStops$\n                            \n                            \n                                placesMap$\n                            \n                            \n                                previousView$\n                            \n                            \n                                qrCode$\n                            \n                            \n                                qrData$\n                            \n                            \n                                selectItinerary$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router, actions$: Actions, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state/Effects/router.effects.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(link: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/state/Effects/router.effects.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeModule$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            map(([action, {url}]) => {\n                if(url.startsWith('/(sidebar:stops')){\n                    return 'stops'\n                }else if(url.startsWith('/(sidebar:lines')){\n                    return 'lines'\n                }else if(url.startsWith('/(sidebar:routes')){\n                    return 'planner';\n                }else{\n                    return '';\n                }\n            }),\n            map((module) => select_actions.module({module: module}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:199\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearLine$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'lines_load'),\n            switchMap(() => [\n                select_actions.selectLine({id: ''}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n                //select_actions.emptyRoutes()\n            ])\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearPlan$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_options'),\n            map(action => select_actions.emptyPlan())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:173\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearStop$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stops_module'),\n            map(() => select_actions.selectStop({code: ''}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLineRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['lineCode']),\n            switchMap(({params}) => [\n                select_actions.selectLine({id: params!['lineCode']}),\n                api_actions.getLineRoutes({id: params!['lineCode']}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n            ]), \n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLines$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            map((event) => api_actions.getLines())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRouteDetails$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['routeCode']),\n            switchMap(({params}) => [\n                api_actions.getRouteDetails({code: params!['routeCode']}),\n                select_actions.selectRoute({code: params!['routeCode']}),\n            ])\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchStopRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:stops') && params!['stopCode']),\n            switchMap(([action, {params}]) => [\n                api_actions.stopRoutes({stopCode: params!['stopCode']}),\n                api_actions.getStops(),\n                select_actions.selectStop({code: params!['stopCode']})\n            ])  \n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'places' || query!['module'] == 'stops_module'),\n            map(() => api_actions.getStops())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url}]) => url.startsWith('/(sidebar:routes/bookings)')),\n            map(() => api_actions.fetchBookings())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:119\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linesModule$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:lines') && !!params),\n            map(([action, {params}]) => navigation.linesModule({params: params}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'saved_info'),\n            map(() => api_actions.getSavedInfo())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:164\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'route_data'),\n            map(() => api_actions.getSavedRoutes())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:146\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stop_data' || query!['module'] == 'places'),\n            map(() => api_actions.getSavedStops())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:155\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placesMap$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(navigation.placesMap),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {url}]) => {\n\n                const link: string[] = [ 'routes', 'places', 'start', 'map'];\n                if(url.includes('dest')){\n                    link[2] = 'dest';\n                }\n\n                this.router.navigate([{ outlets: { sidebar: link }}]);\n            }),\n            \n        ), {dispatch: false}\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:182\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.arrowNavigation),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {query}]) => {\n                if(query!['module'] == 'stop_data'){\n                    this.navigate(['stops', 'stops_module']);\n                    this.location.replaceState('');\n                }else{\n                    this.location.back();\n                }\n            })\n        ), {dispatch: false}\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:218\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qrCode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(([action, {params}]) => select_actions.selectBooking({trip_id: params!['id']})),   \n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:128\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qrData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(() => api_actions.fetchBookings())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:137\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectItinerary$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_details'),\n            map(([action, {params}]) => params!['index']),\n            map((index) => select_actions.selectItinerary({index: index}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/Effects/router.effects.ts:109\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Store } from \"@ngrx/store\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { filter, map, switchMap, tap, withLatestFrom } from \"rxjs\";\nimport * as navigation from'../Actions/navigation.actions';\nimport * as api_actions from \"../Actions/api-calls.actions\";\nimport * as select_actions from \"../Actions/select.actions\";\nimport { AppState } from \"../Reducers/api-reducer\";\nimport { ROUTER_NAVIGATED } from \"@ngrx/router-store\";\nimport { getState } from \"../Selectors/router.selectors\";\nimport { Location } from '@angular/common'\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class RouterEffects{\n\n    constructor(\n        private location: Location, \n        private router: Router,\n        private actions$: Actions, \n        private store: Store, \n    ){}\n\n    linesModule$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:lines') && !!params),\n            map(([action, {params}]) => navigation.linesModule({params: params}))\n        )\n    );\n\n    fetchLines$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            map((event) => api_actions.getLines())\n        )\n    );\n\n    fetchLineRoutes$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['lineCode']),\n            switchMap(({params}) => [\n                select_actions.selectLine({id: params!['lineCode']}),\n                api_actions.getLineRoutes({id: params!['lineCode']}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n            ]), \n        )\n    );\n\n    fetchRouteDetails$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['routeCode']),\n            switchMap(({params}) => [\n                api_actions.getRouteDetails({code: params!['routeCode']}),\n                select_actions.selectRoute({code: params!['routeCode']}),\n            ])\n        )\n    );\n\n    clearLine$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'lines_load'),\n            switchMap(() => [\n                select_actions.selectLine({id: ''}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n                //select_actions.emptyRoutes()\n            ])\n        )\n    );\n\n    fetchStops$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'places' || query!['module'] == 'stops_module'),\n            map(() => api_actions.getStops())\n        )\n    );\n\n    clearStop$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stops_module'),\n            map(() => select_actions.selectStop({code: ''}))\n        )\n    );\n\n    fetchStopRoutes$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:stops') && params!['stopCode']),\n            switchMap(([action, {params}]) => [\n                api_actions.stopRoutes({stopCode: params!['stopCode']}),\n                api_actions.getStops(),\n                select_actions.selectStop({code: params!['stopCode']})\n            ])  \n        )\n    );\n\n    selectItinerary$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_details'),\n            map(([action, {params}]) => params!['index']),\n            map((index) => select_actions.selectItinerary({index: index}))\n        )\n    );\n\n    getBookings$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url}]) => url.startsWith('/(sidebar:routes/bookings)')),\n            map(() => api_actions.fetchBookings())\n        )\n    );\n\n    qrCode$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(([action, {params}]) => select_actions.selectBooking({trip_id: params!['id']})),   \n        )\n    );\n\n    qrData$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(() => api_actions.fetchBookings())\n        )\n    );\n\n    loadSavedRoutes$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'route_data'),\n            map(() => api_actions.getSavedRoutes())\n        )\n    );\n\n    loadSavedStops$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stop_data' || query!['module'] == 'places'),\n            map(() => api_actions.getSavedStops())\n        )\n    );\n\n    loadSavedInfo$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'saved_info'),\n            map(() => api_actions.getSavedInfo())\n        )\n    );\n\n    clearPlan$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_options'),\n            map(action => select_actions.emptyPlan())\n        )\n    );\n\n    placesMap$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(navigation.placesMap),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {url}]) => {\n\n                const link: string[] = [ 'routes', 'places', 'start', 'map'];\n                if(url.includes('dest')){\n                    link[2] = 'dest';\n                }\n\n                this.router.navigate([{ outlets: { sidebar: link }}]);\n            }),\n            \n        ), {dispatch: false}\n    );\n\n    changeModule$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            map(([action, {url}]) => {\n                if(url.startsWith('/(sidebar:stops')){\n                    return 'stops'\n                }else if(url.startsWith('/(sidebar:lines')){\n                    return 'lines'\n                }else if(url.startsWith('/(sidebar:routes')){\n                    return 'planner';\n                }else{\n                    return '';\n                }\n            }),\n            map((module) => select_actions.module({module: module}))\n        )\n    );\n\n    previousView$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.arrowNavigation),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {query}]) => {\n                if(query!['module'] == 'stop_data'){\n                    this.navigate(['stops', 'stops_module']);\n                    this.location.replaceState('');\n                }else{\n                    this.location.back();\n                }\n            })\n        ), {dispatch: false}\n    );\n\n    private navigate(link: string[]){\n        this.router.navigate([{ outlets: { sidebar: link[0] }}], {queryParams: {module: link[1]}});\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouterEffects-1.html":{"url":"injectables/RouterEffects-1.html","title":"injectable - RouterEffects-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RouterEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/router.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeModule$\n                            \n                            \n                                clearLine$\n                            \n                            \n                                clearPlan$\n                            \n                            \n                                clearStop$\n                            \n                            \n                                fetchLineRoutes$\n                            \n                            \n                                fetchLines$\n                            \n                            \n                                fetchRouteDetails$\n                            \n                            \n                                fetchStopRoutes$\n                            \n                            \n                                fetchStops$\n                            \n                            \n                                getBookings$\n                            \n                            \n                                linesModule$\n                            \n                            \n                                loadSavedInfo$\n                            \n                            \n                                loadSavedRoutes$\n                            \n                            \n                                loadSavedStops$\n                            \n                            \n                                placesMap$\n                            \n                            \n                                previousView$\n                            \n                            \n                                qrCode$\n                            \n                            \n                                qrData$\n                            \n                            \n                                selectItinerary$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, router: Router, actions$: Actions, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/state/store/router.effects.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(link: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/state/store/router.effects.ts:230\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeModule$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            map(([action, {url}]) => {\n                if(url.startsWith('/(sidebar:stops')){\n                    return 'stops'\n                }else if(url.startsWith('/(sidebar:lines')){\n                    return 'lines'\n                }else if(url.startsWith('/(sidebar:routes')){\n                    return 'planner';\n                }else{\n                    return '';\n                }\n            }),\n            map((module) => select_actions.module({module: module}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:198\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearLine$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'lines_load'),\n            switchMap(() => [\n                select_actions.selectLine({id: ''}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n                //select_actions.emptyRoutes()\n            ])\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearPlan$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_options'),\n            map(action => select_actions.emptyPlan())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:172\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearStop$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stops_module'),\n            map(() => select_actions.selectStop({code: ''}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLineRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['lineCode']),\n            switchMap(({params}) => [\n                select_actions.selectLine({id: params!['lineCode']}),\n                api_actions.getLineRoutes({id: params!['lineCode']}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n            ]), \n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLines$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            map((event) => api_actions.getLines())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchRouteDetails$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['routeCode']),\n            switchMap(({params}) => [\n                api_actions.getRouteDetails({code: params!['routeCode']}),\n                select_actions.selectRoute({code: params!['routeCode']}),\n            ])\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchStopRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:stops') && params!['stopCode']),\n            switchMap(([action, {params}]) => [\n                api_actions.stopRoutes({stopCode: params!['stopCode']}),\n                api_actions.getStops(),\n                select_actions.selectStop({code: params!['stopCode']})\n            ])  \n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fetchStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'places' || query!['module'] == 'stops_module'),\n            map(() => api_actions.getStops())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookings$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url}]) => url.startsWith('/(sidebar:routes/bookings)')),\n            map(() => api_actions.fetchBookings())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linesModule$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:lines') && !!params),\n            map(([action, {params}]) => navigation.linesModule({params: params}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedInfo$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'saved_info'),\n            map(() => api_actions.getSavedInfo())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:163\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedRoutes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'route_data'),\n            map(() => api_actions.getSavedRoutes())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:145\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSavedStops$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stop_data' || query!['module'] == 'places'),\n            map(() => api_actions.getSavedStops())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:154\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        placesMap$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(navigation.placesMap),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {url}]) => {\n\n                const link: string[] = [ 'routes', 'places', 'start', 'map'];\n                if(url.includes('dest')){\n                    link[2] = 'dest';\n                }\n\n                this.router.navigate([{ outlets: { sidebar: link }}]);\n            }),\n            \n        ), {dispatch: false}\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:181\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousView$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.arrowNavigation),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {query}]) => {\n                if(query!['module'] == 'stop_data'){\n                    this.navigate(['stops', 'stops_module']);\n                }else{\n                }\n            })\n        ), {dispatch: false}\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:217\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qrCode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(([action, {params}]) => select_actions.selectBooking({trip_id: params!['id']})),   \n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        qrData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(() => api_actions.fetchBookings())\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:136\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectItinerary$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_details'),\n            map(([action, {params}]) => params!['index']),\n            map((index) => select_actions.selectItinerary({index: index}))\n        )\n    )\n                    \n                \n                    \n                        \n                                Defined in src/app/state/store/router.effects.ts:108\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { ROUTER_NAVIGATED } from \"@ngrx/router-store\";\nimport { Store } from \"@ngrx/store\";\nimport { withLatestFrom, filter, map, switchMap, tap } from \"rxjs\";\nimport { getState } from \"../Selectors/router.selectors\";\nimport { AppState } from \"./api-reducer\";\nimport * as api_actions from \"./api-calls.actions\";\nimport * as select_actions from \"./select.actions\";\nimport * as navigation from \"./navigation.actions\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class RouterEffects{\n\n    constructor(\n        private location: Location, \n        private router: Router,\n        private actions$: Actions, \n        private store: Store, \n    ){}\n\n    linesModule$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:lines') && !!params),\n            map(([action, {params}]) => navigation.linesModule({params: params}))\n        )\n    );\n\n    fetchLines$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            map((event) => api_actions.getLines())\n        )\n    );\n\n    fetchLineRoutes$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['lineCode']),\n            switchMap(({params}) => [\n                select_actions.selectLine({id: params!['lineCode']}),\n                api_actions.getLineRoutes({id: params!['lineCode']}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n            ]), \n        )\n    );\n\n    fetchRouteDetails$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.linesModule),\n            filter(({params}) => params!['routeCode']),\n            switchMap(({params}) => [\n                api_actions.getRouteDetails({code: params!['routeCode']}),\n                select_actions.selectRoute({code: params!['routeCode']}),\n            ])\n        )\n    );\n\n    clearLine$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'lines_load'),\n            switchMap(() => [\n                select_actions.selectLine({id: ''}),\n                select_actions.selectRoute({code: ''}),\n                select_actions.selectStop({code: ''}),\n                //select_actions.emptyRoutes()\n            ])\n        )\n    );\n\n    fetchStops$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'places' || query!['module'] == 'stops_module'),\n            map(() => api_actions.getStops())\n        )\n    );\n\n    clearStop$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stops_module'),\n            map(() => select_actions.selectStop({code: ''}))\n        )\n    );\n\n    fetchStopRoutes$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url, params}]) => url.startsWith('/(sidebar:stops') && params!['stopCode']),\n            switchMap(([action, {params}]) => [\n                api_actions.stopRoutes({stopCode: params!['stopCode']}),\n                api_actions.getStops(),\n                select_actions.selectStop({code: params!['stopCode']})\n            ])  \n        )\n    );\n\n    selectItinerary$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_details'),\n            map(([action, {params}]) => params!['index']),\n            map((index) => select_actions.selectItinerary({index: index}))\n        )\n    );\n\n    getBookings$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {url}]) => url.startsWith('/(sidebar:routes/bookings)')),\n            map(() => api_actions.fetchBookings())\n        )\n    );\n\n    qrCode$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(([action, {params}]) => select_actions.selectBooking({trip_id: params!['id']})),   \n        )\n    );\n\n    qrData$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'qr_module'),\n            map(() => api_actions.fetchBookings())\n        )\n    );\n\n    loadSavedRoutes$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'route_data'),\n            map(() => api_actions.getSavedRoutes())\n        )\n    );\n\n    loadSavedStops$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'stop_data' || query!['module'] == 'places'),\n            map(() => api_actions.getSavedStops())\n        )\n    );\n\n    loadSavedInfo$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED), \n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'saved_info'),\n            map(() => api_actions.getSavedInfo())\n        )\n    );\n\n    clearPlan$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            filter(([action, {query}]) => query!['module'] == 'trip_options'),\n            map(action => select_actions.emptyPlan())\n        )\n    );\n\n    placesMap$ = createEffect(() => \n        this.actions$.pipe(\n            ofType(navigation.placesMap),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {url}]) => {\n\n                const link: string[] = [ 'routes', 'places', 'start', 'map'];\n                if(url.includes('dest')){\n                    link[2] = 'dest';\n                }\n\n                this.router.navigate([{ outlets: { sidebar: link }}]);\n            }),\n            \n        ), {dispatch: false}\n    );\n\n    changeModule$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(ROUTER_NAVIGATED),\n            withLatestFrom(this.store.select(getState)),\n            map(([action, {url}]) => {\n                if(url.startsWith('/(sidebar:stops')){\n                    return 'stops'\n                }else if(url.startsWith('/(sidebar:lines')){\n                    return 'lines'\n                }else if(url.startsWith('/(sidebar:routes')){\n                    return 'planner';\n                }else{\n                    return '';\n                }\n            }),\n            map((module) => select_actions.module({module: module}))\n        )\n    );\n\n    previousView$ = createEffect(()=>\n        this.actions$.pipe(\n            ofType(navigation.arrowNavigation),\n            withLatestFrom(this.store.select(getState)),\n            tap(([action, {query}]) => {\n                if(query!['module'] == 'stop_data'){\n                    this.navigate(['stops', 'stops_module']);\n                }else{\n                }\n            })\n        ), {dispatch: false}\n    );\n\n    private navigate(link: string[]){\n        this.router.navigate([{ outlets: { sidebar: link[0] }}], {queryParams: {module: link[1]}});\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouterStateUrl.html":{"url":"interfaces/RouterStateUrl.html","title":"interface - RouterStateUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RouterStateUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Selectors/custom-route-serializer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                        \n                                            queryParams\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queryParams\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queryParams:         Params\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Params\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Params, RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\n\nexport interface RouterStateUrl {\n  url: string;\n  params: Params;\n  queryParams: Params;\n}\n\nexport class CustomSerializer implements RouterStateSerializer {\n\n\n  public serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n\n    let route = routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {url, root: { queryParams }} = routerState;\n    const { params } = route;\n\n    // Only select an object including the URL, params and query params\n    // instead of the entire snapshot\n    return { url, params, queryParams };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoutesRoutingModule.html":{"url":"modules/RoutesRoutingModule.html","title":"module - RoutesRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RoutesRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/planner/planner-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BookOptionsComponent } from './components/book-options/book-options.component';\nimport { InputComponent } from './components/input/input.component';\nimport { PlacesComponent } from './components/places/places.component';\nimport { TripDetailsComponent } from './components/trip-details/trip-details.component';\nimport { TripListComponent } from './components/trip-list/trip-list.component';\nimport { TripPlannerOptionsComponent } from './components/trip-planner-options/trip-planner-options.component';\nimport { AuthGuardService } from '../../services/auth-guard.service';\nimport { BookingsComponent } from './components/bookings/bookings.component';\nimport { QrComponent } from './components/qr/qr.component';\nimport { PlacesSliderComponent } from './components/places-slider/places-slider.component';\nimport { PlacesMapComponent } from './components/places-map/places-map.component';\nimport { MiniMapComponent } from '../shared-module/components/mini-map/mini-map.component';\nimport { MiniMapService } from 'src/app/services/mini-map.service';\n\nconst routes: Routes = [\n  {path: '', component: InputComponent, children: [\n    {path: '', component: BookOptionsComponent, canActivate: [AuthGuardService]},\n    {path: 'trips/map', component: MiniMapComponent, canActivate: [AuthGuardService]},\n    {path: 'trip/options', component: TripPlannerOptionsComponent, canActivate: [AuthGuardService]},\n    {path: 'trips/:index', component: TripDetailsComponent, canActivate: [AuthGuardService]},\n    {path: 'trips', component: TripListComponent, canActivate: [AuthGuardService]},\n  ], canActivate: [AuthGuardService]}, \n  {path: 'places/start', component: PlacesComponent, data: { type: 'start'}, canActivate: [AuthGuardService], children: [\n      {path: '', component: PlacesSliderComponent}, \n      {path: 'map', component: PlacesMapComponent, canActivate: [MiniMapService]}\n    ]\n  },\n  {path: 'places/dest', component: PlacesComponent, data: { type: 'dest'}, canActivate: [AuthGuardService],\n    children: [\n      {path: '', component: PlacesSliderComponent}, \n      {path: 'map', component: PlacesMapComponent, canActivate: [MiniMapService]}\n    ],\n  },\n  {path: 'booking/qr/:id', component: QrComponent, canActivate: [AuthGuardService]},\n  {path: 'bookings', component: BookingsComponent, canActivate: [AuthGuardService]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoutesRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Saved.html":{"url":"interfaces/Saved.html","title":"interface - Saved","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Saved\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/saved/components/saved-slider/saved-slider.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            routes\n                                        \n                                \n                                \n                                        \n                                            spinner\n                                        \n                                \n                                \n                                        \n                                            stops\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     IRoute[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IRoute[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spinner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spinner:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stops\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stops:     IStop[] | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStop[] | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getSavedInfo, spinner } from 'src/app/state/Selectors/appState.selectors';\n\ninterface Saved{\n  routes: IRoute[] | undefined,\n  stops: IStop[] | undefined,\n  spinner: boolean;\n}\n\n@Component({\n  selector: 'saved-slider',\n  templateUrl: './saved-slider.component.html',\n  styleUrls: ['./saved-slider.component.css']\n})\nexport class SavedSliderComponent implements OnInit {\n\n  public vm$!: Observable;\n  public value: string = '';\n\n  constructor(private store: Store, private router: Router) { }\n\n  ngOnInit(): void {\n    this.vm$ = combineLatest([\n      this.store.select(spinner),\n      this.store.select(getSavedInfo)\n    ]).pipe(map(([spinner, info]) => ({spinner, ...info!})));\n  }\n\n  public filter(value: string){\n    this.value = value;\n  }\n\n  public onStopSelect(code: string[]){\n    this.navigate(['stops', code[0]], 'stop_data_saved');\n  }\n\n  public onRouteSelect(code: string[]){\n    this.navigate(['lines', code[1], 'route', code[0]], 'route_data');\n  }\n\n  private navigate(link: string[], module: string){\n    this.router.navigate([{ \n      outlets: { sidebar: link }\n    }], {queryParams: {module: module}});\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SavedModule.html":{"url":"modules/SavedModule.html","title":"module - SavedModule","body":"\n                   \n\n\n\n\n    Modules\n    SavedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SavedModule\n\n\n\ncluster_SavedModule_imports\n\n\n\ncluster_SavedModule_providers\n\n\n\ncluster_SavedModule_declarations\n\n\n\n\nSavedSliderComponent\n\nSavedSliderComponent\n\n\n\nSavedModule\n\nSavedModule\n\nSavedModule -->\n\nSavedSliderComponent->SavedModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nSavedModule -->\n\nAuthModule->SavedModule\n\n\n\n\n\nSavedRoutingModule\n\nSavedRoutingModule\n\nSavedModule -->\n\nSavedRoutingModule->SavedModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSavedModule -->\n\nSharedModule->SavedModule\n\n\n\n\n\nDataService\n\nDataService\n\nSavedModule -->\n\nDataService->SavedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/saved/saved.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SavedSliderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SavedRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SavedRoutingModule } from './saved-routing.module';\nimport { SavedSliderComponent } from './components/saved-slider/saved-slider.component';\nimport { DataService } from 'src/app/services/data.service';\nimport { SharedModule } from '../shared-module/shared-module.module';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { AuthModule } from '../auth/auth.module';\n\n\n@NgModule({\n  declarations: [SavedSliderComponent],\n  imports: [\n    CommonModule,\n    SavedRoutingModule,\n    SharedModule,\n    MatTabsModule,\n    AuthModule\n  ], \n  providers: [DataService]\n})\nexport class SavedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SavedRoutingModule.html":{"url":"modules/SavedRoutingModule.html","title":"module - SavedRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SavedRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/saved/saved-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SavedSliderComponent } from './components/saved-slider/saved-slider.component';\nimport { AuthGuardService } from '../../services/auth-guard.service';\n\nconst routes: Routes = [\n  {path: '', component: SavedSliderComponent, canActivate: [AuthGuardService]}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SavedRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SavedSliderComponent.html":{"url":"components/SavedSliderComponent.html","title":"component - SavedSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SavedSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/saved/components/saved-slider/saved-slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                saved-slider\n            \n\n            \n                styleUrls\n                ./saved-slider.component.css\n            \n\n\n\n            \n                templateUrl\n                ./saved-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Private\n                                navigate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onRouteSelect\n                            \n                            \n                                    Public\n                                onStopSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        navigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(link: string[], module: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    module\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onRouteSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onRouteSelect(code: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onStopSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onStopSelect(code: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/saved/components/saved-slider/saved-slider.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getSavedInfo, spinner } from 'src/app/state/Selectors/appState.selectors';\n\ninterface Saved{\n  routes: IRoute[] | undefined,\n  stops: IStop[] | undefined,\n  spinner: boolean;\n}\n\n@Component({\n  selector: 'saved-slider',\n  templateUrl: './saved-slider.component.html',\n  styleUrls: ['./saved-slider.component.css']\n})\nexport class SavedSliderComponent implements OnInit {\n\n  public vm$!: Observable;\n  public value: string = '';\n\n  constructor(private store: Store, private router: Router) { }\n\n  ngOnInit(): void {\n    this.vm$ = combineLatest([\n      this.store.select(spinner),\n      this.store.select(getSavedInfo)\n    ]).pipe(map(([spinner, info]) => ({spinner, ...info!})));\n  }\n\n  public filter(value: string){\n    this.value = value;\n  }\n\n  public onStopSelect(code: string[]){\n    this.navigate(['stops', code[0]], 'stop_data_saved');\n  }\n\n  public onRouteSelect(code: string[]){\n    this.navigate(['lines', code[1], 'route', code[0]], 'route_data');\n  }\n\n  private navigate(link: string[], module: string){\n    this.router.navigate([{ \n      outlets: { sidebar: link }\n    }], {queryParams: {module: module}});\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n\n    \n    \n\n    \n        \n            \n                \n                     0; else noSavedStops\">\n                            \n                        \n                    \n                \n            \n            \n                \n                     0; else noSavedRoutes\">\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n                           \n\n\n\n    \n                           \n\n\n    \n\n    \n                \n                    ./saved-slider.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n::ng-deep .mat-ink-bar{\n    background-color: #1f63d4 !important;\n}\n\n::ng-deep .mat-tab-label, \n::ng-deep .mat-tab-label-active{\n    min-width: 0 !important;\n    padding: 3px !important;\n    margin: 3px !important;\n    color: #373a50 !important;\n    font-weight: 700 !important;\n}\n\n.slider-wrapper{\n    width: 100%;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n    height: calc(100vh - 108px);\n    position: relative;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 190px);\n    padding-right: 3px;\n    margin-top: 5px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                     0; else noSavedStops\">                                                                                                                                                     0; else noSavedRoutes\">                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SavedSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScheduleState.html":{"url":"interfaces/ScheduleState.html","title":"interface - ScheduleState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScheduleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/schedule.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ISchedule{\n    id: number;\n    day: number;\n    routeCode: string;\n    stopCode: string;\n    line: string;\n    tripTime: string;\n    tripTimeHour: number;\n    tripTimeMinute: number;\n}\n\nexport interface IScheduleDetails{\n    schedules: ISchedule[];\n    routeCode: string;\n}\n\nexport interface ScheduleState extends EntityState{};\n\nexport const scheduleStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (schedule)=> schedule.routeCode\n});\n\nexport const inititialSchdeduleState: ScheduleState = scheduleStateAdapter.getInitialState();\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ScheduleState-1.html":{"url":"interfaces/ScheduleState-1.html","title":"interface - ScheduleState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ScheduleState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/schedule.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n\n\n\n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface ISchedule{\n    id: number;\n    day: number;\n    routeCode: string;\n    stopCode: string;\n    line: string;\n    tripTime: string;\n    tripTimeHour: number;\n    tripTimeMinute: number;\n}\n\nexport interface IScheduleDetails{\n    schedules: ISchedule[];\n    routeCode: string;\n}\n\nexport interface ScheduleState extends EntityState{};\n\nexport const scheduleStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (schedule)=> schedule.routeCode\n});\n\nexport const inititialSchdeduleState: ScheduleState = scheduleStateAdapter.getInitialState();\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectComponent.html":{"url":"components/SelectComponent.html","title":"component - SelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/select/select.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                select-component\n            \n\n            \n                styleUrls\n                ./select.component.css\n            \n\n\n\n            \n                templateUrl\n                ./select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                daysEng\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                module\n                            \n                            \n                                payload\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dataShare: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/select/select.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataShare\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        module\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/select/select.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        payload\n                    \n                \n                \n                    \n                        Type :         IRoute\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/select/select.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/select/select.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/select/select.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        select\n                        \n                    \n                \n            \n            \n                \n                    \n                    select(day: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/select/select.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    day\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        daysEng\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \n    'Thursday', 'Friday', 'Saturday'\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/select/select.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport * as api_actions from '../../../../state/Actions/api-calls.actions';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n@Component({\n  selector: 'select-component',\n  templateUrl: './select.component.html',\n  styleUrls: ['./select.component.css']\n})\nexport class SelectComponent implements OnInit {\n\n  public daysEng: string[] = [\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', \n    'Thursday', 'Friday', 'Saturday'\n  ];\n\n  @Input() public placeholder: string = '';\n  @Input() public module: string = '';\n  @Input() public payload!: IRoute;\n\n  constructor(private store: Store, private dataShare: DataShareService) { }\n\n  ngOnInit(): void {}\n\n  public select(day: number){\n    this.store.dispatch(api_actions.getSchedules({code: this.payload.code}));\n    this.dataShare.onDaySelect(day);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      {{placeholder}}\n      \n        {{day}}\n      \n    \n\n    \n\n    \n                \n                    ./select.component.css\n                \n                \n:host{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-top: 3px;\n}\n\n.select>select{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    color: #373a50 !important;\n    font-size: 14px !important;\n    width: 100%;\n    padding: 10px 10px 10px 10px;\n    cursor: pointer;\n    border: none;\n    outline: none;\n}\n\nselect>option{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%) !important;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{placeholder}}              {{day}}          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nBusEntityComponent\n\nBusEntityComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nBusEntityComponent->SharedModule\n\n\n\n\n\nDoubleInputComponent\n\nDoubleInputComponent\n\nSharedModule -->\n\nDoubleInputComponent->SharedModule\n\n\n\n\n\nDropdownOptionComponent\n\nDropdownOptionComponent\n\nSharedModule -->\n\nDropdownOptionComponent->SharedModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nSharedModule -->\n\nFilterPipe->SharedModule\n\n\n\n\n\nMainInputComponent\n\nMainInputComponent\n\nSharedModule -->\n\nMainInputComponent->SharedModule\n\n\n\n\n\nMiniMapComponent\n\nMiniMapComponent\n\nSharedModule -->\n\nMiniMapComponent->SharedModule\n\n\n\n\n\nMultipleDropdownComponent\n\nMultipleDropdownComponent\n\nSharedModule -->\n\nMultipleDropdownComponent->SharedModule\n\n\n\n\n\nOptionComponent\n\nOptionComponent\n\nSharedModule -->\n\nOptionComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nStationEntityComponent\n\nStationEntityComponent\n\nSharedModule -->\n\nStationEntityComponent->SharedModule\n\n\n\n\n\nToasterComponent\n\nToasterComponent\n\nSharedModule -->\n\nToasterComponent->SharedModule\n\n\n\n\n\nBusEntityComponent \n\nBusEntityComponent \n\nBusEntityComponent  -->\n\nSharedModule->BusEntityComponent \n\n\n\n\n\nDoubleInputComponent \n\nDoubleInputComponent \n\nDoubleInputComponent  -->\n\nSharedModule->DoubleInputComponent \n\n\n\n\n\nDropdownOptionComponent \n\nDropdownOptionComponent \n\nDropdownOptionComponent  -->\n\nSharedModule->DropdownOptionComponent \n\n\n\n\n\nFilterPipe \n\nFilterPipe \n\nFilterPipe  -->\n\nSharedModule->FilterPipe \n\n\n\n\n\nMainInputComponent \n\nMainInputComponent \n\nMainInputComponent  -->\n\nSharedModule->MainInputComponent \n\n\n\n\n\nMiniMapComponent \n\nMiniMapComponent \n\nMiniMapComponent  -->\n\nSharedModule->MiniMapComponent \n\n\n\n\n\nMultipleDropdownComponent \n\nMultipleDropdownComponent \n\nMultipleDropdownComponent  -->\n\nSharedModule->MultipleDropdownComponent \n\n\n\n\n\nOptionComponent \n\nOptionComponent \n\nOptionComponent  -->\n\nSharedModule->OptionComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nStationEntityComponent \n\nStationEntityComponent \n\nStationEntityComponent  -->\n\nSharedModule->StationEntityComponent \n\n\n\n\n\nToasterComponent \n\nToasterComponent \n\nToasterComponent  -->\n\nSharedModule->ToasterComponent \n\n\n\n\n\nMapModule\n\nMapModule\n\nSharedModule -->\n\nMapModule->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared-module/shared-module.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BusEntityComponent\n                        \n                        \n                            DoubleInputComponent\n                        \n                        \n                            DropdownOptionComponent\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            MainInputComponent\n                        \n                        \n                            MiniMapComponent\n                        \n                        \n                            MultipleDropdownComponent\n                        \n                        \n                            OptionComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            StationEntityComponent\n                        \n                        \n                            ToasterComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BusEntityComponent\n                        \n                        \n                            DoubleInputComponent\n                        \n                        \n                            DropdownOptionComponent\n                        \n                        \n                            FilterPipe\n                        \n                        \n                            MainInputComponent\n                        \n                        \n                            MiniMapComponent\n                        \n                        \n                            MultipleDropdownComponent\n                        \n                        \n                            OptionComponent\n                        \n                        \n                            SpinnerComponent\n                        \n                        \n                            StationEntityComponent\n                        \n                        \n                            ToasterComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OptionComponent } from './components/option/option.component';\nimport { RouterModule } from '@angular/router';\nimport { BusEntityComponent } from './components/bus-entity/bus-entity.component';\nimport { StationEntityComponent } from './components/station-entity/station-entity.component';\nimport { MainInputComponent } from './components/main-input/main-input.component';\nimport { FormsModule } from \"@angular/forms\";\nimport { MultipleDropdownComponent } from './components/multiple-dropdown/multiple-dropdown.component';\nimport { DropdownOptionComponent } from './components/dropdown-option/dropdown-option.component';\nimport { DoubleInputComponent } from './components/double-input/double-input.component';\nimport { SpinnerComponent } from './components/spinner/spinner.component';\nimport { ToasterComponent } from 'src/app/modules/shared-module/components/toaster/toaster.component';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatIconModule} from '@angular/material/icon'\nimport { MiniMapComponent } from './components/mini-map/mini-map.component';\nimport { MapModule } from '../map/map.module';\nimport { FilterPipe } from 'src/app/pipes/filterPipe';\n\n@NgModule({\n  declarations: [\n    OptionComponent, \n    BusEntityComponent, \n    StationEntityComponent, \n    MainInputComponent,\n    MultipleDropdownComponent,\n    DropdownOptionComponent,\n    DoubleInputComponent,\n    SpinnerComponent,\n    ToasterComponent,\n    MiniMapComponent,\n    FilterPipe\n  ],\n  imports: [\n    CommonModule, \n    RouterModule, \n    FormsModule,\n    MatSnackBarModule,\n    MatMenuModule,\n    MatIconModule,\n    MapModule\n  ],\n  exports: [\n    OptionComponent, \n    BusEntityComponent, \n    StationEntityComponent, \n    MainInputComponent,\n    MultipleDropdownComponent,\n    DropdownOptionComponent,\n    DoubleInputComponent,\n    SpinnerComponent,\n    ToasterComponent,\n    MiniMapComponent,\n    FilterPipe\n  ],\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SideNavComponent.html":{"url":"components/SideNavComponent.html","title":"component - SideNavComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SideNavComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sidebar/components/side-nav/side-nav.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                side-nav\n            \n\n            \n                styleUrls\n                ./side-nav.component.css\n            \n\n\n\n            \n                templateUrl\n                ./side-nav.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragPosition\n                            \n                            \n                                    Private\n                                el\n                            \n                            \n                                    Public\n                                flag\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                    Public\n                                wrapper\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragEnd\n                            \n                            \n                                    Public\n                                home\n                            \n                            \n                                    Public\n                                logInOut\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onFocusOut\n                            \n                            \n                                    Public\n                                prepareOutlet\n                            \n                            \n                                    Private\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                                \n                                    authenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(msg: DataShareService, router: Router, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize($e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:71\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragEnd\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragEnd($e: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        home\n                        \n                    \n                \n            \n            \n                \n                    \n                    home()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logInOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logInOut(type: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                    \n                    logout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onFocusOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    onFocusOut($e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        prepareOutlet\n                        \n                    \n                \n            \n            \n                \n                    \n                    prepareOutlet(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dragPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {x: 0, y: 0}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wrapper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('wrapper')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n                \n                    \n                        getuser()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:62\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authenticated\n                    \n                \n\n                \n                    \n                        getauthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/sidebar/components/side-nav/side-nav.component.ts:66\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { OnDestroy } from '@angular/core';\nimport { AfterViewInit, Component, HostListener, OnInit, ViewChild } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { slideAnimation } from 'src/app/route-animations';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n\n@Component({\n  selector: 'side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.css'],\n  animations: [slideAnimation]\n})\nexport class SideNavComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @ViewChild('wrapper') public wrapper: any;\n\n  public flag: boolean = false;\n  public dragPosition: any = {x: 0, y: 0};\n  private el: any;\n  private sub!: Subscription;\n\n  constructor(\n    private msg: DataShareService, \n    private router: Router,\n    private auth: AuthService,\n  ) { }\n\n  ngOnInit(): void {\n    this.msg.toggleObserver.subscribe(v => this.toggle());\n  }\n\n  ngAfterViewInit(): void {\n    this.el = this.wrapper.nativeElement;\n  }\n\n  ngOnDestroy(): void{\n    this.sub.unsubscribe();\n  }\n\n  public prepareOutlet(outlet: RouterOutlet){\n    return outlet && outlet.activatedRouteData;\n  }\n\n  public logInOut(type: string){\n    this.toggle();\n    this.router.navigate([{ outlets: { sidebar: ['auth', type] }}]);\n  }\n\n  public logout(){\n    this.auth.removeUserInfo();\n    this.home();\n  }\n\n  public home(){\n    this.toggle();\n    this.router.navigate(['']);\n  }\n\n  public get user(){\n    return this.auth.getUserInfo();\n  }\n\n  public get authenticated(){\n    return this.auth.isAuthenticated();\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public dragEnd($e: any){\n\n    if($e.type == 'resize'){\n      this.dragPosition = {x: 0, y: 0};\n      setTimeout(() => this.flag = false, 100);\n      return;\n    }\n\n    const width: number = Math.floor(this.el.offsetWidth / 4);\n    const distX: number = Math.abs($e.distance.x);\n\n    if(distX  this.flag = false, 100);\n    }else if(distX > width && this.dragPosition.x != 0){\n      this.dragPosition = {x: 0, y: 0};\n      setTimeout(() => this.flag = false, 100);\n    }else if(distX > width && this.dragPosition.x == 0){\n      this.dragPosition = {x: width * 2, y: 0};\n    }else if(distX  this.flag = false, 100);\n    }\n\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n            City Bus\n        \n        \n            \n            Log In\n        \n        \n            \n            Register\n        \n        \n            \n            {{user.name}}\n        \n        \n            \n            Home\n        \n        \n            \n            Log out\n        \n        \n            \n            Settings\n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./side-nav.component.css\n                \n                :host{\n    width: 25vw;\n    min-width: 342px;\n    box-sizing: border-box;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background: rgb(195,197,213);\n    background: linear-gradient(90deg, rgba(195,197,213,1) 0%, rgba(239,243,248,1) 100%);\n    font-family: Roboto, \"Helvetica Neue\", sans-serif;\n    overflow: auto;\n    position: relative;\n}\n\n.slider-wrapper{\n    width: 30vw;\n    left: -15vw;\n    position: absolute;\n}\n\n.bar{\n    width: 15vw;\n    transition-duration: 100ms;\n    height: 100vh;\n    background-color: #1f2224;\n    z-index: 3;\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    color: rgba(255, 255, 255, 0.50);\n    padding-top: 20px;\n}\n\n.z{\n    z-index: -1;\n}\n\n#overlay {\n    position: fixed; /* Sit on top of the page content */\n    display: none; /* Hidden by default */\n    width: 100%; /* Full width (cover the whole page) */\n    height: 100%; /* Full height (cover the whole page) */\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0,0,0,0.5); /* Black background with opacity */\n    z-index: 2; /* Specify a stack order in case you're using a different order for other elements */\n    cursor: pointer; /* Add a pointer on hover */\n  }\n\n.block{\n    display: block !important;\n}\n\n.header, .item{\n    font-family: 'Varela Round', sans-serif;\n    font-size: 18px;\n    font-weight: bold;\n    width: 100%;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.10);\n    padding: 15px;\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    transition-duration: 300ms;\n}\n\nspan{\n    display: block;\n}\n\n.header{\n    padding-bottom: 30px;\n    font-size: 22px;\n}\n\n.header:hover{\n    cursor: pointer;\n    color: rgb(214, 214, 214) !important;\n}\n\n.item:hover{\n    cursor: pointer;\n    color: rgb(214, 214, 214) !important;\n}\n\n.fa-user-circle{\n    font-size: 20px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n    .slider-wrapper{\n        width: 60vw;\n        left: -30vw;\n        position: absolute;\n    }\n    .bar{\n        width: 30vw;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n    .slider-wrapper{\n        width: 60vw;\n        left: -30vw;\n        position: absolute;\n    }\n    .bar{\n        width: 30vw;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n    .slider-wrapper{\n        width: 70vw;\n        left: -35vw;\n        position: absolute;\n    }\n    .bar{\n        width: 35vw;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n    .slider-wrapper{\n        width: 100vw;\n        left: -50vw;\n        position: absolute;\n    }\n    .bar{\n        width: 50vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    City Bus                                        Log In                                        Register                                        {{user.name}}                                        Home                                        Log out                                        Settings            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SideNavComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarModule.html":{"url":"modules/SidebarModule.html","title":"module - SidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_SidebarModule_imports\n\n\n\ncluster_SidebarModule_providers\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\n\n\nSidebarModule\n\nSidebarModule\n\nSidebarModule -->\n\nSideNavComponent->SidebarModule\n\n\n\n\n\nSidebarOptionsComponent\n\nSidebarOptionsComponent\n\nSidebarModule -->\n\nSidebarOptionsComponent->SidebarModule\n\n\n\n\n\nSideNavComponent \n\nSideNavComponent \n\nSideNavComponent  -->\n\nSidebarModule->SideNavComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSidebarModule -->\n\nSharedModule->SidebarModule\n\n\n\n\n\nSidebarRoutingModule\n\nSidebarRoutingModule\n\nSidebarModule -->\n\nSidebarRoutingModule->SidebarModule\n\n\n\n\n\nDataShareService\n\nDataShareService\n\nSidebarModule -->\n\nDataShareService->SidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sidebar/sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SideNavComponent\n                        \n                        \n                            SidebarOptionsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            DataShareService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SidebarRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SideNavComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SideNavComponent } from './components/side-nav/side-nav.component';\nimport { FormsModule } from '@angular/forms';\nimport { SidebarOptionsComponent } from './components/sidebar-options/sidebar-options.component';\nimport { RouterModule } from '@angular/router';\nimport { SidebarRoutingModule } from './sidebar-routing.mudule';\nimport { SharedModule } from '../shared-module/shared-module.module';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport { MiniMapService } from 'src/app/services/mini-map.service';\n\n@NgModule({\n  declarations: [\n    SideNavComponent,\n    SidebarOptionsComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    RouterModule,\n    SidebarRoutingModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n  ],\n  exports: [SideNavComponent],\n  providers: [DataShareService, MiniMapService]\n})\nexport class SidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SidebarOptionsComponent.html":{"url":"components/SidebarOptionsComponent.html","title":"component - SidebarOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SidebarOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/sidebar/components/sidebar-options/sidebar-options.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sidebar-options\n            \n\n            \n                styleUrls\n                ./sidebar-options.component.css\n            \n\n\n\n            \n                templateUrl\n                ./sidebar-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, msg: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/sidebar/components/sidebar-options/sidebar-options.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/sidebar-options/sidebar-options.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelect(data: string[] | string[][])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/sidebar-options/sidebar-options.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string[] | string[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggle\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/sidebar/components/sidebar-options/sidebar-options.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {text: 'Lines', icon: 'route', desc: 'Line information', link: ['lines', 'lines_load']},\n    {text: 'Stops', icon: 'where_to_vote', desc: 'Stop information', link: ['stops', 'stops_module']},\n    {text: 'Book a seat', icon: 'directions', desc: 'Find and book seats', link: ['routes', 'trip_module']},\n    {text: 'Bookings', icon: 'departure_board', desc: 'Booked trips', link: [[ 'routes', 'bookings'], 'trip_options']},\n    {text: 'Saved information', icon: 'file_present', desc: 'Saved lines, stops...', link: ['saved', 'saved_info']},\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/sidebar/components/sidebar-options/sidebar-options.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n@Component({\n  selector: 'sidebar-options',\n  templateUrl: './sidebar-options.component.html',\n  styleUrls: ['./sidebar-options.component.css']\n})\nexport class SidebarOptionsComponent implements OnInit {\n\n  public options: any[] = [\n    {text: 'Lines', icon: 'route', desc: 'Line information', link: ['lines', 'lines_load']},\n    {text: 'Stops', icon: 'where_to_vote', desc: 'Stop information', link: ['stops', 'stops_module']},\n    {text: 'Book a seat', icon: 'directions', desc: 'Find and book seats', link: ['routes', 'trip_module']},\n    {text: 'Bookings', icon: 'departure_board', desc: 'Booked trips', link: [[ 'routes', 'bookings'], 'trip_options']},\n    {text: 'Saved information', icon: 'file_present', desc: 'Saved lines, stops...', link: ['saved', 'saved_info']},\n  ];\n\n  constructor(private router: Router, private msg: DataShareService) { }\n\n  ngOnInit(): void {\n    this.msg.clearLayers();\n  }\n\n  public onSelect(data: string[] | string[][]){\n    this.router.navigate([{ outlets: { sidebar: data[0] }}], {queryParams: {module: data[1]}});\n  }\n\n  public toggle(){\n    this.msg.onToggle();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n        Go Bus\n    \n    \n\n\n\n    \n    \n\n\n\n    \n\n    \n                \n                    ./sidebar-options.component.css\n                \n                :host{\n    height: 100%;\n    width: 100%;\n    padding: 0 20px 0 20px;\n}\n\n.logo-section{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 100px;\n    width: 100%;\n    font-size: 30px;\n}\n\n.logo-content{\n    color: #373a50;;\n    font-weight: 600;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\ni{\n    margin-right: 13px;\n}\n\n.fa-bars{\n    margin-left: 5px;\n}\n\n@media screen and (max-width: 600px) {\n    \n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Go Bus                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SidebarOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SidebarRoutingModule.html":{"url":"modules/SidebarRoutingModule.html","title":"module - SidebarRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SidebarRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/sidebar/sidebar-routing.mudule.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        \nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardService } from '../../services/auth-guard.service';\nimport { SidebarOptionsComponent } from './components/sidebar-options/sidebar-options.component';\n\nconst routes: Routes = [\n  {path: '', component: SidebarOptionsComponent, outlet: 'sidebar'},\n  {path: 'stops', loadChildren: () => \"import('../stops/stops.module').then(m => m.StopsModule)\", outlet: 'sidebar', data: {animation: 'isRight'}},\n  {path: 'lines', loadChildren: () => \"import('../lines/lines.module').then(m => m.LinesModule)\", outlet: 'sidebar', data: {animation: 'isRight'}},\n  {path: 'routes', loadChildren: () => \"import('../planner/planner.module').then(m => m.PlannerModule)\", outlet: 'sidebar', data: {animation: 'isRight'}},\n  {path: 'auth', loadChildren: () => \"import('../auth/auth.module').then(m => m.AuthModule)\", outlet: 'sidebar', data: {animation: 'isRight'}},\n  {path: 'saved', loadChildren: () => \"import('../saved/saved.module').then(m => m.SavedModule)\", outlet: 'sidebar', data: {animation: 'isRight'}},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SidebarRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderComponent.html":{"url":"components/SliderComponent.html","title":"component - SliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/slider/slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                slider-component\n            \n\n            \n                styleUrls\n                ./slider.component.css\n            \n\n\n\n            \n                templateUrl\n                ./slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                selectedTab\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                slide\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(localStore: LiveDataStore, msg: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/slider/slider.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStore\n                                                  \n                                                        \n                                                                        LiveDataStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/slider/slider.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        slide\n                        \n                    \n                \n            \n            \n                \n                    \n                    slide(tab: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/slider/slider.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/slider/slider.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/slider/slider.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LiveDataStore, LiveState } from '../../state/live.data.store';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\nimport { ILine } from 'src/app/state/Entities/line.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Store } from '@ngrx/store';\nimport { currentLine, getActiveStop } from 'src/app/state/Selectors/appState.selectors';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { DataShareService } from 'src/app/services/data-share.service';\n\n@Component({\n  selector: 'slider-component',\n  templateUrl: './slider.component.html',\n  styleUrls: ['./slider.component.css'],\n})\nexport class SliderComponent implements OnInit {\n\n  public selectedTab: number = 0;\n  public vm$!: Observable;\n  \n  constructor(\n    private localStore: LiveDataStore, \n    private msg: DataShareService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.vm$ = combineLatest([\n      this.localStore.getBusLocations(),\n      this.localStore.getStopArrivals()\n    ]).pipe(\n      map(([buses, arrivals]) => ({buses, arrivals})), \n      tap(({buses, arrivals}) => this.msg.sendBusStatus(buses))\n    );\n\n  }\n\n  public slide(tab: number){\n    this.selectedTab = tab;\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./slider.component.css\n                \n                \n:host{\n    width: 100%;\n    padding: 0 20px 0 20px;\n}\n\n.slider-container{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 0 10px 0 10px;\n}\n\n.option-container{\n    width: 100%;\n    text-align: center;\n    cursor: pointer;\n    padding-bottom: 3px;\n}\n\n.option-checked{\n    border-bottom: 2px solid #1f63d4;\n}\n\n.option-text{\n    color: #373a50;\n    font-weight: 600;\n    font-size: 14px;\n}\n\n::ng-deep .mat-ink-bar{\n    background-color: #1f63d4 !important;\n}\n\n::ng-deep .mat-tab-label, \n::ng-deep .mat-tab-label-active{\n    min-width: 0 !important;\n    padding: 3px !important;\n    margin: 3px !important;\n    color: #373a50 !important;\n    font-weight: 700 !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketIOService.html":{"url":"injectables/SocketIOService.html","title":"injectable - SocketIOService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocketIOService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/socket-io.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/socket-io.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Socket\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/socket-io.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { io, Socket } from 'socket.io-client';\nimport { AppState } from '../state/Reducers/api-reducer';\nimport * as select_actions from '../state/Actions/select.actions';\n\ninterface msg{\n  value: number,\n  trip_ids: number[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketIOService {\n\n  private socket!: Socket;\n\n  constructor(private store: Store) { \n    this.socket = io('http://localhost:3000');\n\n    this.socket.on('accepted', (data)=>{\n      console.log(data.msg);\n    });\n\n    this.socket.on('update', (data: msg) => {\n      this.store.dispatch(select_actions.updateOccupancy({\n        value: data.value, trip_ids: data.trip_ids\n      }));\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerComponent.html":{"url":"components/SpinnerComponent.html","title":"component - SpinnerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/spinner/spinner.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spinner-component\n            \n\n            \n                styleUrls\n                ./spinner.component.css\n            \n\n\n\n            \n                templateUrl\n                ./spinner.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/spinner/spinner.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/spinner/spinner.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'spinner-component',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n    \n    \n\n\n\n    \n\n    \n                \n                    ./spinner.component.css\n                \n                \n:host {\n    position: absolute;\n    display: grid;\n    place-items: center;\n    width: 100%; \n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0,0,0,0.23);\n    z-index: 5;\n    cursor: pointer;\n}\n\n.lds-ring {\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 90px;\n}\n\n.lds-ring div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 50px;\n    height: 50px;\n    margin: 8px;\n    border: 2px solid #fff;\n    border-radius: 50%;\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: #fff transparent transparent transparent;\n}\n\n.lds-ring div:nth-child(1) {\n    animation-delay: -0.45s;\n}\n\n.lds-ring div:nth-child(2) {\n    animation-delay: -0.3s;\n}\n\n.lds-ring div:nth-child(3) {\n    animation-delay: -0.15s;\n}\n\n@keyframes lds-ring {\n    0% {\n         transform: rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StationEntityComponent.html":{"url":"components/StationEntityComponent.html","title":"component - StationEntityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StationEntityComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/station-entity/station-entity.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                station-entity\n            \n\n            \n                styleUrls\n                ./station-entity.component.css\n            \n\n\n\n            \n                templateUrl\n                ./station-entity.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                stop$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flyToStop\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                swapTab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                arrivals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, dataShare: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dataShare\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        arrivals\n                    \n                \n                \n                    \n                        Type :     IArrival[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        flyToStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    flyToStop(point: IStop)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                                IStop\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        swapTab\n                        \n                    \n                \n            \n            \n                \n                    \n                    swapTab()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stop$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared-module/components/station-entity/station-entity.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport * as navigation from'../../../../state/Actions/navigation.actions';\nimport * as actions from '../../../../state/Actions/api-calls.actions';\nimport { getActiveStop } from 'src/app/state/Selectors/appState.selectors';\nimport { LiveDataStore } from 'src/app/modules/lines/state/live.data.store';\nimport { IArrival } from 'src/app/state/Entities/live.data';\n\n@Component({\n  selector: 'station-entity',\n  templateUrl: './station-entity.component.html',\n  styleUrls: ['./station-entity.component.css'],\n})\nexport class StationEntityComponent implements OnInit {\n\n  public stop$!: Observable;\n\n  @Input() public arrivals!: IArrival[];\n  @Output() public onClick = new EventEmitter();\n\n  constructor(\n    private store: Store, \n    private dataShare: DataShareService,\n  ) { }\n\n  ngOnInit(): void {\n    this.stop$ = this.store.select(getActiveStop);\n  }\n\n  public swapTab(){\n    this.onClick.emit(0);\n  }\n\n  public flyToStop(point: IStop){\n    this.dataShare.fly([point.latitude, point.longitude]);\n  }\n  \n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                    {{stop.desc}}({{stop.code}})\n                \n                \n                    \n                        stairs\n                    \n                \n            \n             0 else noBus\">\n                \n                    Άφιξη: \n                    \n                        \n                            \n                                {{arrival.arrivalMins}}:{{arrival.arrivalSeconds}}', \n                            \n                            \n                                {{arrival.arrivalMins}}:{{arrival.arrivalSeconds}}'\n                            \n                        \n                    \n                \n                \n                    Αναχώρηση: \n                    \n                        \n                            \n                                {{arrival.departureMins}}:{{arrival.departureSeconds}}', \n                            \n                            \n                                {{arrival.departureMins}}:{{arrival.departureSeconds}}'\n                            \n                        \n                    \n                \n                \n                    Γραμμή: \n                    {{arrivals[0].lineCode}}\n                \n            \n        \n    \n\n\n\n    \n        \n            \n                No station selected\n                Click to select\n            \n        \n    \n  \n\n\n    \n        No incoming bus within 20'\n        Click to see schedule\n    \n\n\n    \n\n    \n                \n                    ./station-entity.component.css\n                \n                \n:host{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n}\n\n.entity-wrapper{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    margin-top: 3px;\n    width: 100%;\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n}\n\n.arrival-list{\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n}\n\n.text-content{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.description{\n    font-size: 14px;\n    color: #8190a4;\n}\n\n.option-text{\n    font-weight: 600;\n    color: #2e3e51;\n}\n\n.fa-map-marker-alt{\n    font-size: 17px;\n}\n\n.entity-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 3px;\n    color: #545f6d;\n    font-size: 14px;\n    padding: 17px 20px 17px 20px;\n    cursor: pointer;\n    width: 100%;\n}\n\n.entity-type{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    gap: 10px;\n    width: 100%;\n}\n\n.icons{\n    margin-top: -5px;\n}\n\n.entity-type>i{\n    padding-top: 2px;\n}\n\n.center{\n    align-self: center !important;\n    justify-self: center !important;\n}\n\n.icon{\n    font-size: 14px;\n}\n\n.bold{\n    color: #2e3e51;\n    font-size: 15px;\n}\n\n.text-content-no-incoming{\n    display: flex;\n    flex-direction: column;\n}\n\n.stop-description{\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n}\n\n.booked{\n    color: #2e3e51;\n}\n\n.unbooked{\n    color: #8190a4;\n}\n\n.malakas{\n    color: #2e3e51;\n    font-weight: bold;\n    font-size: 14px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                {{stop.desc}}({{stop.code}})                                                                            stairs                                                             0 else noBus\">                                    Άφιξη:                                                                                                         {{arrival.arrivalMins}}:{{arrival.arrivalSeconds}}\\',                                                                                         {{arrival.arrivalMins}}:{{arrival.arrivalSeconds}}\\'                                                                                                                            Αναχώρηση:                                                                                                         {{arrival.departureMins}}:{{arrival.departureSeconds}}\\',                                                                                         {{arrival.departureMins}}:{{arrival.departureSeconds}}\\'                                                                                                                            Γραμμή:                     {{arrivals[0].lineCode}}                                                                                No station selected                Click to select                                      No incoming bus within 20\\'        Click to see schedule    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StationEntityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StationListComponent.html":{"url":"components/StationListComponent.html","title":"component - StationListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StationListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/lines/components/station-list/station-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                station-list-component\n            \n\n            \n                styleUrls\n                ./station-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./station-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                currentRoute$\n                            \n                            \n                                    Public\n                                currentRouteStops$\n                            \n                            \n                                    Private\n                                el\n                            \n                            \n                                    Private\n                                scrollPosition\n                            \n                            \n                                    Public\n                                selectedDay\n                            \n                            \n                                    Public\n                                stationList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onScroll\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/lines/components/station-list/station-list.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/station-list/station-list.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/station-list/station-list.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/station-list/station-list.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onScroll\n                        \n                    \n                \n            \n            \n                \n                    \n                    onScroll($e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/station-list/station-list.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelect(tab: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/lines/components/station-list/station-list.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tab\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentRoute$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentRouteStops$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        el\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        scrollPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stationList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('stationList')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/lines/components/station-list/station-list.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, Component, EventEmitter, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { currentRoute, getRouteStops } from 'src/app/state/Selectors/appState.selectors';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\n\n@Component({\n  selector: 'station-list-component',\n  templateUrl: './station-list.component.html',\n  styleUrls: ['./station-list.component.css'],\n})\nexport class StationListComponent implements OnInit, AfterViewInit, OnChanges {\n\n  public currentRouteStops$!: Observable;\n  public currentRoute$!: Observable;\n  public selectedDay: number = 0;\n  private scrollPosition: number = 0;\n  private el: any;\n  \n  @ViewChild('stationList') public stationList: any;\n  @Output() public onClick = new EventEmitter();\n\n  constructor(private store: Store) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(!this.el) return;\n    setTimeout(() => this.el.scrollTop = this.scrollPosition, 500);\n  }\n\n  ngAfterViewInit(): void {\n    this.el = this.stationList.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.currentRouteStops$ = this.store.select(getRouteStops);\n    this.currentRoute$ = this.store.select(currentRoute);\n  }\n\n  public onScroll($e: any): void{\n    this.scrollPosition = this.el.scrollTop;\n  }\n\n  public onSelect(tab: number): void{\n    this.onClick.emit(tab);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n      \n          \n            \n            \n          \n      \n    \n\n\n\n    \n\n    \n                \n                    ./station-list.component.css\n                \n                \n:host{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.timeline-wrapper{\n    position: relative;\n    height: 100%;\n}\n\n.options-wrapper{\n    display: flex;\n    flex-direction: column;\n}\n\n.stations-list{\n    width: 100%;\n    color: rgb(89, 89, 89);\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    height: calc(100vh - 270px);\n    overflow: auto;\n}\n\n.station-line{\n    list-style: none;\n}\n\n.station-details{\n    display: flex;\n    flex-direction: column;\n    margin-top: -3px;\n    padding-left: 25px;\n    padding-bottom: 15px;\n}\n\n.station-item{\n    border-left: 2px solid #6c757d2b;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    cursor: pointer;\n    border-radius: 5px;\n}\n\ni{\n    margin-left: -7.7px;\n    font-size: 13px;\n    color: #232631;\n}\n\n.outer-container{\n    margin-left: -11px !important;\n}\n\n.last-station{\n    border: none;\n}\n\n.last-station>div{\n    padding-bottom: 0px;\n}\n\n.station-name{\n    color: #373a50;\n    font-weight: 600;\n}\n\n.arrive-time{\n    color: #868d95;\n}\n\n.fa-map-marker{\n    margin-left: -5.5px !important;\n    font-size: 15px !important;\n}\n\n.name-wrapper{\n    width: 100%;\n    text-align: left;\n    margin-left: 40px;\n}\n\n.stations-header{\n    color: #373a50;\n}\n\nul{\n    padding-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StationListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step.html":{"url":"interfaces/Step.html","title":"interface - Step","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            absoluteDirection\n                                        \n                                \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            relativeDirection\n                                        \n                                \n                                \n                                        \n                                            streetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        absoluteDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        absoluteDirection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relativeDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relativeDirection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        streetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Step-1.html":{"url":"interfaces/Step-1.html","title":"interface - Step-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Step\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            absoluteDirection\n                                        \n                                \n                                \n                                        \n                                            distance\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            relativeDirection\n                                        \n                                \n                                \n                                        \n                                            streetName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        absoluteDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        absoluteDirection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        distance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relativeDirection\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        relativeDirection:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        streetName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopDropDownComponent.html":{"url":"components/StopDropDownComponent.html","title":"component - StopDropDownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopDropDownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                stop-dropdown\n            \n\n            \n                styleUrls\n                ./stop-drop-down.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stop-drop-down.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                searchText$\n                            \n                            \n                                    Public\n                                stops$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPosition\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                    Async\n                                onLocation\n                            \n                            \n                                    Public\n                                onMap\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                    Public\n                                onSave\n                            \n                            \n                                    Public\n                                tripPlanner\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                flag\n                            \n                            \n                                saved\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, msg: DataShareService, router: Router, local: DirectionsStore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        DirectionsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        flag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        saved\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPosition\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPosition()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onClick\n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(data: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onLocation\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLocation(data: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMap(data: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onRemove\n                        \n                    \n                \n            \n            \n                \n                    \n                    onRemove(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        tripPlanner\n                        \n                    \n                \n            \n            \n                \n                    \n                    tripPlanner()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchText$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stops$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/stop-drop-down/stop-drop-down.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { DirectionsStore } from 'src/app/modules/planner/state/directions.store';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getAllStops, getSavedStops } from 'src/app/state/Selectors/appState.selectors';\nimport * as nav_actions from '../../../../state/Actions/navigation.actions';\nimport * as api_actions from '../../../../state/Actions/api-calls.actions';\n\n\n@Component({\n  selector: 'stop-dropdown',\n  templateUrl: './stop-drop-down.component.html',\n  styleUrls: ['./stop-drop-down.component.css'],\n\n})\nexport class StopDropDownComponent implements OnInit {\n\n  public stops$!: Observable;\n  public searchText$!: Observable;\n  \n  @Input() public flag: boolean = true;\n  @Input() public saved: boolean = false;\n  \n  constructor(\n    private store: Store, \n    private msg: DataShareService, \n    private router: Router, \n    private local: DirectionsStore\n  ) { }\n\n  ngOnInit(): void {\n\n    this.searchText$ = this.local.getText();\n    this.msg.selectEndpoint(this.local.state$);\n\n    if(this.saved){\n      this.stops$ = this.store.select(getSavedStops);\n    }else{\n      this.stops$ = this.store.select(getAllStops);\n    }\n    \n  }\n\n  public onSave(code: string){\n    this.store.dispatch(api_actions.saveStop({code: code}));\n  }\n\n  public onRemove(code: string){\n    this.store.dispatch(api_actions.deleteStop({code: code}));\n  }\n\n  public onClick(data: string[]){\n    this.local.updatePoint(data);\n    this.store.dispatch(nav_actions.arrowNavigation());\n  }\n\n  public async onLocation(data: string[]){\n    const {coords} = await this.getPosition();\n    this.local.updatePoint([1, 'My location', coords.latitude, coords.longitude]);\n    this.store.dispatch(nav_actions.arrowNavigation());\n  }\n\n  public tripPlanner(){\n    this.local.changeDirection('');\n    this.router.navigate([{ outlets: { sidebar: [ 'routes', 'trip', 'options'] }}], {queryParams: {module: 'trip_options'}});\n  }\n\n  public onMap(data: string[]){\n    if(window.innerWidth  this.msg.selectEndpoint(this.local.state$), 0);\n    }\n    this.local.updatePoint(data);\n  }\n\n  private getPosition(): Promise{\n    return new Promise((resolve, reject) => {\n\n      if(navigator && navigator.geolocation){\n        navigator.geolocation.getCurrentPosition(resolve);\n      }else{\n        confirm(\"Can't access device location\");\n        reject('Geolocation not supported');\n      }\n\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n    \n    \n\n    \n         0; else noStops\">\n            \n                \n                \n            \n        \n    \n    \n\n\n\n    \n\n\n    \n\n    \n                \n                    ./stop-drop-down.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 185px);\n    padding-right: 3px;\n    margin-top: 5px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                             0; else noStops\">                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopDropDownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StopInfo.html":{"url":"interfaces/StopInfo.html","title":"interface - StopInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StopInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/stops/components/stop-slider/stop-slider.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            routes\n                                        \n                                \n                                \n                                        \n                                            saved\n                                        \n                                \n                                \n                                        \n                                            stop\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        routes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        routes:     IRoute[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IRoute[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stop\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stop:     IStop | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     IStop | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { ILine } from 'src/app/state/Entities/line.entity';\nimport { IArrival } from 'src/app/state/Entities/live.data';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { StopsStore } from 'src/app/modules/stops/state/stop.store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getActiveStop, getRouteList, getStopLines, isStopSaved, spinner } from 'src/app/state/Selectors/appState.selectors';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\nimport { Router } from '@angular/router';\n\ninterface StopInfo{\n  stop: IStop | undefined;\n  routes: IRoute[];\n  saved: boolean;\n}\n\n@Component({\n  selector: 'stop-slider',\n  templateUrl: './stop-slider.component.html',\n  styleUrls: ['./stop-slider.component.css'],\n  providers: [StopsStore]\n})\nexport class StopSliderComponent implements OnInit {\n\n  public selectedTab: number = 0;\n  public departures$!: Observable;\n  public vm$!: Observable;\n\n  constructor(\n    private store: Store, \n    private local: StopsStore, \n    private msg: DataShareService,\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.vm$ = combineLatest([\n      this.store.select(isStopSaved),\n      this.store.select(getActiveStop),\n      this.store.select(getRouteList)\n    ]).pipe(map(([saved, stop, routes]) => ({saved, stop, routes})));\n\n    this.departures$ = this.local.getArrivalState().pipe(\n      tap(buses => this.msg.sendBusStatus(buses))\n    );\n\n    this.local.fetchArrivals(this.vm$.pipe(map(data => data.stop)));\n\n  }\n\n  public onSave(code: string){\n    this.store.dispatch(api_actions.saveStop({code: code}));\n  }\n\n  public onRemove(code: string){\n    this.store.dispatch(api_actions.deleteStop({code: code}));\n  }\n\n  public onNavigate(route: string[]){\n    this.router.navigate([{ outlets: { sidebar: route }}], {queryParams: {module: 'route_data'}});\n  }\n\n  public get authenticated(){\n    return this.auth.isAuthenticated();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopSliderComponent.html":{"url":"components/StopSliderComponent.html","title":"component - StopSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stops/components/stop-slider/stop-slider.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                StopsStore\n                \n            \n\n\n            \n                selector\n                stop-slider\n            \n\n            \n                styleUrls\n                ./stop-slider.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stop-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                departures$\n                            \n                            \n                                    Public\n                                selectedTab\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onNavigate\n                            \n                            \n                                    Public\n                                onRemove\n                            \n                            \n                                    Public\n                                onSave\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authenticated\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, local: StopsStore, msg: DataShareService, auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        StopsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onNavigate\n                        \n                    \n                \n            \n            \n                \n                    \n                    onNavigate(route: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onRemove\n                        \n                    \n                \n            \n            \n                \n                    \n                    onRemove(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSave\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSave(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        departures$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedTab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authenticated\n                    \n                \n\n                \n                    \n                        getauthenticated()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/stops/components/stop-slider/stop-slider.component.ts:70\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { ILine } from 'src/app/state/Entities/line.entity';\nimport { IArrival } from 'src/app/state/Entities/live.data';\nimport { IRoute } from 'src/app/state/Entities/route.entity';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { StopsStore } from 'src/app/modules/stops/state/stop.store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getActiveStop, getRouteList, getStopLines, isStopSaved, spinner } from 'src/app/state/Selectors/appState.selectors';\nimport { AuthService } from 'src/app/services/auth.service';\nimport * as api_actions from 'src/app/state/Actions/api-calls.actions';\nimport { Router } from '@angular/router';\n\ninterface StopInfo{\n  stop: IStop | undefined;\n  routes: IRoute[];\n  saved: boolean;\n}\n\n@Component({\n  selector: 'stop-slider',\n  templateUrl: './stop-slider.component.html',\n  styleUrls: ['./stop-slider.component.css'],\n  providers: [StopsStore]\n})\nexport class StopSliderComponent implements OnInit {\n\n  public selectedTab: number = 0;\n  public departures$!: Observable;\n  public vm$!: Observable;\n\n  constructor(\n    private store: Store, \n    private local: StopsStore, \n    private msg: DataShareService,\n    private auth: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.vm$ = combineLatest([\n      this.store.select(isStopSaved),\n      this.store.select(getActiveStop),\n      this.store.select(getRouteList)\n    ]).pipe(map(([saved, stop, routes]) => ({saved, stop, routes})));\n\n    this.departures$ = this.local.getArrivalState().pipe(\n      tap(buses => this.msg.sendBusStatus(buses))\n    );\n\n    this.local.fetchArrivals(this.vm$.pipe(map(data => data.stop)));\n\n  }\n\n  public onSave(code: string){\n    this.store.dispatch(api_actions.saveStop({code: code}));\n  }\n\n  public onRemove(code: string){\n    this.store.dispatch(api_actions.deleteStop({code: code}));\n  }\n\n  public onNavigate(route: string[]){\n    this.router.navigate([{ outlets: { sidebar: route }}], {queryParams: {module: 'route_data'}});\n  }\n\n  public get authenticated(){\n    return this.auth.isAuthenticated();\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n    \n        \n            \n                \n                \n            \n        \n        \n            \n                \n            \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./stop-slider.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n    display: block;\n}\n\n::ng-deep .mat-ink-bar{\n    background-color: #1f63d4 !important;\n}\n\n::ng-deep .mat-tab-label, \n::ng-deep .mat-tab-label-active{\n    min-width: 0 !important;\n    padding: 3px !important;\n    margin: 3px !important;\n    color: #373a50 !important;\n    font-weight: 700 !important;\n}\n\nmat-tab-group{\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 220px);\n    padding-right: 3px;\n    margin-top: 5px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StopState.html":{"url":"interfaces/StopState.html","title":"interface - StopState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StopState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/stop.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeStopCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeStopCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeStopCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface IStop{\n    id: string;\n    code: string;\n    latitude: string;\n    longitude: string;\n    desc: string;\n    desc_eng: string;\n    lines: string;\n    saved: boolean | undefined;\n}\n\nexport interface StopState extends EntityState{\n    activeStopCode: string,\n};\n\nexport const stopStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (stop: IStop) => stop.code\n});\n\nexport const inititialStopState: StopState = stopStateAdapter.getInitialState({\n    activeStopCode: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StopState-1.html":{"url":"interfaces/StopState-1.html","title":"interface - StopState-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StopState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/stop.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            activeStopCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        activeStopCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        activeStopCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EntityState, EntityAdapter, createEntityAdapter } from \"@ngrx/entity\";\n\nexport interface IStop{\n    id: string;\n    code: string;\n    latitude: string;\n    longitude: string;\n    desc: string;\n    desc_eng: string;\n    lines: string;\n    saved: boolean | undefined;\n}\n\nexport interface StopState extends EntityState{\n    activeStopCode: string,\n};\n\nexport const stopStateAdapter: EntityAdapter = createEntityAdapter({\n    selectId: (stop: IStop) => stop.code\n});\n\nexport const inititialStopState: StopState = stopStateAdapter.getInitialState({\n    activeStopCode: '',\n});\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopsComponent.html":{"url":"components/StopsComponent.html","title":"component - StopsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stops/components/stops/stops.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                stops-component\n            \n\n            \n                styleUrls\n                ./stops.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stops.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                stops$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filter\n                            \n                            \n                                    Public\n                                mentos\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, msg: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/components/stops/stops.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        filter\n                        \n                    \n                \n            \n            \n                \n                    \n                    filter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stops/stops.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mentos\n                        \n                    \n                \n            \n            \n                \n                    \n                    mentos(stop: IStop | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stops/stops.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stop\n                                    \n                                            IStop | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stops/stops.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelect(stopCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stops/stops.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stopCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        stops$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/components/stops/stops.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { filterStops } from 'src/app/state/Selectors/appState.selectors';\n\n@Component({\n  selector: 'stops-component',\n  templateUrl: './stops.component.html',\n  styleUrls: ['./stops.component.css']\n})\nexport class StopsComponent implements OnInit {\n\n  public stops$!: Observable;\n\n  constructor(\n    private store: Store, \n    private router: Router,\n    private msg: DataShareService\n  ) { }\n\n  ngOnInit(): void {\n    this.stops$ = this.store.select(filterStops(''));\n    this.msg.clearLayers();\n  }\n\n  public onSelect(stopCode: string){\n    this.router.navigate([{ outlets: { sidebar: [ 'stops', stopCode ] }}], {queryParams: {module: 'stop_data'}});\n  }\n\n  public filter(value: string){\n    this.stops$ = this.store.select(filterStops(value));\n  }\n\n  public mentos(stop: IStop | undefined){\n\n    if(stop && stop.lines){\n      return stop.lines.split(',');\n    }\n\n    return [];\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    Stops\n     0\">\n        \n        \n    \n\n\n    \n\n    \n                \n                    ./stops.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    font-family: \"Lexend Deca\",sans-serif;\n    align-items: center;\n}\n\n.stop-dropdown{\n    width: 100%;\n    padding: 20px 20px 20px 20px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.list{\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    max-height: calc(100vh - 245px);\n    overflow: auto;\n    padding-right: 10px;\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Stops     0\">                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StopsMap.html":{"url":"classes/StopsMap.html","title":"class - StopsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StopsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/map/mapControllers/stopMapController.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clusters\n                            \n                            \n                                    Private\n                                currentStop\n                            \n                            \n                                    Private\n                                router\n                            \n                            \n                                    Protected\n                                bus_icon\n                            \n                            \n                                    Protected\n                                bus_stop_icon\n                            \n                            \n                                    Protected\n                                center\n                            \n                            \n                                    Protected\n                                dest_marker\n                            \n                            \n                                    Protected\n                                map\n                            \n                            \n                                    Protected\n                                marker\n                            \n                            \n                                    Protected\n                                pin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addClustersToMap\n                            \n                            \n                                    Public\n                                clearLayerGroup\n                            \n                            \n                                    Public\n                                    \n                                focusOnPoint\n                            \n                            \n                                    Private\n                                selectStop\n                            \n                            \n                                    Public\n                                setCurrentStop\n                            \n                            \n                                    Protected\n                                centerMap\n                            \n                            \n                                    Protected\n                                createMarker\n                            \n                            \n                                    Protected\n                                createPolyline\n                            \n                            \n                                    Protected\n                                focusOnPath\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(map: L.Map, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/map/mapControllers/stopMapController.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        L.Map\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clusters\n                        \n                    \n                \n            \n                \n                    \n                        Default value : L.markerClusterGroup({\n        chunkedLoading: true,\n        maxClusterRadius: (mapZoom) => {\n            if (mapZoom > 16) {\n                return 20;\n            } else {\n                return 80;\n            }\n        },\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/stopMapController.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentStop\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Marker\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/stopMapController.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/stopMapController.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-icon.png', iconSize: [45, 45]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_stop_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-stop.png', iconSize: [25, 25]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [39.667341104708946, 20.854922400637918]\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dest_marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/dest-marker.png', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         L.Map\n\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/location.png', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/pin.ico', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addClustersToMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    addClustersToMap(stops: IStop[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/stopMapController.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stops\n                                    \n                                            IStop[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearLayerGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearLayerGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        focusOnPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPoint(point: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        selectStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectStop(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/stopMapController.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setCurrentStop\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentStop(point: IStop | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/stopMapController.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            IStop | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        centerMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerMap()\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(x: string, y: string, text: string, icon: L.Icon, draggable: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    y\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    icon\n                                    \n                                            L.Icon\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    draggable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(path: number[][], color?: string, text?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        focusOnPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPath(p1: L.Marker, p2: L.Marker)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p1\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    p2\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Store } from \"@ngrx/store\";\nimport { Map } from \"./map\";\nimport * as L from 'leaflet';\nimport * as select_actions from 'src/app/state/Actions/select.actions';\nimport 'leaflet.markercluster';\nimport { IStop } from \"src/app/state/Entities/stop.entity\";\nimport { AppState } from \"src/app/state/Reducers/api-reducer\";\nimport { Router } from \"@angular/router\";\n\nexport class StopsMap extends Map{\n\n    private clusters = L.markerClusterGroup({\n        chunkedLoading: true,\n        maxClusterRadius: (mapZoom) => {\n            if (mapZoom > 16) {\n                return 20;\n            } else {\n                return 80;\n            }\n        },\n    });\n    \n    private currentStop!: L.Marker;\n    private router: Router;\n\n    public constructor(map: L.Map, router: Router){\n        super(map);\n        this.clusters.addTo(this.map);\n        this.router = router;\n    }\n\n    public addClustersToMap(stops: IStop[]){\n\n        if(stops.length == 0){\n            this.clearLayerGroup();\n            return;\n        }\n\n        const markers: L.Marker[] = stops.map((stop) => {\n            const marker = this.createMarker(stop.latitude, stop.longitude, stop.desc, this.bus_stop_icon, false);\n            marker.addEventListener(\"click\", (e) => this.selectStop(stop.code));\n            return marker;\n        });\n        \n        this.clusters.addLayers(markers);\n    }\n\n    public clearLayerGroup(): void {\n        this.clusters.clearLayers();\n        this.setCurrentStop(undefined);\n    }\n\n    public setCurrentStop(point: IStop | undefined){\n\n        if(this.currentStop){\n            this.map.removeLayer(this.currentStop);\n        }\n\n        if(!point){\n            return;\n        }\n\n        this.currentStop = this.createMarker(point.latitude, point.longitude, point.desc, this.bus_stop_icon, false);\n        this.currentStop.addTo(this.map);\n        this.currentStop.openPopup();\n    }\n\n    public override focusOnPoint(point: string[]): void {\n        super.focusOnPoint(point);\n    }\n\n    private selectStop(code: string){\n        this.router.navigate([{ outlets: { sidebar: [ 'stops', code ] }}], {queryParams: {module: 'stop_data'}});\n    }\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StopsMapComponent.html":{"url":"components/StopsMapComponent.html","title":"component - StopsMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StopsMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/stops/components/stops-map/stops-map.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                StopsStore\n                \n            \n\n\n            \n                selector\n                stops-map\n            \n\n            \n                styleUrls\n                ./stops-map.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stops-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                departures$\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                init\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, localStore: StopsStore, msg: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/components/stops-map/stops-map.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStore\n                                                  \n                                                        \n                                                                        StopsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        init\n                        \n                    \n                \n            \n            \n                \n                    \n                    init(stop: IStop | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stops-map/stops-map.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    stop\n                                    \n                                            IStop | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/components/stops-map/stops-map.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        departures$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/components/stops-map/stops-map.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Map'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/components/stops-map/stops-map.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { StopsStore } from '../../state/stop.store';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { Store } from '@ngrx/store';\nimport { Observable, tap } from 'rxjs';\nimport { getActiveStop } from 'src/app/state/Selectors/appState.selectors';\nimport { IArrival } from 'src/app/state/Entities/live.data';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { IScheduleDetails } from 'src/app/state/Entities/schedule.entity';\nimport { IStop } from 'src/app/state/Entities/stop.entity';\n\n@Component({\n  selector: 'stops-map',\n  templateUrl: './stops-map.component.html',\n  styleUrls: ['./stops-map.component.css'],\n  providers: [StopsStore]\n})\nexport class StopsMapComponent implements OnInit {\n\n  public value: string = 'Map';\n  public departures$!: Observable;\n\n  constructor(\n    private store: Store,\n    private localStore: StopsStore,\n    private msg: DataShareService\n  ) { }\n\n  ngOnInit(): void {\n\n    this.localStore.fetchArrivals(\n      this.store.select(getActiveStop).pipe(tap(stop => this.init(stop)))\n    );\n\n    this.departures$ = this.localStore.getArrivalState().pipe(\n      tap(buses => this.msg.sendBusStatus(buses))\n    );\n    \n  }\n\n  private init(stop: IStop | undefined){\n    if(stop){\n      this.value = stop.desc;\n    }else{\n      this.value = 'Στάσεις'\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n    \n\n    \n        \n            \n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./stops-map.component.css\n                \n                \n:host{\n    width: 25vw;\n    min-width: 342px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100%;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    height: 100%;\n    padding: 5px 5px 5px 5px;\n}\n\n.option-list{\n    height: calc(100vh - 120px);\n}\n\n@media screen and (max-width: 800px) {\n    :host{\n        min-width: 330px;\n    }\n}\n\n@media screen and (max-width: 700px) {\n    :host{\n        min-width: 270px;\n    }\n}\n\n@media screen and (max-width: 600px) {\n    :host{\n        min-width: 250px;\n    }\n}\n\n@media screen and (max-width: 500px) {\n    :host{\n        width: 100vw;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StopsMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsModule.html":{"url":"modules/StopsModule.html","title":"module - StopsModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_imports\n\n\n\ncluster_StopsModule_declarations\n\n\n\n\nStopSliderComponent\n\nStopSliderComponent\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nStopSliderComponent->StopsModule\n\n\n\n\n\nStopsComponent\n\nStopsComponent\n\nStopsModule -->\n\nStopsComponent->StopsModule\n\n\n\n\n\nStopsMapComponent\n\nStopsMapComponent\n\nStopsModule -->\n\nStopsMapComponent->StopsModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nStopsModule -->\n\nMapModule->StopsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nStopsModule -->\n\nSharedModule->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StopSliderComponent\n                        \n                        \n                            StopsComponent\n                        \n                        \n                            StopsMapComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MapModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            StopsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StopsRoutingModule } from './stops-routing.module';\nimport { StopsComponent } from './components/stops/stops.component';\nimport { SharedModule } from '../shared-module/shared-module.module';\nimport { StopSliderComponent } from './components/stop-slider/stop-slider.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { StopsMapComponent } from './components/stops-map/stops-map.component';\nimport { MapModule } from '../map/map.module';\n\n\n\n@NgModule({\n  declarations: [StopsComponent, StopSliderComponent, StopsMapComponent],\n  imports: [\n    CommonModule,\n    MapModule,\n    StopsRoutingModule,\n    SharedModule,\n    MatTabsModule\n  ]\n})\nexport class StopsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StopsRoutingModule.html":{"url":"modules/StopsRoutingModule.html","title":"module - StopsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    StopsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/stops/stops-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { StopSliderComponent } from './components/stop-slider/stop-slider.component';\nimport { StopsComponent } from './components/stops/stops.component';\nimport { StopsMapComponent } from './components/stops-map/stops-map.component';\nimport { MiniMapService } from 'src/app/services/mini-map.service';\n\n\nconst routes: Routes = [\n  {path: '', component: StopsComponent},\n  {path: 'map', component: StopsMapComponent, canActivate: [MiniMapService]},\n  {path: ':stopCode', component: StopSliderComponent,},\n  {path: ':stopCode/map', component: StopsMapComponent, canActivate: [MiniMapService]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StopsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StopsStore.html":{"url":"injectables/StopsStore.html","title":"injectable - StopsStore","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StopsStore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/stops/state/stop.store.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ComponentStore\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchArrivals\n                            \n                            \n                                    Private\n                                updateArrivals\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getArrivalState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(dataService: DataService, store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/stops/state/stop.store.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                        DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getArrivalState\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArrivalState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/stops/state/stop.store.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchArrivals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.effect((stop$: Observable) =>{\n        return stop$.pipe(\n            filter((stop) => !!stop),\n            switchMap((stop)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(stop!.code, 'stops/')),\n                tapResponse(\n                    (arrivals) => this.updateArrivals(arrivals),\n                    (error: HttpErrorResponse) => console.log(error)\n                )\n            ))\n        );\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/state/stop.store.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateArrivals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updater((state, arrivals: IArrival[]): LiveState => {\n        return {arrivals: [...arrivals]};\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/stops/state/stop.store.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Store } from \"@ngrx/store\";\nimport { filter, Observable, switchMap, takeUntil, tap, timer } from \"rxjs\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { IArrival } from \"src/app/state/Entities/live.data\";\nimport { ILine } from \"../../../state/Entities/line.entity\";\nimport { IStop } from \"../../../state/Entities/stop.entity\";\nimport { AppState } from \"../../../state/Reducers/api-reducer\";\nimport { currentRoute, getActiveStop } from \"../../../state/Selectors/appState.selectors\";\n\nexport interface LiveState {\n    arrivals: IArrival[];\n}\n\nexport const initialState: LiveState = {\n    arrivals: [],\n}\n  \n@Injectable()\nexport class StopsStore extends ComponentStore {\n    \n    public constructor(private dataService: DataService, private store: Store) {\n        super(initialState);\n    }\n\n    public getArrivalState(): Observable{\n        return this.select(state => state.arrivals);\n    }\n\n    /* Fetch the stop arrivals every 20secs and update the local state */\n    public fetchArrivals = this.effect((stop$: Observable) =>{\n        return stop$.pipe(\n            filter((stop) => !!stop),\n            switchMap((stop)=> timer(0, 20000).pipe(\n                switchMap(() => this.dataService.getLiveUpdates(stop!.code, 'stops/')),\n                tapResponse(\n                    (arrivals) => this.updateArrivals(arrivals),\n                    (error: HttpErrorResponse) => console.log(error)\n                )\n            ))\n        );\n    });\n\n    /* STATE UPDATERS */\n    private updateArrivals = this.updater((state, arrivals: IArrival[]): LiveState => {\n        return {arrivals: [...arrivals]};\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToasterComponent.html":{"url":"components/ToasterComponent.html","title":"component - ToasterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToasterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/shared-module/components/toaster/toaster.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toaster-component\n            \n\n            \n                styleUrls\n                ./toaster.component.css\n            \n\n\n\n            \n                templateUrl\n                ./toaster.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                flag\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                    Public\n                                text\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                msg$\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        msg$\n                    \n                \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        start\n                        \n                    \n                \n            \n            \n                \n                    \n                    start(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/shared-module/components/toaster/toaster.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'toaster-component',\n  templateUrl: './toaster.component.html',\n  styleUrls: ['./toaster.component.css']\n})\nexport class ToasterComponent implements OnInit, OnDestroy {\n\n  public flag: boolean = false;\n  public text: string = '';\n  private sub!: Subscription;\n\n  @Input() public msg$!: Subject;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.sub = this.msg$.subscribe({next: (v) => this.start(v)});\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  public start(msg: string): void {\n    this.text = msg;\n    this.flag = true;\n    setTimeout(() => this.flag = false, 3000);\n  }\n\n}\n\n    \n\n    \n        \n\n    {{text}}\n\n\n    \n\n    \n                \n                    ./toaster.component.css\n                \n                \n.main {\n    position: absolute;\n    display: grid;\n    place-items: center;\n    width: 100%; \n    height: 100%;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0,0,0,0.23);\n    z-index: 5;\n    cursor: pointer;\n}\n/* The snackbar - position it at the bottom and in the middle of the screen */\n#snackbar {\n  visibility: hidden; /* Hidden by default. Visible on click */\n  background-color: #333; /* Black background color */\n  color: #fff; /* White text color */\n  text-align: center; /* Centered text */\n  border-radius: 2px; /* Rounded borders */\n  padding: 10px 25px 10px 25px; /* Padding */\n  position: fixed; /* Sit on top of the screen */\n  z-index: 5; /* Add a z-index if needed */\n}\n\n#snackbar.show {\n  visibility: visible; /* Show the snackbar */\n  -webkit-animation: fadeout .5s;\n  animation: fadein 0.5s, fadeout 0.5s 2.5s;\n}\n\n@-webkit-keyframes fadein {\n  from {transform: translateY(20px); opacity: 0;}\n  to {transform: translateY(0px); opacity: 1;}\n}\n\n@keyframes fadein {\n  from {transform: translateY(20px); opacity: 0;}\n  to {transform: translateY(0px); opacity: 1;}\n}\n\n@-webkit-keyframes fadeout {\n  from {transform: translateY(0px); opacity: 1;}\n  to {transform: translateY(20px); opacity: 0;}\n}\n\n@keyframes fadeout {\n  from {transform: translateY(0px); opacity: 1;}\n  to {transform: translateY(20px); opacity: 0;}\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{text}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToasterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripComponent.html":{"url":"components/TripComponent.html","title":"component - TripComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/trip/trip.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                trip-component\n            \n\n            \n                styleUrls\n                ./trip.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onBook\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                date\n                            \n                            \n                                itinerary\n                            \n                            \n                                occupancy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                book\n                            \n                            \n                                msg\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getDate\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/trip/trip.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itinerary\n                    \n                \n                \n                    \n                        Type :     Itinerary | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        occupancy\n                    \n                \n                \n                    \n                        Type :     Dictionary\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:15\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        book\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        msg\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip/trip.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    onBook()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip/trip.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip/trip.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getDate\n                    \n                \n\n                \n                    \n                        getgetDate()\n                    \n                \n                            \n                                \n                                    Defined in src/app/modules/planner/components/trip/trip.component.ts:28\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Dictionary } from '@ngrx/entity';\nimport { Itinerary } from 'src/app/state/Entities/itinerary';\n\n@Component({\n  selector: 'trip-component',\n  templateUrl: './trip.component.html',\n  styleUrls: ['./trip.component.css']\n})\nexport class TripComponent implements OnInit {\n\n  @Input() public data: number = 0;\n  @Input() public itinerary: Itinerary | null = null;\n  @Input() public date: string = '';\n  @Input() public occupancy: Dictionary = {};\n\n  @Output() public msg = new EventEmitter();\n  @Output() public book = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n  public onSelect(){\n    this.msg.emit(this.data);\n  }\n\n  public get getDate(){\n    return this.date.split(',')[0];\n  }\n\n  public onBook(){\n    this.book.next(this.data);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                        \n                        \n                            \n                            {{it.startTime}}\n                            \n                                \n                                    \n                                \n                                \n                                    \n                                    {{leg.routeId}}\n                                \n                            \n                            \n                                {{it.endTime}}\n                            \n                           \n                    \n                    \n                        \n                            Summary\n                            \n                                \n                                \n                                    \n                                        Κράτηση\n                                    \n                                \n                            \n                        \n                        \n                            \n                                \n                                   Route\n                                \n                                \n                                    {{leg.routeId}}\n                                \n                            \n                            \n                                \n                                    From\n                                \n                                \n                                    {{leg.from.name}}({{leg.from.stopCode}}), {{leg.startTime}}\n                                \n                            \n                            \n                                \n                                    To\n                                \n                                \n                                    {{leg.to.name}}({{leg.to.stopCode}}), {{leg.endTime}}\n                                \n                            \n                            \n                                \n                                    Seats\n                                \n                                \n                                    {{occupancy[leg.tripId]}}\n                                \n                            \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n    \n                \n                    ./trip.component.css\n                \n                \n:host{\n    width: 100%;\n}\n\n:host:hover{\n    cursor: pointer;\n    transform: translateX(3px);\n    transition-duration: .5s;\n}\n\n.entity-wrapper{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n    cursor: pointer;\n}\n\n.entity-container{\n    color: #545f6d;\n    font-size: 14px;\n    padding: 10px 10px 10px 10px;\n}\n\n.context{\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    gap: 3px;\n    position: relative;\n    font-size: 13px;\n}\n\n.bus-mode{\n    flex: 1 1;\n    background: #002D62;\n}\n\n.walk-mode{\n    flex: 1 1;\n    background: rgb(187, 187, 187);\n}\n\n.trail{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    z-index: 3;\n    padding-right: 5px;\n    padding-left: 5px;\n}\n\n.code{\n    margin-left: 4px;\n    margin-top: 1px;\n}\n\n.time{\n    background-color: black;\n    color: white;\n    font-size: 11px;\n    font-weight: bold;\n    align-self: center;\n    height: 14px;\n    line-height: 15px;\n    padding-left: 2px;\n    padding-right: 2px;\n    z-index: 3;\n}\n\n.line{\n    position: absolute;\n    top: 9px;\n    right: 0px;\n    z-index: 1;\n    width: 100%;\n    border-bottom: 2px solid rgb(20, 20, 20);\n}\n\n.sumary-section{\n    display: flex;\n    flex-direction: column;\n    padding: 10px 5px 0px 5px;\n}\n\n.header{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 5px;\n    margin-top: 3px;\n    align-items: center;\n}\n\n.malakas{\n    color: #2e3e51;\n    font-weight: bold;\n    font-size: 16px;\n}\n\n.field{\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    font-weight: bold;\n    width: 100%;\n}\n\n.title{\n    color: #2e3e51;\n    font-size: 14px;\n    font-weight: bold;\n    white-space: nowrap;\n}\n\n.value{\n    color: #545f6d;\n    font-size: 13px;\n}\n\n::ng-deep .mat-expansion-panel-header {\n    padding: 0 !important;\n}\n\n::ng-deep .mat-expansion-panel-header{\n    height: 21px;\n}\n\n::ng-deep .mat-expansion-panel {\n    background: transparent !important;\n}\n\n::ng-deep .mat-expansion-panel:not([class*=mat-elevation-z]) {\n    box-shadow: none !important;\n}\n\n::ng-deep .mat-expansion-panel-header.mat-expanded {\n    height: unset;\n}\n\n::ng-deep .mat-expansion-panel-body {\n    padding: 0px !important;\n}\n\n::ng-deep .mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #002D62;\n}\n\n.mat-raised-button {\n    min-width: unset !important;\n    line-height: unset !important;\n    padding: 4px 7px 3px 7px !important;\n    font-size: 18px !important;\n}\n\n.fa-sort-down{\n    color: #2e3e51;\n    margin-right: 5px;\n}\n\n.inner-malakas{\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 8px;\n}\n\n.inner-malakas>i{\n    color: #002D62;\n    font-size: 14px;\n}\n\n.book-btn{\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: 8px;\n}\n\n.book-btn>button{\n    padding: 4px 18px 4px 18px !important;\n    font-size: 18px !important;\n}\n\n.custom>button{\n    padding-left: 5px !important;\n    padding-right: 5px !important;\n}\n\n.fa-map{\n    font-size: 20px !important;\n    padding: 6px 6px 6px 6px !important;\n    transition-duration: .4s;\n    border-radius: 3px;\n}\n\n.fa-map:hover{\n    background: #b7cbe4;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                    {{it.startTime}}                                                                                                                                                                                                                                        {{leg.routeId}}                                                                                                                        {{it.endTime}}                                                                                                                                                   Summary                                                                                                                                                                        Κράτηση                                                                                                                                                                                                                                               Route                                                                                                    {{leg.routeId}}                                                                                                                                                            From                                                                                                    {{leg.from.name}}({{leg.from.stopCode}}), {{leg.startTime}}                                                                                                                                                            To                                                                                                    {{leg.to.name}}({{leg.to.stopCode}}), {{leg.endTime}}                                                                                                                                                            Seats                                                                                                    {{occupancy[leg.tripId]}}                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TripData.html":{"url":"interfaces/TripData.html","title":"interface - TripData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TripData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/map.data.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPoint } from \"./route.entity\";\nimport { IStop } from \"./stop.entity\";\n\nexport interface IMapData{\n    stops: IStop[];\n    points: IPoint[];\n}\n\nexport interface TripData{\n    start: string[];\n    destination: string[];\n}\n\nexport const defaultTrip: TripData = {\n    start: [],\n    destination: []\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TripData-1.html":{"url":"interfaces/TripData-1.html","title":"interface - TripData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TripData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/map.data.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IPoint } from \"./route.entity\";\nimport { IStop } from \"./stop.entity\";\n\n\nexport interface IMapData{\n    stops: IStop[];\n    points: IPoint[];\n}\n\nexport interface TripData{\n    start: string[];\n    destination: string[];\n}\n\nexport const defaultTrip: TripData = {\n    start: [],\n    destination: []\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripDetailsComponent.html":{"url":"components/TripDetailsComponent.html","title":"component - TripDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/trip-details/trip-details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-trip-details\n            \n\n            \n                styleUrls\n                ./trip-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                arrows\n                            \n                            \n                                    Public\n                                directions\n                            \n                            \n                                    Public\n                                flag\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                focus\n                            \n                            \n                                    Public\n                                miniMap\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                showMapIcon\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, msg: DataShareService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:61\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        focus\n                        \n                    \n                \n            \n            \n                \n                    \n                    focus(x: number, y: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        miniMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    miniMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        showMapIcon\n                        \n                    \n                \n            \n            \n                \n                    \n                    showMapIcon()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        arrows\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    RIGHT: 'turn_right', LEFT: 'turn_left', DEPART: 'arrow_upward',\n    SLIGHTLY_LEFT: 'turn_slight_left', SLIGHTLY_RIGHT: 'turn_slight_right',\n    CIRCLE_CLOCKWISE: 'roundabout_right', CIRCLE_COUNTERCLOCKWISE: 'roundabout_left',\n    UTURN_RIGHT: 'u_turn_right', UTURN_LEFT: 'u_turn_left',\n    CONTINUE: 'arrow_upward', HARD_LEFT: 'turn_sharp_left', HARD_RIGHT: 'turn_sharp_right'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        directions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    RIGHT: 'Right on to', LEFT: 'Left on to', DEPART: 'Start on',\n    SLIGHTLY_LEFT: 'Slightly left on to', SLIGHTLY_RIGHT: 'Slightly right on to',\n    CIRCLE_CLOCKWISE: 'Take roundabout to ', CIRCLE_COUNTERCLOCKWISE: 'Take roundabout to',\n    UTURN_RIGHT: 'U turn right to', UTURN_LEFT: 'U turn left to',\n    CONTINUE: 'Continue to', HARD_LEFT: 'Sharp left to', HARD_RIGHT: 'Sharp right to'\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        flag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-details/trip-details.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { selectItinerary, spinner } from 'src/app/state/Selectors/appState.selectors';\nimport * as select_actions from 'src/app/state/Actions/select.actions';\nimport { DataShareService } from 'src/app/services/data-share.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-trip-details',\n  templateUrl: './trip-details.component.html',\n  styleUrls: ['./trip-details.component.css']\n})\nexport class TripDetailsComponent implements OnInit {\n\n  public vm$!: Observable;\n  public flag: boolean = false;\n\n  public arrows: any = {\n    RIGHT: 'turn_right', LEFT: 'turn_left', DEPART: 'arrow_upward',\n    SLIGHTLY_LEFT: 'turn_slight_left', SLIGHTLY_RIGHT: 'turn_slight_right',\n    CIRCLE_CLOCKWISE: 'roundabout_right', CIRCLE_COUNTERCLOCKWISE: 'roundabout_left',\n    UTURN_RIGHT: 'u_turn_right', UTURN_LEFT: 'u_turn_left',\n    CONTINUE: 'arrow_upward', HARD_LEFT: 'turn_sharp_left', HARD_RIGHT: 'turn_sharp_right'\n  };\n\n  public directions: any = {\n    RIGHT: 'Right on to', LEFT: 'Left on to', DEPART: 'Start on',\n    SLIGHTLY_LEFT: 'Slightly left on to', SLIGHTLY_RIGHT: 'Slightly right on to',\n    CIRCLE_CLOCKWISE: 'Take roundabout to ', CIRCLE_COUNTERCLOCKWISE: 'Take roundabout to',\n    UTURN_RIGHT: 'U turn right to', UTURN_LEFT: 'U turn left to',\n    CONTINUE: 'Continue to', HARD_LEFT: 'Sharp left to', HARD_RIGHT: 'Sharp right to'\n  };\n\n  constructor(\n    private store: Store, \n    private msg: DataShareService,\n    private router: Router \n  ) { }\n\n  ngOnInit(): void {\n    this.showMapIcon();\n    this.vm$ = combineLatest([\n      this.store.select(selectItinerary), \n      this.store.select(spinner)\n    ]).pipe(map(([itinerary, spinner]) => ({itinerary, spinner})));\n  }\n\n  public focus(x: number, y: number){\n    this.msg.fly([x+'', y+'']);\n  }\n\n  public miniMap(){\n    this.router.navigate([{ outlets: { sidebar: [ 'routes', 'trips', 'map'] }}], \n      {queryParams: {module: 'trip_map'}\n    });\n  }\n\n  @HostListener('window:resize', ['$event'])\n  private showMapIcon(){\n    if(window.innerWidth \n    \n\n    \n        \n\n    \n        \n        \n            Itinerary Steps\n            \n        \n        \n            Start: {{vm.itinerary.startTime}}\n            \n                \n                    \n                        \n                            \n                                \n                                    \n                                        WALK\n                                        {{leg.distance}}m, {{leg.duration}} \n                                             1\"> mins&nbsp;\n                                             min&nbsp;\n                                            to {{leg.to.name}}\n                                        \n                                    \n                                \n                                \n                                    \n    \n                                        \n                                            {{arrows[step.relativeDirection]}}\n                                        \n    \n                                        \n                                            \n                                                Continue {{step.absoluteDirection}}\n                                            \n                                            \n                                                {{directions[step.relativeDirection]}}\n                                                {{step.streetName}}\n                                            \n                                            \n                                                heading {{step.absoluteDirection}}\n                                            \n                                        \n    \n                                        {{step.distance}}m\n    \n                                    \n                                \n                            \n                        \n                    \n                \n                \n                    \n                        \n                            \n                                \n                                    \n                                        BUS\n                                        Route {{leg.routeShortName}}, {{leg.duration}}\n                                             1\">mins\n                                            min\n                                        \n                                        \n                                    \n                                \n                                \n                                    \n                                        \n                                        Board at {{leg.from.name}}\n                                        {{leg.startTime}}\n                                    \n                                    \n                                        \n                                        Departure delay\n                                        {{leg.departureDelay}} min\n                                    \n                                    \n                                        \n                                        Arrival delay\n                                        {{leg.arrivalDelay}} min\n                                    \n                                    \n                                        \n                                            \n                                                \n                                                    \n                                                        \n                                                        {{leg.intermediateStops.length}} stops\n                                                        {{leg.duration}} mins\n                                                    \n                                                \n                                            \n                                            \n                                                \n                                                    \n                                                    {{stop.name}}\n                                                    {{stop.arrival}}\n                                                \n                                            \n                                        \n                                    \n                                    \n                                        \n                                        Alight at {{leg.to.name}}\n                                        {{leg.to.arrival}}\n                                    \n                                \n                            \n                        \n                    \n                 \n            \n            End: {{vm.itinerary.endTime}}\n        \n    \n\n\n\n    \n        \n    \n\n\n\n\n\n\n    \n\n    \n                \n                    ./trip-details.component.css\n                \n                \n:host{\n    width: 100%;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 270px);\n    gap: 5px;\n    padding-right: 3px;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n    height: calc(100vh - 140px);\n    position: relative;\n}\n\nh1{\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 18px;\n    margin-top: 15px;\n}\n\n.entity-wrapper{\n    background: rgb(227,227,236);\n    background: linear-gradient(90deg, rgba(227,227,236,1) 0%, rgba(255,255,255,1) 100%);\n    box-shadow: rgba(99, 99, 99, 0.2) 0px 2px 8px 0px;\n}\n\n.entity-wrapper:hover{\n    cursor: pointer;\n}\n\n.entity-container{\n    color: #545f6d;\n    font-size: 14px;\n    padding: 10px 10px 10px 10px;\n}\n\n.panel-title{\n    display: flex;\n    flex-direction: row;\n    gap: 5px;\n}\n\n.mode{\n    font-size: 12px;\n    font-weight: bold;\n    color: #2e3e51;\n}\n\n.mode-details{\n    font-size: 12px;\n    color: #2e3e51;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n}\n\n.walk-steps, .bus-route{\n    display: flex;\n    flex-direction: column;\n    gap: 2px;\n    padding: 8px;\n    width: 100%;\n}\n\n.step{\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    gap: 8px;\n    padding: 3px 3px 3px 3px;\n    background: linear-gradient(90deg, rgb(210 210 225) 0%, rgb(245 245 255) 100%);\n    align-items: center;\n}\n\n.step>i, span{\n    color:#2e3e51 !important;\n    /* font-size: 14px !important; */\n    font-weight: bold !important;\n}\n\n.step-desc{\n    color:#2e3e51;\n    font-size: 12px;\n}\n\n.stops{\n    padding: 0.2em 0.4em;\n    font-style: italic;\n    font-weight: bold;\n    cursor: pointer;\n}\n\n.step-dist{\n    color: #545f6d;\n    font-size: 11px;\n    font-weight: bold;\n    margin-left: auto;\n}\n\n.fa-sort-down{\n    margin-left: auto;\n    color: #002D62;\n}\n\n::ng-deep .mat-expansion-panel-header {\n    padding: 0 !important;\n    background: none !important;\n    height: unset !important;\n}\n\n::ng-deep .mat-expansion-panel {\n    background: transparent !important;\n}\n\n::ng-deep .mat-expansion-panel:not([class*=mat-elevation-z]) {\n    box-shadow: none !important;\n}\n\n::ng-deep .mat-expansion-panel-header.mat-expanded {\n    height: unset;\n}\n\n::ng-deep .mat-expansion-panel-body {\n    padding: 0px !important;\n}\n\n::ng-deep .mat-flat-button.mat-primary, .mat-raised-button.mat-primary, .mat-fab.mat-primary, .mat-mini-fab.mat-primary {\n    background-color: #002D62;\n}\n\n::ng-deep .mat-raised-button {\n    min-width: unset !important;\n    line-height: unset !important;\n    padding: 1px 5px 0px 5px !important;\n    font-size: 14px !important;\n}\n\n::ng-deep .mat-expansion-panel-header-title, .mat-expansion-panel-header-description {\n    margin-right: 0px !important;\n}\n\n.header{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 10px;\n    gap: 5px;\n}\n\n.fa-map{\n    font-size: 20px !important;\n    padding: 6px 6px 6px 6px !important;\n    transition-duration: .4s;\n    border-radius: 3px;\n    color: #002D62;;\n}\n\n.fa-map:hover{\n    background: #b7cbe4;\n}\n\n.book-menu{\n    margin-right: 10px;\n    margin-left: 5px;\n}\n\n::ng-deep .mat-button.mat-primary, .mat-icon-button.mat-primary, .mat-stroked-button.mat-primary {\n    color: #2b3b4c !important;\n}\n\n::ng-deep .mat-button, .mat-icon-button, .mat-stroked-button {\n    background: rgb(0 0 0 / 10%) !important;\n}\n\nbutton{\n    font-size: 14px !important;\n    font-weight: bold;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Itinerary Steps                                        Start: {{vm.itinerary.startTime}}                                                                                                                                                                                                                WALK                                        {{leg.distance}}m, {{leg.duration}}                                              1\"> mins                                              min                                             to {{leg.to.name}}                                                                                                                                                                                                                                                                        {{arrows[step.relativeDirection]}}                                                                                                                                                                                Continue {{step.absoluteDirection}}                                                                                                                                        {{directions[step.relativeDirection]}}                                                {{step.streetName}}                                                                                                                                        heading {{step.absoluteDirection}}                                                                                                                                {{step.distance}}m                                                                                                                                                                                                                                                                                                                                                                    BUS                                        Route {{leg.routeShortName}}, {{leg.duration}}                                             1\">mins                                            min                                                                                                                                                                                                                                                                                                        Board at {{leg.from.name}}                                        {{leg.startTime}}                                                                                                                                                        Departure delay                                        {{leg.departureDelay}} min                                                                                                                                                        Arrival delay                                        {{leg.arrivalDelay}} min                                                                                                                                                                                                                                                                                                                                                                                {{leg.intermediateStops.length}} stops                                                        {{leg.duration}} mins                                                                                                                                                                                                                                                                                                                                                    {{stop.name}}                                                    {{stop.arrival}}                                                                                                                                                                                                                                                                                            Alight at {{leg.to.name}}                                        {{leg.to.arrival}}                                                                                                                                                                                     End: {{vm.itinerary.endTime}}                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripListComponent.html":{"url":"components/TripListComponent.html","title":"component - TripListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/trip-list/trip-list.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                BookingsStore\n                \n            \n\n\n            \n                selector\n                trip-list\n            \n\n            \n                styleUrls\n                ./trip-list.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetched\n                            \n                            \n                                    Public\n                                vm$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                onBook\n                            \n                            \n                                    Public\n                                onSelect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, router: Router, auth: AuthService, local: BookingsStore)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/trip-list/trip-list.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        BookingsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-list/trip-list.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    onBook(itinerary: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-list/trip-list.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itinerary\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onSelect(itinerary: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-list/trip-list.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    itinerary\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetched\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-list/trip-list.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        vm$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-list/trip-list.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable, combineLatest, map, tap } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Plan } from 'src/app/state/Entities/itinerary';\nimport { AppState } from 'src/app/state/Reducers/api-reducer';\nimport { getOccupancy, getPlanState, spinner } from 'src/app/state/Selectors/appState.selectors';\nimport { BookingsStore } from '../../state/bookings.store';\n\n@Component({\n  selector: 'trip-list',\n  templateUrl: './trip-list.component.html',\n  styleUrls: ['./trip-list.component.css'],\n  providers: [BookingsStore]\n})\nexport class TripListComponent implements OnInit {\n\n  public vm$!: Observable;\n  public fetched: boolean = false;\n\n  constructor(\n    private store: Store, \n    private router: Router, \n    private auth: AuthService,\n    private local: BookingsStore\n  ) { }\n\n  ngOnInit(): void {\n    this.vm$ = combineLatest([\n      this.store.select(getPlanState), \n      this.local.state$, \n      this.store.select(spinner),\n      this.store.select(getOccupancy)\n    ]).pipe(map(([plan, state, spinner, occupancy]) => ({plan, state, spinner, occupancy})));\n    this.local.dispatchBooking();\n  }\n\n  public onSelect(itinerary: number){\n    this.router.navigate([{ outlets: { sidebar: [ 'routes', 'trips', itinerary] }}], \n      {queryParams: {module: 'trip_details'}\n    });\n  }\n\n  public onBook(itinerary: number){\n    const user: string = this.auth.getUserInfo().email;\n    this.local.initBooking({user: user, it: itinerary});\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n    \n\n    Itineraries\n     0 else noItineraries\">\n\n        \n        \n\n    \n\n\n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./trip-list.component.css\n                \n                \n:host{\n    width: 100%;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 270px);\n    padding-right: 3px;\n    gap: 10px;\n}\n\nh1{\n    margin-top: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 18px;\n}\n\n.main{\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    width: 100%;\n    padding: 0px 15px 0px 15px;\n    height: calc(100vh - 140px);\n    position: relative;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Itineraries     0 else noItineraries\">                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TripPlannerMap.html":{"url":"classes/TripPlannerMap.html","title":"class - TripPlannerMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TripPlannerMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/map/mapControllers/tripPlannerMapControllers.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Map\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                end\n                            \n                            \n                                    Private\n                                layerGroup\n                            \n                            \n                                    Private\n                                msg\n                            \n                            \n                                    Private\n                                start\n                            \n                            \n                                    Protected\n                                bus_icon\n                            \n                            \n                                    Protected\n                                bus_stop_icon\n                            \n                            \n                                    Protected\n                                center\n                            \n                            \n                                    Protected\n                                dest_marker\n                            \n                            \n                                    Protected\n                                map\n                            \n                            \n                                    Protected\n                                marker\n                            \n                            \n                                    Protected\n                                pin\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addMarker\n                            \n                            \n                                    Public\n                                clearLayerGroup\n                            \n                            \n                                    Public\n                                clearPoint\n                            \n                            \n                                    Public\n                                clearPoints\n                            \n                            \n                                    Public\n                                displayItinerary\n                            \n                            \n                                    Public\n                                dragOff\n                            \n                            \n                                    Public\n                                enableDrag\n                            \n                            \n                                    Protected\n                                centerMap\n                            \n                            \n                                    Protected\n                                createMarker\n                            \n                            \n                                    Protected\n                                createPolyline\n                            \n                            \n                                    Protected\n                                focusOnPath\n                            \n                            \n                                    Protected\n                                focusOnPoint\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(map: L.Map, msg: DataShareService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        map\n                                                  \n                                                        \n                                                                        L.Map\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        msg\n                                                  \n                                                        \n                                                                        DataShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        end\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Marker\n\n                    \n                \n                \n                    \n                        Default value : this.createMarker('0', '0', '', this.dest_marker, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        layerGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.LayerGroup\n\n                    \n                \n                \n                    \n                        Default value : new L.LayerGroup()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        msg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataShareService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Marker\n\n                    \n                \n                \n                    \n                        Default value : this.createMarker('0', '0', '', this.marker, false)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-icon.png', iconSize: [45, 45]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        bus_stop_icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/bus-stop.png', iconSize: [25, 25]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        center\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : [39.667341104708946, 20.854922400637918]\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        dest_marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/dest-marker.png', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        map\n                        \n                    \n                \n            \n                \n                    \n                        Type :         L.Map\n\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:7\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        marker\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/location.png', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        pin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     L.Icon\n\n                    \n                \n                \n                    \n                        Default value : L.icon({iconUrl: '../../../../assets/pin.ico', iconSize: [50, 50]})\n                    \n                \n                        \n                            \n                                Inherited from         Map\n\n                            \n                        \n                    \n                        \n                                Defined in         Map:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMarker(data: TripState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                TripState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearLayerGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearLayerGroup()\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:146\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearPoint(direction: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        clearPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearPoints()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        displayItinerary\n                        \n                    \n                \n            \n            \n                \n                    \n                    displayItinerary(it: Itinerary | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    it\n                                    \n                                            Itinerary | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragOff()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        enableDrag\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableDrag(data: TripState)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/map/mapControllers/tripPlannerMapControllers.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                TripState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        centerMap\n                        \n                    \n                \n            \n            \n                \n                    \n                    centerMap()\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:28\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createMarker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createMarker(x: string, y: string, text: string, icon: L.Icon, draggable: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    y\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    icon\n                                    \n                                            L.Icon\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    draggable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createPolyline\n                        \n                    \n                \n            \n            \n                \n                    \n                    createPolyline(path: number[][], color?: string, text?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            number[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    color\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        focusOnPath\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPath(p1: L.Marker, p2: L.Marker)\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    p1\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    p2\n                                    \n                                            L.Marker\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        focusOnPoint\n                        \n                    \n                \n            \n            \n                \n                    \n                    focusOnPoint(point: string[])\n                \n            \n\n\n            \n                \n                    Inherited from         Map\n\n                \n            \n            \n                \n                        Defined in         Map:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    point\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Map } from \"./map\";\nimport * as L from 'leaflet';\nimport { TripState } from \"src/app/modules/planner/state/directions.store\";\nimport { Itinerary } from \"src/app/state/Entities/itinerary\";\nimport { DataService } from \"src/app/services/data.service\";\nimport { DataShareService } from \"src/app/services/data-share.service\";\n\nexport class TripPlannerMap extends Map{\n\n    private layerGroup: L.LayerGroup = new L.LayerGroup() ;\n    private start: L.Marker = this.createMarker('0', '0', '', this.marker, false);\n    private end: L.Marker = this.createMarker('0', '0', '', this.dest_marker, false);\n    private msg: DataShareService;\n\n    public constructor(map: L.Map, msg: DataShareService){\n        super(map);\n        this.layerGroup.addTo(this.map);\n        this.msg = msg;\n\n        this.start.addEventListener(\"dragend\", (v) => {\n\n            const point: string[] = [\n                '0', 'Επιλογή',\n                this.start.getLatLng().lat + '',\n                this.start.getLatLng().lng + ''\n            ];\n\n            this.msg.onDragStart(point);\n        });\n\n        this.end.addEventListener(\"dragend\", (v) => {\n\n            const point: string[] = [\n                '0', 'Επιλογή',\n                this.end.getLatLng().lat + '',\n                this.end.getLatLng().lng + ''\n            ];\n\n            this.msg.onDragEnd(point);\n        });\n\n    }\n\n    public enableDrag(data: TripState){\n        if(data.direction == 'start' && data.start[0] == '0'){\n            this.start.dragging?.enable();\n        }else if(data.direction == 'dest' && data.destination[0] == '0'){\n            this.end.dragging?.enable();\n        }else{\n            this.dragOff();\n        }\n    }\n\n    public dragOff(){\n        this.start.dragging?.disable();\n        this.end.dragging?.disable();\n    }\n\n    public addMarker(data: TripState){\n\n        if(data.direction == 'start' && data.start.length > 0){\n            this.start.setLatLng([+data.start[2], +data.start[3]]);\n            this.start.setPopupContent(`${data.start[1]}`);\n            this.start.addTo(this.map);\n            this.map.flyTo(this.start.getLatLng(), 15);\n        }else if(data.direction == 'dest' && data.destination.length > 0){\n            this.end.setLatLng([+data.destination[2], +data.destination[3]]);\n            this.end.setPopupContent(`${data.destination[1]}`);\n            this.end.addTo(this.map);\n            this.map.flyTo(this.end.getLatLng(), 15);\n        }else if(data.direction == 'swap'){\n            let temp = this.start.getLatLng();\n            this.start.setLatLng(this.end.getLatLng());\n            this.end.setLatLng(temp);\n            this.start.setPopupContent(`${data.start[1]}`);\n            this.end.setPopupContent(`${data.destination[1]}`);\n        }else{\n            this.clearPoint(data.direction);\n        }\n\n        this.enableDrag(data);\n    }\n\n    public displayItinerary(it: Itinerary | undefined){\n        \n        this.clearLayerGroup();\n\n        if(!it) return;\n\n        let shape: number[][] = [];\n\n        it.legs.forEach(leg =>{\n    \n            const path: number[][] = leg.points.map(point => [+point[0], +point[1]]); \n\n            let color: string = ''\n            let text: string = '';\n\n            if(leg.mode == 'WALK'){\n                color = '#ff726f';\n                text = 'Walk';\n            }else{\n                color = '#002D62'\n                text = 'Bus route ' + leg.routeId;\n            }\n    \n            if(leg.from.vertexType == 'TRANSIT'){\n                const marker = this.createMarker(leg.from.lat, leg.from.lon, leg.from.name, this.bus_stop_icon);\n                this.layerGroup.addLayer(marker);\n            }\n    \n            if(leg.to.vertexType == 'TRANSIT'){\n                const marker = this.createMarker(leg.to.lat, leg.to.lon, leg.to.name, this.bus_stop_icon);\n                this.layerGroup.addLayer(marker);\n            }\n    \n            if(leg.mode == 'TRAM'){\n                leg.intermediateStops.forEach(stop => {\n                    const marker = this.createMarker(stop.lat, stop.lon, stop.name, this.bus_stop_icon);\n                    this.layerGroup.addLayer(marker);\n                });\n            }\n          \n            shape = shape.concat(path);\n            const polyline = this.createPolyline(path, color);\n            polyline.bindPopup(text);\n            this.layerGroup.addLayer(polyline);\n        });\n    \n        this.map.fitBounds(this.createPolyline(shape).getBounds());\n    }\n\n    public clearPoint(direction: string){\n        if(direction == 'start'){\n            this.map.removeLayer(this.start);\n        }else if (direction == 'dest'){\n            this.map.removeLayer(this.end);\n        }\n    }\n\n    public clearPoints(){\n        this.map.removeLayer(this.start);\n        this.map.removeLayer(this.end);\n    }\n\n    public clearLayerGroup(): void {\n        this.layerGroup.clearLayers();\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TripPlannerOptionsComponent.html":{"url":"components/TripPlannerOptionsComponent.html","title":"component - TripPlannerOptionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TripPlannerOptionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                trip-planner-options\n            \n\n            \n                styleUrls\n                ./trip-planner-options.component.css\n            \n\n\n\n            \n                templateUrl\n                ./trip-planner-options.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                state$\n                            \n                            \n                                    Public\n                                time\n                            \n                            \n                                    Public\n                                tripOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                plan\n                            \n                            \n                                    Public\n                                updateDate\n                            \n                            \n                                    Public\n                                updateSelect\n                            \n                            \n                                    Public\n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(local: DirectionsStore, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        local\n                                                  \n                                                        \n                                                                        DirectionsStore\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        plan\n                        \n                    \n                \n            \n            \n                \n                    \n                    plan(start: string[], end: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateDate(event: MatDatepickerInputEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatDatepickerInputEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateSelect\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateSelect(value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateTime(e: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        state$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        tripOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/planner/components/trip-planner-options/trip-planner-options.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { Router } from '@angular/router';\nimport { Observable, take, tap } from 'rxjs';\nimport { DirectionsStore, TripState } from 'src/app/modules/planner/state/directions.store';\n\n@Component({\n  selector: 'trip-planner-options',\n  templateUrl: './trip-planner-options.component.html',\n  styleUrls: ['./trip-planner-options.component.css'],\n})\nexport class TripPlannerOptionsComponent implements OnInit {\n\n  public tripOptions!: FormGroup;\n  public state$!: Observable;\n  public date!: FormControl;\n  public time!: FormControl;\n\n  constructor(\n    private local: DirectionsStore, \n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.local.fetchPlan();\n\n    this.state$ = this.local.state$.pipe(take(1), tap(state => {\n      this.tripOptions = new FormGroup({\n        date: new FormControl(state.date, [Validators.required]),\n        time: new FormControl(state.time, [Validators.required]),\n      });\n    }));\n\n  }\n\n  public updateDate(event: MatDatepickerInputEvent){\n    this.local.updateDate(event.value!);\n  }\n\n  public updateTime(e: any){\n    this.local.updateTime(e.target.value);\n  }\n\n  public updateSelect(value: string){\n    this.local.updateArriveBy(value);\n  }\n\n  public plan(start: string[], end: string[]){\n\n    if(this.tripOptions.valid && start.length > 0 && end.length > 0){\n      this.local.initFetch();\n      this.router.navigate([{ outlets: { sidebar: [ 'routes', 'trips'] }}], \n        {queryParams: {module: 'trips'}\n      });\n    }\n    \n  }\n\n}\n\n\n    \n\n    \n        \nPreferences\n\n\n    \n        Date\n        \n        \n        \n        MM/DD/YYYY\n        Date is required\n    \n\n    \n        Time\n        \n        HH/MM/AM-PM\n        Time is required\n    \n\n    \n        Direction\n        \n            Depart\n            Arrive\n        \n    \n\n    \n        Some fields are invalid\n    \n\n    \n    \n\n\n\n\n    \n\n    \n                \n                    ./trip-planner-options.component.css\n                \n                :host{\n    width: 100%;\n    display: block;\n    padding: 15px 13px 0 15px;\n}\n\n.option-list{\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    overflow: auto;\n    max-height: calc(100vh - 265px);\n    gap: 10px;\n    padding-right: 5px;\n}\n\nh1{\n    margin-bottom: 15px;\n    color: #2b3b4c;\n    font-family: \"Lexend Deca\",sans-serif;\n    font-weight: 600;\n    font-size: 21px;\n}\n\n.mat-input-element {\n    caret-color: #545f6d;\n}\n\n.mat-form-field-appearance-legacy .mat-form-field-label{\n    color: #545f6d !important;\n}\n\n.mat-hint .mat-datepicker-toggle{\n    color: #545f6d !important;\n}\n\n::ng-deep .mat-focused .mat-form-field-label {\n    /*change color of label*/\n    color: #545f6d!important;\n    font-size: 15px;\n}\n   \n::ng-deep .mat-form-field-underline {\n    /*change color of underline*/\n    background-color: linear-gradient(90deg, rgba(195,197,213,1) 0%, rgba(239,243,248,1) 100%) !important;\n} \n   \n::ng-deep .mat-form-field-ripple {\n    /*change color of underline when focused*/\n    background-color: #3e3aef !important;\n}\n   \n::ng-deep .mat-form-field-label {\n    /*change color of label*/\n    color: #545f6d !important;\n}\n\n.mat-label{\n    font-size: 15px;\n}\n   \nmat-hint{\n    color: #545f6d !important;\n}\n   \nmat-datepicker-toggle {\n    color: #545f6d !important;\n}\n\n::placeholder{\n    color: #727f90 !important;\n}\n\n.mat-select-value-text{\n    color: #545f6d !important;\n}\n\n.panel .mat-mdc-select-panel {\n    background: rgba(255, 0, 0, 0.5);\n}\n\n::ng-deep .mat-select-value{\n    color: #545f6d !important;\n}\n\n::ng-deep .mat-select-arrow{\n    color: #545f6d !important;\n}\n\n.error-msg{\n    color: red;\n    align-self: center;\n}\n\n.options{\n    width: 100%;\n    border: 1px solid red;\n    padding: 5px 20px 5px 20px;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n}\n\n.field{\n    outline: none;\n    border: 1px solid grey;\n    border-radius: 5px;\n    background: transparent;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Preferences            Date                                MM/DD/YYYY        Date is required                Time                HH/MM/AM-PM        Time is required                Direction                    Depart            Arrive                        Some fields are invalid            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BookingComponent', 'selector': 'booking-component'},{'name': 'BookingsComponent', 'selector': 'bookings-component'},{'name': 'BookOptionsComponent', 'selector': 'book-options'},{'name': 'BusEntityComponent', 'selector': 'bus-entity'},{'name': 'DoubleInputComponent', 'selector': 'double-input'},{'name': 'DropdownOptionComponent', 'selector': 'dropdown-option'},{'name': 'InputComponent', 'selector': 'app-input'},{'name': 'LinesDropdownComponent', 'selector': 'lines-dropdown'},{'name': 'LinesMapComponent', 'selector': 'lines-map'},{'name': 'ListItemComponent', 'selector': 'list-item'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MainInputComponent', 'selector': 'input-field'},{'name': 'MapAreaComponent', 'selector': 'map-area'},{'name': 'MiniMapComponent', 'selector': 'mini-map'},{'name': 'MultipleDropdownComponent', 'selector': 'multiple-dropdown'},{'name': 'OptionComponent', 'selector': 'app-option'},{'name': 'PlacesComponent', 'selector': 'places-component'},{'name': 'PlacesMapComponent', 'selector': 'places-map'},{'name': 'PlacesSliderComponent', 'selector': 'places-slider'},{'name': 'QrComponent', 'selector': 'qr-component'},{'name': 'RegisterComponent', 'selector': 'register-component'},{'name': 'RouteDetailsComponent', 'selector': 'route-details'},{'name': 'RouteListComponent', 'selector': 'route-list'},{'name': 'SavedSliderComponent', 'selector': 'saved-slider'},{'name': 'SelectComponent', 'selector': 'select-component'},{'name': 'SidebarOptionsComponent', 'selector': 'sidebar-options'},{'name': 'SideNavComponent', 'selector': 'side-nav'},{'name': 'SliderComponent', 'selector': 'slider-component'},{'name': 'SpinnerComponent', 'selector': 'spinner-component'},{'name': 'StationEntityComponent', 'selector': 'station-entity'},{'name': 'StationListComponent', 'selector': 'station-list-component'},{'name': 'StopDropDownComponent', 'selector': 'stop-dropdown'},{'name': 'StopsComponent', 'selector': 'stops-component'},{'name': 'StopSliderComponent', 'selector': 'stop-slider'},{'name': 'StopsMapComponent', 'selector': 'stops-map'},{'name': 'ToasterComponent', 'selector': 'toaster-component'},{'name': 'TripComponent', 'selector': 'trip-component'},{'name': 'TripDetailsComponent', 'selector': 'app-trip-details'},{'name': 'TripListComponent', 'selector': 'trip-list'},{'name': 'TripPlannerOptionsComponent', 'selector': 'trip-planner-options'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TripPlannerOptionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TripState.html":{"url":"interfaces/TripState.html","title":"interface - TripState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TripState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/planner/state/directions.store.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arriveBy\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                        \n                                            direction\n                                        \n                                \n                                \n                                        \n                                            endValue\n                                        \n                                \n                                \n                                        \n                                            fetch\n                                        \n                                \n                                \n                                        \n                                            searchText\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            startValue\n                                        \n                                \n                                \n                                        \n                                            time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arriveBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arriveBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        searchText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        startValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        time:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { ComponentStore, tapResponse } from \"@ngrx/component-store\";\nimport { Store } from \"@ngrx/store\";\nimport { distinctUntilChanged, filter, map, Observable, throttleTime } from \"rxjs\";\nimport * as api_actions from \"../../../state/Actions/api-calls.actions\";\nimport { AppState } from \"../../../state/Reducers/api-reducer\";\nimport { Router } from \"@angular/router\";\nimport { HttpErrorResponse } from \"@angular/common/http\";\n\nconst now = () => new Date().getHours() + ':' + new Date().getMinutes();\n\nexport interface TripState {\n    start: string[];\n    destination: string[];\n    direction: string;\n    time: string;\n    date: Date;\n    arriveBy: string;\n    fetch: boolean;\n    startValue: string;\n    endValue: string;\n    searchText: string;\n}\n\nexport const initialState: TripState = {\n    start: [],\n    destination: [],\n    direction: '',\n    time: now(),\n    date: new Date(),\n    arriveBy: 'depart',\n    fetch: false,\n    startValue: '',\n    endValue: '',\n    searchText: ''\n}\n  \n@Injectable()\nexport class DirectionsStore extends ComponentStore {\n    \n    public constructor(private router: Router, private store: Store) {\n        super(initialState);\n    }\n\n    public reset = this.updater((state: TripState) => {\n        return initialState;\n    });\n\n    public fetchComplete = this.updater((state: TripState): TripState =>{\n        return {...state, fetch: false};\n    });\n\n    public updateSearchText = this.updater((state: TripState, text: string): TripState =>{\n        return {...state, searchText: text};\n    });\n\n    public swapPoints = this.updater((state: TripState): TripState =>{\n        return {...state, \n            direction: 'swap',  \n            start: [...state.destination], \n            destination: [...state.start],\n            startValue: state.endValue,\n            endValue: state.startValue\n        };\n    });\n\n    public changeDirection = this.updater((state: TripState, direction: string): TripState =>{\n        return {...state, direction: direction};\n    });\n\n    public updatePoint = this.updater((state: TripState, point: string[]): TripState => {\n        if(state.direction === 'start'){\n            return {...state, start: point, startValue: point[1]};\n        }else if (state.direction === 'dest'){\n            return {...state, destination: point, endValue: point[1]};\n        }\n\n        return initialState;\n    });\n\n    public updateStart = this.updater((state: TripState, point: string[]): TripState => {\n        return {...state, start: point};\n    });\n\n    public updateEnd = this.updater((state: TripState, point: string[]): TripState => {\n        return {...state, destination: point};\n    });\n\n    public updateTime = this.updater((state: TripState, time: string): TripState => {\n       return {...state, time: time};\n    });\n\n    public updateArriveBy = this.updater((state: TripState, arriveBy: string): TripState => {\n        return {...state, arriveBy: arriveBy};\n    });\n\n    public updateDate = this.updater((state: TripState, date: Date | undefined): TripState => {\n\n        if(date){\n            return {...state, date: date};\n        }else{\n            return state;\n        }\n        \n    });\n\n    public initFetch = this.updater((state: TripState): TripState =>{\n        if(state.start.length == 0 || state.destination.length == 0){\n            return state;\n        }else{\n            return {...state, fetch: true};\n        }\n    });\n\n    /* STATE SELECTORS */\n    public getNames(): Observable{\n        return this.select(state => {\n            const names = {start: '', end: ''};\n            if(state.start.length > 0) names.start = state.start[1];\n            if(state.destination.length > 0) names.end = state.destination[1];\n            return names;\n        });\n    }\n\n    public getStartValue(): Observable{\n        return this.select(this.state$, (state) => state.startValue);\n    }\n\n    public getEndValue(): Observable{\n        return this.select(this.state$, (state) => state.endValue);\n    }\n\n    public getText(): Observable{\n        return this.select(this.state$, (state) => state.searchText);\n    }\n\n    public fetchPlan = this.effect(() => {\n        return this.state$.pipe(\n            filter(state => state.fetch && state.start.length > 0 && state.destination.length > 0),\n            throttleTime(500),\n            map((data: TripState) => this.store.dispatch(api_actions.fetchPlan({data: data}))),\n            tapResponse(\n                (action) => {\n                    this.fetchComplete();\n                    this.changeDirection('');\n                }, \n                (error: HttpErrorResponse) => {\n                    console.log(error);\n                    this.changeDirection('');\n                    this.fetchComplete(); //fetch will be completed even if it fails \n                }\n            )\n        );\n    });\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vertex.html":{"url":"interfaces/Vertex.html","title":"interface - Vertex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vertex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/Entities/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrival\n                                        \n                                \n                                \n                                        \n                                            departure\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stopCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stopId\n                                        \n                                \n                                \n                                        \n                                            stopIndex\n                                        \n                                \n                                \n                                        \n                                            stopSequence\n                                        \n                                \n                                \n                                        \n                                            vertexType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopSequence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopSequence:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertexType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertexType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vertex-1.html":{"url":"interfaces/Vertex-1.html","title":"interface - Vertex-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vertex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/state/store/itinerary.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            arrival\n                                        \n                                \n                                \n                                        \n                                            departure\n                                        \n                                \n                                \n                                        \n                                            lat\n                                        \n                                \n                                \n                                        \n                                            lon\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stopCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stopId\n                                        \n                                \n                                \n                                        \n                                            stopIndex\n                                        \n                                \n                                \n                                        \n                                            stopSequence\n                                        \n                                \n                                \n                                        \n                                            vertexType\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arrival\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        arrival:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        departure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        departure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopSequence\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopSequence:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vertexType\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vertexType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Dictionary } from \"@ngrx/entity\";\n\nexport interface Step{\n    distance: number;\n    relativeDirection: string;\n    streetName: string;\n    absoluteDirection: string;\n    lon: number;\n    lat: number;\n}\n\nexport interface Vertex{\n    name: string;\n    lon: string;\n    lat: string;\n    vertexType: string;\n    departure: string;\n    arrival: string;\n    stopCode?: string;\n    stopId?: string;\n    stopIndex: number;\n    stopSequence: number;\n}\n\nexport interface Leg{\n    points: string[];\n    duration: number;\n    mode: string;\n    steps: Step[];\n    routeId: string;\n    tripId: string;\n    serviceDate: string;\n    agencyName: string;\n    agencyTimeZoneOffset: number;\n    occupancyStatus: number;\n    startTime: string;\n    endTime: string;\n    distance: string;\n    departureDelay: number;\n    arrivalDelay: number;\n    routeShortName: string;\n    flex: number;\n    from: Vertex;\n    to: Vertex;\n    intermediateStops: Vertex[];\n}\n\nexport interface Itinerary{\n    duration: number;\n    startTime: string;\n    endTime: string;\n    walkTime: number;\n    transitTime: number;\n    waitingTime: number;\n    arrivalDelay: number;\n    departureDelay: number;\n    serviceDate: number;\n    walkDistance: number;\n    legs: Leg[];\n}\n\nexport interface Plan{\n    date: string;\n    from: Vertex;\n    to: Vertex;\n    slug: string;\n    occupancy: Dictionary;\n    itineraries: Itinerary[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.1.0\n        \n            @angular/cdk : ^14.1.0\n        \n            @angular/common : ^14.1.0\n        \n            @angular/compiler : ^14.1.0\n        \n            @angular/core : ^14.1.0\n        \n            @angular/forms : ^14.1.0\n        \n            @angular/material : ^14.1.0\n        \n            @angular/platform-browser : ^14.1.0\n        \n            @angular/platform-browser-dynamic : ^14.1.0\n        \n            @angular/router : ^14.1.0\n        \n            @asymmetrik/ngx-leaflet : ^14.0.1\n        \n            @auth0/angular-jwt : ^5.1.0\n        \n            @mapbox/mapbox-gl-directions : ^4.1.0\n        \n            @ngrx/component-store : ^14.3.2\n        \n            @ngrx/effects : ^14.0.2\n        \n            @ngrx/entity : ^14.0.2\n        \n            @ngrx/router-store : ^14.3.0\n        \n            @ngrx/store : ^14.3.0\n        \n            @ngrx/store-devtools : ^14.1.0\n        \n            @ngx-tiny/time-picker : ^10.0.0\n        \n            @types/leaflet : ^1.7.11\n        \n            @types/leaflet.markercluster : ^1.5.1\n        \n            @types/mapbox__mapbox-gl-geocoder : ^4.7.2\n        \n            @types/socket.io-client : ^3.0.0\n        \n            angularx-qrcode : ^14.0.0\n        \n            express : ^4.18.1\n        \n            jwt-decode : ^3.1.2\n        \n            leaflet : ^1.8.0\n        \n            leaflet.markercluster : ^1.5.3\n        \n            mapbox-gl : ^2.9.2\n        \n            mapquest : ^0.2.0\n        \n            rxjs : ~7.5.0\n        \n            socket.io : ^4.5.2\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            slideTo   (src/.../route-animations.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/route-animations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        slideTo\n                        \n                    \n                \n            \n            \n                \nslideTo(direction: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    direction\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCityBus\nThis project was generated with Angular CLI version 14.1.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LinesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LinesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MapModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlannerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoutesRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SavedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SavedRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SidebarRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StopsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/msg.html":{"url":"interfaces/msg.html","title":"interface - msg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  msg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/socket-io.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            trip_ids\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        trip_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trip_ids:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { io, Socket } from 'socket.io-client';\nimport { AppState } from '../state/Reducers/api-reducer';\nimport * as select_actions from '../state/Actions/select.actions';\n\ninterface msg{\n  value: number,\n  trip_ids: number[]\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketIOService {\n\n  private socket!: Socket;\n\n  constructor(private store: Store) { \n    this.socket = io('http://localhost:3000');\n\n    this.socket.on('accepted', (data)=>{\n      console.log(data.msg);\n    });\n\n    this.socket.on('update', (data: msg) => {\n      this.store.dispatch(select_actions.updateOccupancy({\n        value: data.value, trip_ids: data.trip_ids\n      }));\n    });\n\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LinesModule\n\n\n\ncluster_LinesModule_declarations\n\n\n\ncluster_LinesModule_imports\n\n\n\ncluster_MapModule\n\n\n\ncluster_MapModule_declarations\n\n\n\ncluster_MapModule_exports\n\n\n\ncluster_PlannerModule\n\n\n\ncluster_PlannerModule_declarations\n\n\n\ncluster_PlannerModule_imports\n\n\n\ncluster_PlannerModule_providers\n\n\n\ncluster_SavedModule\n\n\n\ncluster_SavedModule_declarations\n\n\n\ncluster_SavedModule_imports\n\n\n\ncluster_SavedModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SidebarModule\n\n\n\ncluster_SidebarModule_declarations\n\n\n\ncluster_SidebarModule_imports\n\n\n\ncluster_SidebarModule_exports\n\n\n\ncluster_SidebarModule_providers\n\n\n\ncluster_StopsModule\n\n\n\ncluster_StopsModule_declarations\n\n\n\ncluster_StopsModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nMapModule\n\nMapModule\n\nAppModule -->\n\nMapModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nMapModule->SharedModule\n\n\n\n\n\nLinesModule\n\nLinesModule\n\nLinesModule -->\n\nMapModule->LinesModule\n\n\n\n\n\nMapAreaComponent \n\nMapAreaComponent \n\nMapAreaComponent  -->\n\nMapModule->MapAreaComponent \n\n\n\n\n\nPlannerModule\n\nPlannerModule\n\nPlannerModule -->\n\nMapModule->PlannerModule\n\n\n\n\n\nStopsModule\n\nStopsModule\n\nStopsModule -->\n\nMapModule->StopsModule\n\n\n\n\n\nSidebarModule\n\nSidebarModule\n\nAppModule -->\n\nSidebarModule->AppModule\n\n\n\n\n\nSideNavComponent \n\nSideNavComponent \n\nSideNavComponent  -->\n\nSidebarModule->SideNavComponent \n\n\n\n\n\nSocketIOService\n\nSocketIOService\n\nAppModule -->\n\nSocketIOService->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nRegisterComponent\n\nRegisterComponent\n\nAuthModule -->\n\nRegisterComponent->AuthModule\n\n\n\nPlannerModule -->\n\nAuthModule->PlannerModule\n\n\n\n\n\nSavedModule\n\nSavedModule\n\nSavedModule -->\n\nAuthModule->SavedModule\n\n\n\n\n\nAuthRoutingModule\n\nAuthRoutingModule\n\nAuthModule -->\n\nAuthRoutingModule->AuthModule\n\n\n\nSidebarModule -->\n\nSharedModule->SidebarModule\n\n\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\nLinesModule -->\n\nSharedModule->LinesModule\n\n\n\nPlannerModule -->\n\nSharedModule->PlannerModule\n\n\n\nSavedModule -->\n\nSharedModule->SavedModule\n\n\n\n\n\nBusEntityComponent \n\nBusEntityComponent \n\nBusEntityComponent  -->\n\nSharedModule->BusEntityComponent \n\n\n\n\n\nDoubleInputComponent \n\nDoubleInputComponent \n\nDoubleInputComponent  -->\n\nSharedModule->DoubleInputComponent \n\n\n\n\n\nDropdownOptionComponent \n\nDropdownOptionComponent \n\nDropdownOptionComponent  -->\n\nSharedModule->DropdownOptionComponent \n\n\n\n\n\nFilterPipe \n\nFilterPipe \n\nFilterPipe  -->\n\nSharedModule->FilterPipe \n\n\n\n\n\nMainInputComponent \n\nMainInputComponent \n\nMainInputComponent  -->\n\nSharedModule->MainInputComponent \n\n\n\n\n\nMiniMapComponent \n\nMiniMapComponent \n\nMiniMapComponent  -->\n\nSharedModule->MiniMapComponent \n\n\n\n\n\nMultipleDropdownComponent \n\nMultipleDropdownComponent \n\nMultipleDropdownComponent  -->\n\nSharedModule->MultipleDropdownComponent \n\n\n\n\n\nOptionComponent \n\nOptionComponent \n\nOptionComponent  -->\n\nSharedModule->OptionComponent \n\n\n\n\n\nSpinnerComponent \n\nSpinnerComponent \n\nSpinnerComponent  -->\n\nSharedModule->SpinnerComponent \n\n\n\n\n\nStationEntityComponent \n\nStationEntityComponent \n\nStationEntityComponent  -->\n\nSharedModule->StationEntityComponent \n\n\n\n\n\nToasterComponent \n\nToasterComponent \n\nToasterComponent  -->\n\nSharedModule->ToasterComponent \n\n\n\nStopsModule -->\n\nSharedModule->StopsModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLinesDropdownComponent\n\nLinesDropdownComponent\n\nLinesModule -->\n\nLinesDropdownComponent->LinesModule\n\n\n\n\n\nLinesMapComponent\n\nLinesMapComponent\n\nLinesModule -->\n\nLinesMapComponent->LinesModule\n\n\n\n\n\nListItemComponent\n\nListItemComponent\n\nLinesModule -->\n\nListItemComponent->LinesModule\n\n\n\n\n\nRouteDetailsComponent\n\nRouteDetailsComponent\n\nLinesModule -->\n\nRouteDetailsComponent->LinesModule\n\n\n\n\n\nRouteListComponent\n\nRouteListComponent\n\nLinesModule -->\n\nRouteListComponent->LinesModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nLinesModule -->\n\nSelectComponent->LinesModule\n\n\n\n\n\nSliderComponent\n\nSliderComponent\n\nLinesModule -->\n\nSliderComponent->LinesModule\n\n\n\n\n\nStationListComponent\n\nStationListComponent\n\nLinesModule -->\n\nStationListComponent->LinesModule\n\n\n\nAppComponent  -->\n\nLinesModule->AppComponent \n\n\n\n\n\nLinesRoutingModule\n\nLinesRoutingModule\n\nLinesModule -->\n\nLinesRoutingModule->LinesModule\n\n\n\n\n\nMapAreaComponent\n\nMapAreaComponent\n\nMapModule -->\n\nMapAreaComponent->MapModule\n\n\n\n\n\nBookOptionsComponent\n\nBookOptionsComponent\n\nPlannerModule -->\n\nBookOptionsComponent->PlannerModule\n\n\n\n\n\nBookingComponent\n\nBookingComponent\n\nPlannerModule -->\n\nBookingComponent->PlannerModule\n\n\n\n\n\nBookingPipe\n\nBookingPipe\n\nPlannerModule -->\n\nBookingPipe->PlannerModule\n\n\n\n\n\nBookingsComponent\n\nBookingsComponent\n\nPlannerModule -->\n\nBookingsComponent->PlannerModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nPlannerModule -->\n\nInputComponent->PlannerModule\n\n\n\n\n\nPlacesComponent\n\nPlacesComponent\n\nPlannerModule -->\n\nPlacesComponent->PlannerModule\n\n\n\n\n\nPlacesMapComponent\n\nPlacesMapComponent\n\nPlannerModule -->\n\nPlacesMapComponent->PlannerModule\n\n\n\n\n\nPlacesSliderComponent\n\nPlacesSliderComponent\n\nPlannerModule -->\n\nPlacesSliderComponent->PlannerModule\n\n\n\n\n\nQrComponent\n\nQrComponent\n\nPlannerModule -->\n\nQrComponent->PlannerModule\n\n\n\n\n\nStopDropDownComponent\n\nStopDropDownComponent\n\nPlannerModule -->\n\nStopDropDownComponent->PlannerModule\n\n\n\n\n\nTripComponent\n\nTripComponent\n\nPlannerModule -->\n\nTripComponent->PlannerModule\n\n\n\n\n\nTripDetailsComponent\n\nTripDetailsComponent\n\nPlannerModule -->\n\nTripDetailsComponent->PlannerModule\n\n\n\n\n\nTripListComponent\n\nTripListComponent\n\nPlannerModule -->\n\nTripListComponent->PlannerModule\n\n\n\n\n\nTripPlannerOptionsComponent\n\nTripPlannerOptionsComponent\n\nPlannerModule -->\n\nTripPlannerOptionsComponent->PlannerModule\n\n\n\n\n\nRoutesRoutingModule\n\nRoutesRoutingModule\n\nPlannerModule -->\n\nRoutesRoutingModule->PlannerModule\n\n\n\n\n\nDirectionsStore\n\nDirectionsStore\n\nPlannerModule -->\n\nDirectionsStore->PlannerModule\n\n\n\n\n\nSavedSliderComponent\n\nSavedSliderComponent\n\nSavedModule -->\n\nSavedSliderComponent->SavedModule\n\n\n\n\n\nSavedRoutingModule\n\nSavedRoutingModule\n\nSavedModule -->\n\nSavedRoutingModule->SavedModule\n\n\n\n\n\nDataService\n\nDataService\n\nSavedModule -->\n\nDataService->SavedModule\n\n\n\n\n\nBusEntityComponent\n\nBusEntityComponent\n\nSharedModule -->\n\nBusEntityComponent->SharedModule\n\n\n\n\n\nDoubleInputComponent\n\nDoubleInputComponent\n\nSharedModule -->\n\nDoubleInputComponent->SharedModule\n\n\n\n\n\nDropdownOptionComponent\n\nDropdownOptionComponent\n\nSharedModule -->\n\nDropdownOptionComponent->SharedModule\n\n\n\n\n\nFilterPipe\n\nFilterPipe\n\nSharedModule -->\n\nFilterPipe->SharedModule\n\n\n\n\n\nMainInputComponent\n\nMainInputComponent\n\nSharedModule -->\n\nMainInputComponent->SharedModule\n\n\n\n\n\nMiniMapComponent\n\nMiniMapComponent\n\nSharedModule -->\n\nMiniMapComponent->SharedModule\n\n\n\n\n\nMultipleDropdownComponent\n\nMultipleDropdownComponent\n\nSharedModule -->\n\nMultipleDropdownComponent->SharedModule\n\n\n\n\n\nOptionComponent\n\nOptionComponent\n\nSharedModule -->\n\nOptionComponent->SharedModule\n\n\n\n\n\nSpinnerComponent\n\nSpinnerComponent\n\nSharedModule -->\n\nSpinnerComponent->SharedModule\n\n\n\n\n\nStationEntityComponent\n\nStationEntityComponent\n\nSharedModule -->\n\nStationEntityComponent->SharedModule\n\n\n\n\n\nToasterComponent\n\nToasterComponent\n\nSharedModule -->\n\nToasterComponent->SharedModule\n\n\n\n\n\nSideNavComponent\n\nSideNavComponent\n\nSidebarModule -->\n\nSideNavComponent->SidebarModule\n\n\n\n\n\nSidebarOptionsComponent\n\nSidebarOptionsComponent\n\nSidebarModule -->\n\nSidebarOptionsComponent->SidebarModule\n\n\n\n\n\nSidebarRoutingModule\n\nSidebarRoutingModule\n\nSidebarModule -->\n\nSidebarRoutingModule->SidebarModule\n\n\n\n\n\nDataShareService\n\nDataShareService\n\nSidebarModule -->\n\nDataShareService->SidebarModule\n\n\n\n\n\nStopSliderComponent\n\nStopSliderComponent\n\nStopsModule -->\n\nStopSliderComponent->StopsModule\n\n\n\n\n\nStopsComponent\n\nStopsComponent\n\nStopsModule -->\n\nStopsComponent->StopsModule\n\n\n\n\n\nStopsMapComponent\n\nStopsMapComponent\n\nStopsModule -->\n\nStopsMapComponent->StopsModule\n\n\n\n\n\nStopsRoutingModule\n\nStopsRoutingModule\n\nStopsModule -->\n\nStopsRoutingModule->StopsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    41 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    58 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        54 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
